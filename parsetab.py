
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_CHUNK ARRAY_MERGE ARRAY_PUSH ARRAY_RAND ARRAY_SEARCH ARRAY_UNIQUE AS ASORT BREAK CLASS CLOSE COMA CONTINUE COUNT DECIMAL DIVIDE ECHO ELSE ELSEIF END EQUALS EXPLODE FALSE FGETC FGETCSV FGETS FILE FILE_GET_CONTENTS FNOMBRE FOREACH FPASSTHRU FREAD FSCANF FUNCTION ID IF IMPLODE IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL KSORT LCORCHET LPAREN MAYORQUE MENORQUE MINUS MODULO NEW NOT NULL NUMBER OBJECT_OPERATOR OPEN OR PARSE_INI_FILE PLUS PREG_SPLIT PRINT PRINT_R RCORCHET READFILE RETURN RPAREN SIZEOF SORT SPACESHIP STR_SPLIT SUFFLE TEXT TIMES TRUE UNSET VAR_DUMP VAR_EXPORT WHILE XORprograma : OPEN  declaracion CLOSE\n                    | OPEN declaracion\n                    | declaracion CLOSE\n                    | declaracion\n                    | CLOSE\n                    | OPENdeclaracion :  expression\n                        | expif\n                        | expelse\n                        | expresionlogica\n                        | declararvariable\n                        | creacionfunciones\n                        | returnvalores\n                        | operador_object\n                        | print\n                        | arreglos\n                        | while\n                        | foreach\n                        | clase\n                        | declaracioncreacionfunciones : FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET empty : argumentos :   ID\n                    | emptyreturnvalores :  RETURN termino END\n                      | RETURN creacionfunciones\n                      | empty expression : ID EQUALS operacion_matematica ENDoperacion_matematica :  termino operadores operacion_matematica\n                                | termino operadores termino\n    operadores : PLUS\n                    | MINUS\n                    | DIVIDE\n                    | TIMES\n                    | MODULOtermino : NUMBER\n                    | ID\n                    | DECIMALexpif : funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHETexpelse : expif ELSE LCORCHET declaracion RCORCHETfuncion_condicion : IF\n                          | ELSEIFcontrol_bucle : BREAK\n                        | CONTINUE\n                        | declaracionwhile : WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHETforeach : FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHETcomparacion : termino operadorcomparacion terminooperadorcomparacion : IS_EQUAL\n                            | IS_IDENTICAL\n                            | IS_NOT_EQUAL\n                            | IS_NOT_IDENTICAL\n                            | IS_GREATER_OR_EQUAL\n                            | IS_SMALLER_OR_EQUAL\n                            | SPACESHIP\n                            | MAYORQUE\n                            | MENORQUE expresionlogica : ID operadorlogico IDoperadorlogico : AND\n                        | OR\n                        | XOR\n                        | NOT declararvariable : ID EQUALS tipo END tipo : boolean\n            | NUMBER\n            | TEXT\n            | NULL\n            | archivos\n            | array\n            | new boolean : TRUE\n                | FALSEoperador_object : ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN ENDarray : ARRAY LPAREN valores_array RPAREN valores_array : elementos_array COMA valores_array\n                          | elementos_array\n                          | empty\n      elementos_array : NUMBER\n                          | TEXT\n                          | empty\n                          | boolean\n                          | array\n    new : NEW FNOMBRE print : funcion_print LPAREN argument RPAREN END\n                | funcion_print argument END\n                | ECHO LPAREN valores_echo RPAREN END\n                | ECHO valores_echo ENDargument : ID\n                    | TEXT valores_echo : argument COMA valores_echo\n                        | argument\n                        funcion_print : VAR_EXPORT\n                       | ECHO\n                        |  PRINT\n                        | PRINT_R\n                        | VAR_DUMParreglos : funcion_arreglo LPAREN ID RPARENfuncion_arreglo :  SUFFLE\n                        | ARRAY_MERGE\n                        | ARRAY_SEARCH\n                        | ARRAY_RAND\n                        | ARRAY_CHUNK\n                        | STR_SPLIT\n                        | PREG_SPLIT\n                        | ARRAY_UNIQUE\n                         | COUNT\n                         | SIZEOF\n                         | ARRAY_PUSH\n                         | SORT\n                         | ASORT\n                         | KSORT\n                         | UNSET\n                         | IMPLODE\n                        | EXPLODE archivos : funcion_archivo LPAREN TEXT COMA TEXT RPARENfuncion_archivo : FGETS\n                    | FREAD\n                    | FSCANF\n                    | FPASSTHRU\n                    | FGETCSV\n                    | FGETC\n                    | FILE_GET_CONTENTS\n                    | READFILE\n                    | FILE\n                    | PARSE_INI_FILE\n                    clase : CLASS FNOMBRE LCORCHET declaracion RCORCHET'
    
_lr_action_items = {'OPEN':([0,],[2,]),'CLOSE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,52,64,107,111,113,115,122,123,149,153,168,169,172,189,190,191,193,196,],[4,-22,53,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-27,79,-26,-58,-25,-85,-87,-28,-63,-97,-40,-84,-86,-126,-39,-21,-46,-73,-47,]),'ID':([0,2,21,23,24,31,32,33,34,55,56,57,58,59,60,61,68,72,75,76,77,80,116,120,125,126,127,128,129,130,135,136,137,138,139,140,141,142,143,144,151,154,165,167,170,192,],[18,18,66,70,70,-92,-94,-95,-96,66,107,-59,-60,-61,-62,66,70,70,117,66,119,18,70,18,66,-31,-32,-33,-34,-35,66,-49,-50,-51,-52,-53,-54,-55,-56,-57,171,173,18,18,18,18,]),'FUNCTION':([0,2,21,80,120,165,167,170,192,],[20,20,20,20,20,20,20,20,20,]),'RETURN':([0,2,80,120,165,167,170,192,],[21,21,21,21,21,21,21,21,]),'ECHO':([0,2,80,120,165,167,170,192,],[24,24,24,24,24,24,24,24,]),'WHILE':([0,2,80,120,165,167,170,192,],[26,26,26,26,26,26,26,26,]),'FOREACH':([0,2,80,120,165,167,170,192,],[27,27,27,27,27,27,27,27,]),'CLASS':([0,2,80,120,165,167,170,192,],[28,28,28,28,28,28,28,28,]),'IF':([0,2,80,120,165,167,170,192,],[29,29,29,29,29,29,29,29,]),'ELSEIF':([0,2,80,120,165,167,170,192,],[30,30,30,30,30,30,30,30,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,22,52,53,64,79,107,111,113,115,122,123,149,153,168,169,172,189,190,191,193,196,],[-22,0,-6,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-27,-2,-3,-26,-1,-58,-25,-85,-87,-28,-63,-97,-40,-84,-86,-126,-39,-21,-46,-73,-47,]),'VAR_EXPORT':([0,2,80,120,165,167,170,192,],[31,31,31,31,31,31,31,31,]),'PRINT':([0,2,80,120,165,167,170,192,],[32,32,32,32,32,32,32,32,]),'PRINT_R':([0,2,80,120,165,167,170,192,],[33,33,33,33,33,33,33,33,]),'VAR_DUMP':([0,2,80,120,165,167,170,192,],[34,34,34,34,34,34,34,34,]),'SUFFLE':([0,2,80,120,165,167,170,192,],[35,35,35,35,35,35,35,35,]),'ARRAY_MERGE':([0,2,80,120,165,167,170,192,],[36,36,36,36,36,36,36,36,]),'ARRAY_SEARCH':([0,2,80,120,165,167,170,192,],[37,37,37,37,37,37,37,37,]),'ARRAY_RAND':([0,2,80,120,165,167,170,192,],[38,38,38,38,38,38,38,38,]),'ARRAY_CHUNK':([0,2,80,120,165,167,170,192,],[39,39,39,39,39,39,39,39,]),'STR_SPLIT':([0,2,80,120,165,167,170,192,],[40,40,40,40,40,40,40,40,]),'PREG_SPLIT':([0,2,80,120,165,167,170,192,],[41,41,41,41,41,41,41,41,]),'ARRAY_UNIQUE':([0,2,80,120,165,167,170,192,],[42,42,42,42,42,42,42,42,]),'COUNT':([0,2,80,120,165,167,170,192,],[43,43,43,43,43,43,43,43,]),'SIZEOF':([0,2,80,120,165,167,170,192,],[44,44,44,44,44,44,44,44,]),'ARRAY_PUSH':([0,2,80,120,165,167,170,192,],[45,45,45,45,45,45,45,45,]),'SORT':([0,2,80,120,165,167,170,192,],[46,46,46,46,46,46,46,46,]),'ASORT':([0,2,80,120,165,167,170,192,],[47,47,47,47,47,47,47,47,]),'KSORT':([0,2,80,120,165,167,170,192,],[48,48,48,48,48,48,48,48,]),'UNSET':([0,2,80,120,165,167,170,192,],[49,49,49,49,49,49,49,49,]),'IMPLODE':([0,2,80,120,165,167,170,192,],[50,50,50,50,50,50,50,50,]),'EXPLODE':([0,2,80,120,165,167,170,192,],[51,51,51,51,51,51,51,51,]),'RCORCHET':([5,6,7,8,9,10,11,12,13,14,15,16,17,22,64,80,107,111,113,115,120,121,122,123,149,152,153,165,167,168,169,170,172,179,180,181,182,183,184,189,190,191,192,193,195,196,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-27,-26,-22,-58,-25,-85,-87,-22,153,-28,-63,-97,172,-40,-22,-22,-84,-86,-22,-126,189,190,191,-43,-44,-20,-39,-21,-46,-22,-73,196,-47,]),'ELSE':([6,189,],[54,-39,]),'EQUALS':([18,],[55,]),'AND':([18,],[57,]),'OR':([18,],[58,]),'XOR':([18,],[59,]),'NOT':([18,],[60,]),'LPAREN':([19,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,62,94,95,97,98,99,100,101,102,103,104,105,106,124,],[61,68,72,75,76,77,-41,-42,-92,-94,-95,-96,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,110,131,132,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,154,]),'FNOMBRE':([20,28,83,96,],[62,78,124,133,]),'NUMBER':([21,55,61,76,125,126,127,128,129,130,132,135,136,137,138,139,140,141,142,143,144,178,],[65,86,65,65,65,-31,-32,-33,-34,-35,161,65,-49,-50,-51,-52,-53,-54,-55,-56,-57,161,]),'DECIMAL':([21,55,61,76,125,126,127,128,129,130,135,136,137,138,139,140,141,142,143,144,],[67,67,67,67,67,-31,-32,-33,-34,-35,67,-49,-50,-51,-52,-53,-54,-55,-56,-57,]),'TEXT':([23,24,31,32,33,34,55,68,72,116,131,132,176,178,],[71,71,-92,-94,-95,-96,87,71,71,71,157,162,187,162,]),'LCORCHET':([54,78,134,145,150,185,],[80,120,165,167,170,192,]),'OBJECT_OPERATOR':([55,],[83,]),'NULL':([55,],[88,]),'TRUE':([55,132,178,],[92,92,92,]),'FALSE':([55,132,178,],[93,93,93,]),'ARRAY':([55,132,178,],[95,95,95,]),'NEW':([55,],[96,]),'FGETS':([55,],[97,]),'FREAD':([55,],[98,]),'FSCANF':([55,],[99,]),'FPASSTHRU':([55,],[100,]),'FGETCSV':([55,],[101,]),'FGETC':([55,],[102,]),'FILE_GET_CONTENTS':([55,],[103,]),'READFILE':([55,],[104,]),'FILE':([55,],[105,]),'PARSE_INI_FILE':([55,],[106,]),'END':([63,65,66,67,69,70,71,73,74,81,82,85,86,87,88,89,90,91,92,93,133,146,147,148,155,156,177,186,194,],[111,-36,-37,-38,113,-88,-89,115,-91,122,123,-64,-65,-66,-67,-68,-69,-70,-71,-72,-83,168,169,-90,-30,-29,-74,193,-115,]),'IS_EQUAL':([65,66,67,109,],[-36,-37,-38,136,]),'IS_IDENTICAL':([65,66,67,109,],[-36,-37,-38,137,]),'IS_NOT_EQUAL':([65,66,67,109,],[-36,-37,-38,138,]),'IS_NOT_IDENTICAL':([65,66,67,109,],[-36,-37,-38,139,]),'IS_GREATER_OR_EQUAL':([65,66,67,109,],[-36,-37,-38,140,]),'IS_SMALLER_OR_EQUAL':([65,66,67,109,],[-36,-37,-38,141,]),'SPACESHIP':([65,66,67,109,],[-36,-37,-38,142,]),'MAYORQUE':([65,66,67,109,],[-36,-37,-38,143,]),'MENORQUE':([65,66,67,109,],[-36,-37,-38,144,]),'PLUS':([65,66,67,84,86,155,],[-36,-37,-38,126,-36,126,]),'MINUS':([65,66,67,84,86,155,],[-36,-37,-38,127,-36,127,]),'DIVIDE':([65,66,67,84,86,155,],[-36,-37,-38,128,-36,128,]),'TIMES':([65,66,67,84,86,155,],[-36,-37,-38,129,-36,129,]),'MODULO':([65,66,67,84,86,155,],[-36,-37,-38,130,-36,130,]),'RPAREN':([65,66,67,70,71,74,92,93,108,110,112,114,117,118,132,148,154,158,159,160,161,162,163,164,166,171,173,174,175,177,178,187,188,],[-36,-37,-38,-88,-89,-91,-71,-72,134,145,146,147,149,150,-22,-90,-22,177,-76,-77,-78,-79,-81,-82,-48,185,-23,186,-24,-74,-22,194,-75,]),'COMA':([70,71,74,92,93,132,157,159,160,161,162,163,164,177,178,],[-88,-89,116,-71,-72,-22,176,178,-80,-78,-79,-81,-82,-74,-22,]),'AS':([119,],[151,]),'BREAK':([170,192,],[182,182,]),'CONTINUE':([170,192,],[183,183,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracion':([0,2,80,120,165,167,170,192,],[3,52,121,152,179,180,184,184,]),'expression':([0,2,80,120,165,167,170,192,],[5,5,5,5,5,5,5,5,]),'expif':([0,2,80,120,165,167,170,192,],[6,6,6,6,6,6,6,6,]),'expelse':([0,2,80,120,165,167,170,192,],[7,7,7,7,7,7,7,7,]),'expresionlogica':([0,2,80,120,165,167,170,192,],[8,8,8,8,8,8,8,8,]),'declararvariable':([0,2,80,120,165,167,170,192,],[9,9,9,9,9,9,9,9,]),'creacionfunciones':([0,2,21,80,120,165,167,170,192,],[10,10,64,10,10,10,10,10,10,]),'returnvalores':([0,2,80,120,165,167,170,192,],[11,11,11,11,11,11,11,11,]),'operador_object':([0,2,80,120,165,167,170,192,],[12,12,12,12,12,12,12,12,]),'print':([0,2,80,120,165,167,170,192,],[13,13,13,13,13,13,13,13,]),'arreglos':([0,2,80,120,165,167,170,192,],[14,14,14,14,14,14,14,14,]),'while':([0,2,80,120,165,167,170,192,],[15,15,15,15,15,15,15,15,]),'foreach':([0,2,80,120,165,167,170,192,],[16,16,16,16,16,16,16,16,]),'clase':([0,2,80,120,165,167,170,192,],[17,17,17,17,17,17,17,17,]),'funcion_condicion':([0,2,80,120,165,167,170,192,],[19,19,19,19,19,19,19,19,]),'empty':([0,2,80,120,132,154,165,167,170,178,192,],[22,22,22,22,160,175,22,22,22,160,22,]),'funcion_print':([0,2,80,120,165,167,170,192,],[23,23,23,23,23,23,23,23,]),'funcion_arreglo':([0,2,80,120,165,167,170,192,],[25,25,25,25,25,25,25,25,]),'operadorlogico':([18,],[56,]),'termino':([21,55,61,76,125,135,],[63,84,109,109,155,166,]),'argument':([23,24,68,72,116,],[69,74,112,74,74,]),'valores_echo':([24,72,116,],[73,114,148,]),'operacion_matematica':([55,125,],[81,156,]),'tipo':([55,],[82,]),'boolean':([55,132,178,],[85,163,163,]),'archivos':([55,],[89,]),'array':([55,132,178,],[90,164,164,]),'new':([55,],[91,]),'funcion_archivo':([55,],[94,]),'comparacion':([61,76,],[108,118,]),'operadores':([84,155,],[125,125,]),'operadorcomparacion':([109,],[135,]),'valores_array':([132,178,],[158,188,]),'elementos_array':([132,178,],[159,159,]),'argumentos':([154,],[174,]),'control_bucle':([170,192,],[181,195,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> OPEN declaracion CLOSE','programa',3,'p_programa','sintactico.py',11),
  ('programa -> OPEN declaracion','programa',2,'p_programa','sintactico.py',12),
  ('programa -> declaracion CLOSE','programa',2,'p_programa','sintactico.py',13),
  ('programa -> declaracion','programa',1,'p_programa','sintactico.py',14),
  ('programa -> CLOSE','programa',1,'p_programa','sintactico.py',15),
  ('programa -> OPEN','programa',1,'p_programa','sintactico.py',16),
  ('declaracion -> expression','declaracion',1,'p_declaracion','sintactico.py',20),
  ('declaracion -> expif','declaracion',1,'p_declaracion','sintactico.py',21),
  ('declaracion -> expelse','declaracion',1,'p_declaracion','sintactico.py',22),
  ('declaracion -> expresionlogica','declaracion',1,'p_declaracion','sintactico.py',23),
  ('declaracion -> declararvariable','declaracion',1,'p_declaracion','sintactico.py',24),
  ('declaracion -> creacionfunciones','declaracion',1,'p_declaracion','sintactico.py',25),
  ('declaracion -> returnvalores','declaracion',1,'p_declaracion','sintactico.py',26),
  ('declaracion -> operador_object','declaracion',1,'p_declaracion','sintactico.py',27),
  ('declaracion -> print','declaracion',1,'p_declaracion','sintactico.py',28),
  ('declaracion -> arreglos','declaracion',1,'p_declaracion','sintactico.py',29),
  ('declaracion -> while','declaracion',1,'p_declaracion','sintactico.py',30),
  ('declaracion -> foreach','declaracion',1,'p_declaracion','sintactico.py',31),
  ('declaracion -> clase','declaracion',1,'p_declaracion','sintactico.py',32),
  ('declaracion -> declaracion','declaracion',1,'p_declaracion','sintactico.py',33),
  ('creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET','creacionfunciones',7,'p_creacionfunciones','sintactico.py',38),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',41),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintactico.py',44),
  ('argumentos -> empty','argumentos',1,'p_argumentos','sintactico.py',45),
  ('returnvalores -> RETURN termino END','returnvalores',3,'p_returnvalores','sintactico.py',49),
  ('returnvalores -> RETURN creacionfunciones','returnvalores',2,'p_returnvalores','sintactico.py',50),
  ('returnvalores -> empty','returnvalores',1,'p_returnvalores','sintactico.py',51),
  ('expression -> ID EQUALS operacion_matematica END','expression',4,'p_expression_math','sintactico.py',55),
  ('operacion_matematica -> termino operadores operacion_matematica','operacion_matematica',3,'p_operacion_matematica','sintactico.py',58),
  ('operacion_matematica -> termino operadores termino','operacion_matematica',3,'p_operacion_matematica','sintactico.py',59),
  ('operadores -> PLUS','operadores',1,'p_operadores','sintactico.py',63),
  ('operadores -> MINUS','operadores',1,'p_operadores','sintactico.py',64),
  ('operadores -> DIVIDE','operadores',1,'p_operadores','sintactico.py',65),
  ('operadores -> TIMES','operadores',1,'p_operadores','sintactico.py',66),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',67),
  ('termino -> NUMBER','termino',1,'p_termino','sintactico.py',71),
  ('termino -> ID','termino',1,'p_termino','sintactico.py',72),
  ('termino -> DECIMAL','termino',1,'p_termino','sintactico.py',73),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET','expif',7,'p_expif','sintactico.py',77),
  ('expelse -> expif ELSE LCORCHET declaracion RCORCHET','expelse',5,'p_expelse','sintactico.py',80),
  ('funcion_condicion -> IF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',83),
  ('funcion_condicion -> ELSEIF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',84),
  ('control_bucle -> BREAK','control_bucle',1,'p_control_bucle','sintactico.py',87),
  ('control_bucle -> CONTINUE','control_bucle',1,'p_control_bucle','sintactico.py',88),
  ('control_bucle -> declaracion','control_bucle',1,'p_control_bucle','sintactico.py',89),
  ('while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET','while',7,'p_while','sintactico.py',92),
  ('foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET','foreach',9,'p_foreach','sintactico.py',95),
  ('comparacion -> termino operadorcomparacion termino','comparacion',3,'p_comparacion','sintactico.py',99),
  ('operadorcomparacion -> IS_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',103),
  ('operadorcomparacion -> IS_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',104),
  ('operadorcomparacion -> IS_NOT_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',105),
  ('operadorcomparacion -> IS_NOT_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',106),
  ('operadorcomparacion -> IS_GREATER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',107),
  ('operadorcomparacion -> IS_SMALLER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',108),
  ('operadorcomparacion -> SPACESHIP','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',109),
  ('operadorcomparacion -> MAYORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',110),
  ('operadorcomparacion -> MENORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',111),
  ('expresionlogica -> ID operadorlogico ID','expresionlogica',3,'p_expresionlogica','sintactico.py',120),
  ('operadorlogico -> AND','operadorlogico',1,'p_operadorlogico','sintactico.py',123),
  ('operadorlogico -> OR','operadorlogico',1,'p_operadorlogico','sintactico.py',124),
  ('operadorlogico -> XOR','operadorlogico',1,'p_operadorlogico','sintactico.py',125),
  ('operadorlogico -> NOT','operadorlogico',1,'p_operadorlogico','sintactico.py',126),
  ('declararvariable -> ID EQUALS tipo END','declararvariable',4,'p_declararvariable','sintactico.py',130),
  ('tipo -> boolean','tipo',1,'p_tipo','sintactico.py',134),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',135),
  ('tipo -> TEXT','tipo',1,'p_tipo','sintactico.py',136),
  ('tipo -> NULL','tipo',1,'p_tipo','sintactico.py',137),
  ('tipo -> archivos','tipo',1,'p_tipo','sintactico.py',138),
  ('tipo -> array','tipo',1,'p_tipo','sintactico.py',139),
  ('tipo -> new','tipo',1,'p_tipo','sintactico.py',140),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',143),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',144),
  ('operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END','operador_object',8,'p_operador_object','sintactico.py',147),
  ('array -> ARRAY LPAREN valores_array RPAREN','array',4,'p_array','sintactico.py',150),
  ('valores_array -> elementos_array COMA valores_array','valores_array',3,'p_valores_array','sintactico.py',153),
  ('valores_array -> elementos_array','valores_array',1,'p_valores_array','sintactico.py',154),
  ('valores_array -> empty','valores_array',1,'p_valores_array','sintactico.py',155),
  ('elementos_array -> NUMBER','elementos_array',1,'p_elementos_array','sintactico.py',158),
  ('elementos_array -> TEXT','elementos_array',1,'p_elementos_array','sintactico.py',159),
  ('elementos_array -> empty','elementos_array',1,'p_elementos_array','sintactico.py',160),
  ('elementos_array -> boolean','elementos_array',1,'p_elementos_array','sintactico.py',161),
  ('elementos_array -> array','elementos_array',1,'p_elementos_array','sintactico.py',162),
  ('new -> NEW FNOMBRE','new',2,'p_new','sintactico.py',166),
  ('print -> funcion_print LPAREN argument RPAREN END','print',5,'p_print','sintactico.py',181),
  ('print -> funcion_print argument END','print',3,'p_print','sintactico.py',182),
  ('print -> ECHO LPAREN valores_echo RPAREN END','print',5,'p_print','sintactico.py',183),
  ('print -> ECHO valores_echo END','print',3,'p_print','sintactico.py',184),
  ('argument -> ID','argument',1,'p_argument','sintactico.py',187),
  ('argument -> TEXT','argument',1,'p_argument','sintactico.py',188),
  ('valores_echo -> argument COMA valores_echo','valores_echo',3,'p_valores_echo','sintactico.py',191),
  ('valores_echo -> argument','valores_echo',1,'p_valores_echo','sintactico.py',192),
  ('funcion_print -> VAR_EXPORT','funcion_print',1,'p_funcion_print','sintactico.py',196),
  ('funcion_print -> ECHO','funcion_print',1,'p_funcion_print','sintactico.py',197),
  ('funcion_print -> PRINT','funcion_print',1,'p_funcion_print','sintactico.py',198),
  ('funcion_print -> PRINT_R','funcion_print',1,'p_funcion_print','sintactico.py',199),
  ('funcion_print -> VAR_DUMP','funcion_print',1,'p_funcion_print','sintactico.py',200),
  ('arreglos -> funcion_arreglo LPAREN ID RPAREN','arreglos',4,'p_arreglos','sintactico.py',203),
  ('funcion_arreglo -> SUFFLE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',206),
  ('funcion_arreglo -> ARRAY_MERGE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',207),
  ('funcion_arreglo -> ARRAY_SEARCH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',208),
  ('funcion_arreglo -> ARRAY_RAND','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',209),
  ('funcion_arreglo -> ARRAY_CHUNK','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',210),
  ('funcion_arreglo -> STR_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',211),
  ('funcion_arreglo -> PREG_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',212),
  ('funcion_arreglo -> ARRAY_UNIQUE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',213),
  ('funcion_arreglo -> COUNT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',214),
  ('funcion_arreglo -> SIZEOF','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',215),
  ('funcion_arreglo -> ARRAY_PUSH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',216),
  ('funcion_arreglo -> SORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',217),
  ('funcion_arreglo -> ASORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',218),
  ('funcion_arreglo -> KSORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',219),
  ('funcion_arreglo -> UNSET','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',220),
  ('funcion_arreglo -> IMPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',221),
  ('funcion_arreglo -> EXPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',222),
  ('archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN','archivos',6,'p_archivos','sintactico.py',225),
  ('funcion_archivo -> FGETS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',228),
  ('funcion_archivo -> FREAD','funcion_archivo',1,'p_funcion_archivo','sintactico.py',229),
  ('funcion_archivo -> FSCANF','funcion_archivo',1,'p_funcion_archivo','sintactico.py',230),
  ('funcion_archivo -> FPASSTHRU','funcion_archivo',1,'p_funcion_archivo','sintactico.py',231),
  ('funcion_archivo -> FGETCSV','funcion_archivo',1,'p_funcion_archivo','sintactico.py',232),
  ('funcion_archivo -> FGETC','funcion_archivo',1,'p_funcion_archivo','sintactico.py',233),
  ('funcion_archivo -> FILE_GET_CONTENTS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',234),
  ('funcion_archivo -> READFILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',235),
  ('funcion_archivo -> FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',236),
  ('funcion_archivo -> PARSE_INI_FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',237),
  ('clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET','clase',5,'p_clase','sintactico.py',241),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_CHUNK ARRAY_MERGE ARRAY_PUSH ARRAY_RAND ARRAY_SEARCH ARRAY_UNIQUE AS ASORT BREAK CLASS CLOSE COMA CONTINUE COUNT DECIMAL DIVIDE ECHO ELSE ELSEIF END EQUALS EXPLODE FALSE FGETC FGETCSV FGETS FILE FILE_GET_CONTENTS FNOMBRE FOREACH FPASSTHRU FREAD FSCANF FUNCTION ID IF IMPLODE IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL KSORT LCORCHET LPAREN MAYORQUE MENORQUE MINUS MODULO NEW NOT NULL NUMBER OBJECT_OPERATOR OPEN OR PARSE_INI_FILE PLUS PREG_SPLIT PRINT PRINT_R RCORCHET READFILE RETURN RPAREN SIZEOF SORT SPACESHIP STR_SPLIT SUFFLE TEXT TIMES TRUE UNSET VAR_DUMP VAR_EXPORT WHILE XORprograma : OPEN  declaracion CLOSE\n                    | OPEN declaracion\n                    | declaracion CLOSE\n                    | declaracion\n                    | CLOSE\n                    | OPENdeclaracion :  expression\n                        | expif\n                        | expelse\n                        | expresionlogica\n                        | declararvariable\n                        | creacionfunciones\n                        | returnvalores\n                        | operador_object\n                        | print\n                        | arreglos\n                        | while\n                        | foreach\n                        | clase\n                        | declaracioncreacionfunciones : FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET empty : argumentos :   ID\n                    | emptyreturnvalores :  RETURN termino END\n                      | RETURN creacionfunciones\n                      | empty expression : ID EQUALS operacion_matematica ENDoperacion_matematica :  termino operadores operacion_matematica\n                                | termino operadores termino\n    operadores : PLUS\n                    | MINUS\n                    | DIVIDE\n                    | TIMES\n                    | MODULOtermino : NUMBER\n                    | ID\n                    | DECIMALexpif : funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHETexpelse : expif ELSE LCORCHET declaracion RCORCHETfuncion_condicion : IF\n                          | ELSEIFcontrol_bucle : BREAK\n                        | CONTINUE\n                        | declaracionwhile : WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHETforeach : FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHETcomparacion : termino operadorcomparacion terminooperadorcomparacion : IS_EQUAL\n                            | IS_IDENTICAL\n                            | IS_NOT_EQUAL\n                            | IS_NOT_IDENTICAL\n                            | IS_GREATER_OR_EQUAL\n                            | IS_SMALLER_OR_EQUAL\n                            | SPACESHIP\n                            | MAYORQUE\n                            | MENORQUE expresionlogica : ID operadorlogico IDoperadorlogico : AND\n                        | OR\n                        | XOR\n                        | NOT declararvariable : ID EQUALS tipo END tipo : boolean\n            | NUMBER\n            | TEXT\n            | NULL\n            | archivos\n            | array\n            | new boolean : TRUE\n                | FALSEoperador_object : ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN ENDarray : ARRAY LPAREN valores_array RPAREN valores_array : elementos_array COMA valores_array\n                          | elementos_array\n                          | empty\n      elementos_array : NUMBER\n                          | TEXT\n                          | empty\n                          | boolean\n                          | array\n    new : NEW FNOMBRE print : funcion_print LPAREN argument RPAREN ENDargument : ID\n                    | TEXTfuncion_print : VAR_EXPORT\n                       | ECHO\n                        |  PRINT\n                        | PRINT_R\n                        | VAR_DUMParreglos : funcion_arreglo LPAREN ID RPARENfuncion_arreglo :  SUFFLE\n                        | ARRAY_MERGE\n                        | ARRAY_SEARCH\n                        | ARRAY_RAND\n                        | ARRAY_CHUNK\n                        | STR_SPLIT\n                        | PREG_SPLIT\n                        | ARRAY_UNIQUE\n                         | COUNT\n                         | SIZEOF\n                         | ARRAY_PUSH\n                         | SORT\n                         | ASORT\n                         | KSORT\n                         | UNSET\n                         | IMPLODE\n                        | EXPLODE archivos : funcion_archivo LPAREN TEXT COMA TEXT RPARENfuncion_archivo : FGETS\n                    | FREAD\n                    | FSCANF\n                    | FPASSTHRU\n                    | FGETCSV\n                    | FGETC\n                    | FILE_GET_CONTENTS\n                    | READFILE\n                    | FILE\n                    | PARSE_INI_FILE\n                    clase : CLASS FNOMBRE LCORCHET declaracion RCORCHET'
    
_lr_action_items = {'OPEN':([0,],[2,]),'CLOSE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,52,64,101,105,114,115,139,143,158,161,178,179,180,182,185,],[4,-22,53,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-27,73,-26,-58,-25,-28,-63,-92,-40,-84,-121,-39,-21,-46,-73,-47,]),'ID':([0,2,21,55,56,57,58,59,60,61,68,69,70,71,74,112,117,118,119,120,121,122,127,128,129,130,131,132,133,134,135,136,141,144,155,157,159,181,],[18,18,66,66,101,-59,-60,-61,-62,66,107,109,66,111,18,18,66,-31,-32,-33,-34,-35,66,-49,-50,-51,-52,-53,-54,-55,-56,-57,160,162,18,18,18,18,]),'FUNCTION':([0,2,21,74,112,155,157,159,181,],[20,20,20,20,20,20,20,20,20,]),'RETURN':([0,2,74,112,155,157,159,181,],[21,21,21,21,21,21,21,21,]),'WHILE':([0,2,74,112,155,157,159,181,],[25,25,25,25,25,25,25,25,]),'FOREACH':([0,2,74,112,155,157,159,181,],[26,26,26,26,26,26,26,26,]),'CLASS':([0,2,74,112,155,157,159,181,],[27,27,27,27,27,27,27,27,]),'IF':([0,2,74,112,155,157,159,181,],[28,28,28,28,28,28,28,28,]),'ELSEIF':([0,2,74,112,155,157,159,181,],[29,29,29,29,29,29,29,29,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,22,52,53,64,73,101,105,114,115,139,143,158,161,178,179,180,182,185,],[-22,0,-6,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-27,-2,-3,-26,-1,-58,-25,-28,-63,-92,-40,-84,-121,-39,-21,-46,-73,-47,]),'VAR_EXPORT':([0,2,74,112,155,157,159,181,],[30,30,30,30,30,30,30,30,]),'ECHO':([0,2,74,112,155,157,159,181,],[31,31,31,31,31,31,31,31,]),'PRINT':([0,2,74,112,155,157,159,181,],[32,32,32,32,32,32,32,32,]),'PRINT_R':([0,2,74,112,155,157,159,181,],[33,33,33,33,33,33,33,33,]),'VAR_DUMP':([0,2,74,112,155,157,159,181,],[34,34,34,34,34,34,34,34,]),'SUFFLE':([0,2,74,112,155,157,159,181,],[35,35,35,35,35,35,35,35,]),'ARRAY_MERGE':([0,2,74,112,155,157,159,181,],[36,36,36,36,36,36,36,36,]),'ARRAY_SEARCH':([0,2,74,112,155,157,159,181,],[37,37,37,37,37,37,37,37,]),'ARRAY_RAND':([0,2,74,112,155,157,159,181,],[38,38,38,38,38,38,38,38,]),'ARRAY_CHUNK':([0,2,74,112,155,157,159,181,],[39,39,39,39,39,39,39,39,]),'STR_SPLIT':([0,2,74,112,155,157,159,181,],[40,40,40,40,40,40,40,40,]),'PREG_SPLIT':([0,2,74,112,155,157,159,181,],[41,41,41,41,41,41,41,41,]),'ARRAY_UNIQUE':([0,2,74,112,155,157,159,181,],[42,42,42,42,42,42,42,42,]),'COUNT':([0,2,74,112,155,157,159,181,],[43,43,43,43,43,43,43,43,]),'SIZEOF':([0,2,74,112,155,157,159,181,],[44,44,44,44,44,44,44,44,]),'ARRAY_PUSH':([0,2,74,112,155,157,159,181,],[45,45,45,45,45,45,45,45,]),'SORT':([0,2,74,112,155,157,159,181,],[46,46,46,46,46,46,46,46,]),'ASORT':([0,2,74,112,155,157,159,181,],[47,47,47,47,47,47,47,47,]),'KSORT':([0,2,74,112,155,157,159,181,],[48,48,48,48,48,48,48,48,]),'UNSET':([0,2,74,112,155,157,159,181,],[49,49,49,49,49,49,49,49,]),'IMPLODE':([0,2,74,112,155,157,159,181,],[50,50,50,50,50,50,50,50,]),'EXPLODE':([0,2,74,112,155,157,159,181,],[51,51,51,51,51,51,51,51,]),'RCORCHET':([5,6,7,8,9,10,11,12,13,14,15,16,17,22,64,74,101,105,112,113,114,115,139,142,143,155,157,158,159,161,168,169,170,171,172,173,178,179,180,181,182,184,185,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-27,-26,-22,-58,-25,-22,143,-28,-63,-92,161,-40,-22,-22,-84,-22,-121,178,179,180,-43,-44,-20,-39,-21,-46,-22,-73,185,-47,]),'ELSE':([6,178,],[54,-39,]),'EQUALS':([18,],[55,]),'AND':([18,],[57,]),'OR':([18,],[58,]),'XOR':([18,],[59,]),'NOT':([18,],[60,]),'LPAREN':([19,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,62,88,89,91,92,93,94,95,96,97,98,99,100,116,],[61,68,69,70,71,-41,-42,-87,-88,-89,-90,-91,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,104,123,124,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,144,]),'FNOMBRE':([20,27,77,90,],[62,72,116,125,]),'NUMBER':([21,55,61,70,117,118,119,120,121,122,124,127,128,129,130,131,132,133,134,135,136,167,],[65,80,65,65,65,-31,-32,-33,-34,-35,151,65,-49,-50,-51,-52,-53,-54,-55,-56,-57,151,]),'DECIMAL':([21,55,61,70,117,118,119,120,121,122,127,128,129,130,131,132,133,134,135,136,],[67,67,67,67,67,-31,-32,-33,-34,-35,67,-49,-50,-51,-52,-53,-54,-55,-56,-57,]),'LCORCHET':([54,72,126,137,140,174,],[74,112,155,157,159,181,]),'OBJECT_OPERATOR':([55,],[77,]),'TEXT':([55,68,123,124,165,167,],[81,108,147,152,176,152,]),'NULL':([55,],[82,]),'TRUE':([55,124,167,],[86,86,86,]),'FALSE':([55,124,167,],[87,87,87,]),'ARRAY':([55,124,167,],[89,89,89,]),'NEW':([55,],[90,]),'FGETS':([55,],[91,]),'FREAD':([55,],[92,]),'FSCANF':([55,],[93,]),'FPASSTHRU':([55,],[94,]),'FGETCSV':([55,],[95,]),'FGETC':([55,],[96,]),'FILE_GET_CONTENTS':([55,],[97,]),'READFILE':([55,],[98,]),'FILE':([55,],[99,]),'PARSE_INI_FILE':([55,],[100,]),'END':([63,65,66,67,75,76,79,80,81,82,83,84,85,86,87,125,138,145,146,166,175,183,],[105,-36,-37,-38,114,115,-64,-65,-66,-67,-68,-69,-70,-71,-72,-83,158,-30,-29,-74,182,-110,]),'IS_EQUAL':([65,66,67,103,],[-36,-37,-38,128,]),'IS_IDENTICAL':([65,66,67,103,],[-36,-37,-38,129,]),'IS_NOT_EQUAL':([65,66,67,103,],[-36,-37,-38,130,]),'IS_NOT_IDENTICAL':([65,66,67,103,],[-36,-37,-38,131,]),'IS_GREATER_OR_EQUAL':([65,66,67,103,],[-36,-37,-38,132,]),'IS_SMALLER_OR_EQUAL':([65,66,67,103,],[-36,-37,-38,133,]),'SPACESHIP':([65,66,67,103,],[-36,-37,-38,134,]),'MAYORQUE':([65,66,67,103,],[-36,-37,-38,135,]),'MENORQUE':([65,66,67,103,],[-36,-37,-38,136,]),'PLUS':([65,66,67,78,80,145,],[-36,-37,-38,118,-36,118,]),'MINUS':([65,66,67,78,80,145,],[-36,-37,-38,119,-36,119,]),'DIVIDE':([65,66,67,78,80,145,],[-36,-37,-38,120,-36,120,]),'TIMES':([65,66,67,78,80,145,],[-36,-37,-38,121,-36,121,]),'MODULO':([65,66,67,78,80,145,],[-36,-37,-38,122,-36,122,]),'RPAREN':([65,66,67,86,87,102,104,106,107,108,109,110,124,144,148,149,150,151,152,153,154,156,160,162,163,164,166,167,176,177,],[-36,-37,-38,-71,-72,126,137,138,-85,-86,139,140,-22,-22,166,-76,-77,-78,-79,-81,-82,-48,174,-23,175,-24,-74,-22,183,-75,]),'COMA':([86,87,124,147,149,150,151,152,153,154,166,167,],[-71,-72,-22,165,167,-80,-78,-79,-81,-82,-74,-22,]),'AS':([111,],[141,]),'BREAK':([159,181,],[171,171,]),'CONTINUE':([159,181,],[172,172,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracion':([0,2,74,112,155,157,159,181,],[3,52,113,142,168,169,173,173,]),'expression':([0,2,74,112,155,157,159,181,],[5,5,5,5,5,5,5,5,]),'expif':([0,2,74,112,155,157,159,181,],[6,6,6,6,6,6,6,6,]),'expelse':([0,2,74,112,155,157,159,181,],[7,7,7,7,7,7,7,7,]),'expresionlogica':([0,2,74,112,155,157,159,181,],[8,8,8,8,8,8,8,8,]),'declararvariable':([0,2,74,112,155,157,159,181,],[9,9,9,9,9,9,9,9,]),'creacionfunciones':([0,2,21,74,112,155,157,159,181,],[10,10,64,10,10,10,10,10,10,]),'returnvalores':([0,2,74,112,155,157,159,181,],[11,11,11,11,11,11,11,11,]),'operador_object':([0,2,74,112,155,157,159,181,],[12,12,12,12,12,12,12,12,]),'print':([0,2,74,112,155,157,159,181,],[13,13,13,13,13,13,13,13,]),'arreglos':([0,2,74,112,155,157,159,181,],[14,14,14,14,14,14,14,14,]),'while':([0,2,74,112,155,157,159,181,],[15,15,15,15,15,15,15,15,]),'foreach':([0,2,74,112,155,157,159,181,],[16,16,16,16,16,16,16,16,]),'clase':([0,2,74,112,155,157,159,181,],[17,17,17,17,17,17,17,17,]),'funcion_condicion':([0,2,74,112,155,157,159,181,],[19,19,19,19,19,19,19,19,]),'empty':([0,2,74,112,124,144,155,157,159,167,181,],[22,22,22,22,150,164,22,22,22,150,22,]),'funcion_print':([0,2,74,112,155,157,159,181,],[23,23,23,23,23,23,23,23,]),'funcion_arreglo':([0,2,74,112,155,157,159,181,],[24,24,24,24,24,24,24,24,]),'operadorlogico':([18,],[56,]),'termino':([21,55,61,70,117,127,],[63,78,103,103,145,156,]),'operacion_matematica':([55,117,],[75,146,]),'tipo':([55,],[76,]),'boolean':([55,124,167,],[79,153,153,]),'archivos':([55,],[83,]),'array':([55,124,167,],[84,154,154,]),'new':([55,],[85,]),'funcion_archivo':([55,],[88,]),'comparacion':([61,70,],[102,110,]),'argument':([68,],[106,]),'operadores':([78,145,],[117,117,]),'operadorcomparacion':([103,],[127,]),'valores_array':([124,167,],[148,177,]),'elementos_array':([124,167,],[149,149,]),'argumentos':([144,],[163,]),'control_bucle':([159,181,],[170,184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> OPEN declaracion CLOSE','programa',3,'p_programa','sintactico.py',11),
  ('programa -> OPEN declaracion','programa',2,'p_programa','sintactico.py',12),
  ('programa -> declaracion CLOSE','programa',2,'p_programa','sintactico.py',13),
  ('programa -> declaracion','programa',1,'p_programa','sintactico.py',14),
  ('programa -> CLOSE','programa',1,'p_programa','sintactico.py',15),
  ('programa -> OPEN','programa',1,'p_programa','sintactico.py',16),
  ('declaracion -> expression','declaracion',1,'p_declaracion','sintactico.py',20),
  ('declaracion -> expif','declaracion',1,'p_declaracion','sintactico.py',21),
  ('declaracion -> expelse','declaracion',1,'p_declaracion','sintactico.py',22),
  ('declaracion -> expresionlogica','declaracion',1,'p_declaracion','sintactico.py',23),
  ('declaracion -> declararvariable','declaracion',1,'p_declaracion','sintactico.py',24),
  ('declaracion -> creacionfunciones','declaracion',1,'p_declaracion','sintactico.py',25),
  ('declaracion -> returnvalores','declaracion',1,'p_declaracion','sintactico.py',26),
  ('declaracion -> operador_object','declaracion',1,'p_declaracion','sintactico.py',27),
  ('declaracion -> print','declaracion',1,'p_declaracion','sintactico.py',28),
  ('declaracion -> arreglos','declaracion',1,'p_declaracion','sintactico.py',29),
  ('declaracion -> while','declaracion',1,'p_declaracion','sintactico.py',30),
  ('declaracion -> foreach','declaracion',1,'p_declaracion','sintactico.py',31),
  ('declaracion -> clase','declaracion',1,'p_declaracion','sintactico.py',32),
  ('declaracion -> declaracion','declaracion',1,'p_declaracion','sintactico.py',33),
  ('creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET','creacionfunciones',7,'p_creacionfunciones','sintactico.py',38),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',41),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintactico.py',44),
  ('argumentos -> empty','argumentos',1,'p_argumentos','sintactico.py',45),
  ('returnvalores -> RETURN termino END','returnvalores',3,'p_returnvalores','sintactico.py',49),
  ('returnvalores -> RETURN creacionfunciones','returnvalores',2,'p_returnvalores','sintactico.py',50),
  ('returnvalores -> empty','returnvalores',1,'p_returnvalores','sintactico.py',51),
  ('expression -> ID EQUALS operacion_matematica END','expression',4,'p_expression_math','sintactico.py',55),
  ('operacion_matematica -> termino operadores operacion_matematica','operacion_matematica',3,'p_operacion_matematica','sintactico.py',58),
  ('operacion_matematica -> termino operadores termino','operacion_matematica',3,'p_operacion_matematica','sintactico.py',59),
  ('operadores -> PLUS','operadores',1,'p_operadores','sintactico.py',63),
  ('operadores -> MINUS','operadores',1,'p_operadores','sintactico.py',64),
  ('operadores -> DIVIDE','operadores',1,'p_operadores','sintactico.py',65),
  ('operadores -> TIMES','operadores',1,'p_operadores','sintactico.py',66),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',67),
  ('termino -> NUMBER','termino',1,'p_termino','sintactico.py',71),
  ('termino -> ID','termino',1,'p_termino','sintactico.py',72),
  ('termino -> DECIMAL','termino',1,'p_termino','sintactico.py',73),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET','expif',7,'p_expif','sintactico.py',77),
  ('expelse -> expif ELSE LCORCHET declaracion RCORCHET','expelse',5,'p_expelse','sintactico.py',80),
  ('funcion_condicion -> IF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',83),
  ('funcion_condicion -> ELSEIF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',84),
  ('control_bucle -> BREAK','control_bucle',1,'p_control_bucle','sintactico.py',87),
  ('control_bucle -> CONTINUE','control_bucle',1,'p_control_bucle','sintactico.py',88),
  ('control_bucle -> declaracion','control_bucle',1,'p_control_bucle','sintactico.py',89),
  ('while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET','while',7,'p_while','sintactico.py',92),
  ('foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET','foreach',9,'p_foreach','sintactico.py',95),
  ('comparacion -> termino operadorcomparacion termino','comparacion',3,'p_comparacion','sintactico.py',99),
  ('operadorcomparacion -> IS_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',103),
  ('operadorcomparacion -> IS_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',104),
  ('operadorcomparacion -> IS_NOT_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',105),
  ('operadorcomparacion -> IS_NOT_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',106),
  ('operadorcomparacion -> IS_GREATER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',107),
  ('operadorcomparacion -> IS_SMALLER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',108),
  ('operadorcomparacion -> SPACESHIP','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',109),
  ('operadorcomparacion -> MAYORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',110),
  ('operadorcomparacion -> MENORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',111),
  ('expresionlogica -> ID operadorlogico ID','expresionlogica',3,'p_expresionlogica','sintactico.py',120),
  ('operadorlogico -> AND','operadorlogico',1,'p_operadorlogico','sintactico.py',123),
  ('operadorlogico -> OR','operadorlogico',1,'p_operadorlogico','sintactico.py',124),
  ('operadorlogico -> XOR','operadorlogico',1,'p_operadorlogico','sintactico.py',125),
  ('operadorlogico -> NOT','operadorlogico',1,'p_operadorlogico','sintactico.py',126),
  ('declararvariable -> ID EQUALS tipo END','declararvariable',4,'p_declararvariable','sintactico.py',130),
  ('tipo -> boolean','tipo',1,'p_tipo','sintactico.py',134),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',135),
  ('tipo -> TEXT','tipo',1,'p_tipo','sintactico.py',136),
  ('tipo -> NULL','tipo',1,'p_tipo','sintactico.py',137),
  ('tipo -> archivos','tipo',1,'p_tipo','sintactico.py',138),
  ('tipo -> array','tipo',1,'p_tipo','sintactico.py',139),
  ('tipo -> new','tipo',1,'p_tipo','sintactico.py',140),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',143),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',144),
  ('operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END','operador_object',8,'p_operador_object','sintactico.py',147),
  ('array -> ARRAY LPAREN valores_array RPAREN','array',4,'p_array','sintactico.py',150),
  ('valores_array -> elementos_array COMA valores_array','valores_array',3,'p_valores_array','sintactico.py',153),
  ('valores_array -> elementos_array','valores_array',1,'p_valores_array','sintactico.py',154),
  ('valores_array -> empty','valores_array',1,'p_valores_array','sintactico.py',155),
  ('elementos_array -> NUMBER','elementos_array',1,'p_elementos_array','sintactico.py',158),
  ('elementos_array -> TEXT','elementos_array',1,'p_elementos_array','sintactico.py',159),
  ('elementos_array -> empty','elementos_array',1,'p_elementos_array','sintactico.py',160),
  ('elementos_array -> boolean','elementos_array',1,'p_elementos_array','sintactico.py',161),
  ('elementos_array -> array','elementos_array',1,'p_elementos_array','sintactico.py',162),
  ('new -> NEW FNOMBRE','new',2,'p_new','sintactico.py',166),
  ('print -> funcion_print LPAREN argument RPAREN END','print',5,'p_print','sintactico.py',181),
  ('argument -> ID','argument',1,'p_argument','sintactico.py',184),
  ('argument -> TEXT','argument',1,'p_argument','sintactico.py',185),
  ('funcion_print -> VAR_EXPORT','funcion_print',1,'p_funcion_print','sintactico.py',188),
  ('funcion_print -> ECHO','funcion_print',1,'p_funcion_print','sintactico.py',189),
  ('funcion_print -> PRINT','funcion_print',1,'p_funcion_print','sintactico.py',190),
  ('funcion_print -> PRINT_R','funcion_print',1,'p_funcion_print','sintactico.py',191),
  ('funcion_print -> VAR_DUMP','funcion_print',1,'p_funcion_print','sintactico.py',192),
  ('arreglos -> funcion_arreglo LPAREN ID RPAREN','arreglos',4,'p_arreglos','sintactico.py',195),
  ('funcion_arreglo -> SUFFLE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',198),
  ('funcion_arreglo -> ARRAY_MERGE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',199),
  ('funcion_arreglo -> ARRAY_SEARCH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',200),
  ('funcion_arreglo -> ARRAY_RAND','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',201),
  ('funcion_arreglo -> ARRAY_CHUNK','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',202),
  ('funcion_arreglo -> STR_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',203),
  ('funcion_arreglo -> PREG_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',204),
  ('funcion_arreglo -> ARRAY_UNIQUE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',205),
  ('funcion_arreglo -> COUNT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',206),
  ('funcion_arreglo -> SIZEOF','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',207),
  ('funcion_arreglo -> ARRAY_PUSH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',208),
  ('funcion_arreglo -> SORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',209),
  ('funcion_arreglo -> ASORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',210),
  ('funcion_arreglo -> KSORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',211),
  ('funcion_arreglo -> UNSET','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',212),
  ('funcion_arreglo -> IMPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',213),
  ('funcion_arreglo -> EXPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',214),
  ('archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN','archivos',6,'p_archivos','sintactico.py',217),
  ('funcion_archivo -> FGETS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',220),
  ('funcion_archivo -> FREAD','funcion_archivo',1,'p_funcion_archivo','sintactico.py',221),
  ('funcion_archivo -> FSCANF','funcion_archivo',1,'p_funcion_archivo','sintactico.py',222),
  ('funcion_archivo -> FPASSTHRU','funcion_archivo',1,'p_funcion_archivo','sintactico.py',223),
  ('funcion_archivo -> FGETCSV','funcion_archivo',1,'p_funcion_archivo','sintactico.py',224),
  ('funcion_archivo -> FGETC','funcion_archivo',1,'p_funcion_archivo','sintactico.py',225),
  ('funcion_archivo -> FILE_GET_CONTENTS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',226),
  ('funcion_archivo -> READFILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',227),
  ('funcion_archivo -> FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',228),
  ('funcion_archivo -> PARSE_INI_FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',229),
  ('clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET','clase',5,'p_clase','sintactico.py',233),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_CHUNK ARRAY_MERGE ARRAY_PUSH ARRAY_RAND ARRAY_SEARCH ARRAY_UNIQUE AS ASORT BREAK CLASS CLOSE COMA CONTINUE COUNT DECIMAL DIVIDE ECHO ELSE ELSEIF END EQUALS EXPLODE FALSE FGETC FGETCSV FGETS FILE FILE_GET_CONTENTS FNOMBRE FOREACH FPASSTHRU FREAD FSCANF FUNCTION ID IF IMPLODE IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL KSORT LCORCHET LPAREN MAYORQUE MENORQUE MINUS MODULO NEW NOT NULL NUMBER OBJECT_OPERATOR OPEN OR PARSE_INI_FILE PLUS PREG_SPLIT PRINT PRINT_R RCORCHET READFILE RETURN RPAREN SIZEOF SLINEA SORT SPACESHIP STR_SPLIT SUFFLE TEXT TIMES TRUE UNSET VAR_DUMP VAR_EXPORT WHILE XORprograma : OPEN  declaracion CLOSE\n                    | OPEN declaracion\n                    | declaracion CLOSE\n                    | declaracion\n                    | CLOSE\n                    | OPENdeclaracion :  expression\n                        | expif\n                        | expelse\n                        | expresionlogica\n                        | declararvariable\n                        | creacionfunciones\n                        | returnvalores\n                        | operador_object\n                        | print\n                        | arreglos\n                        | while\n                        | foreach\n                        | clase\n                        creacionfunciones : FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET empty : argumentos :   ID\n                    | emptyreturnvalores :  RETURN termino END\n                      | RETURN creacionfunciones\n                      | empty expression : ID EQUALS termino operadores termino ENDoperadores : PLUS\n                    | MINUS\n                    | DIVIDE\n                    | TIMES\n                    | MODULOtermino : NUMBER\n                    | ID\n                    | DECIMALexpif : funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHETexpelse : expif ELSE LCORCHET declaracion RCORCHETfuncion_condicion : IF\n                          | ELSEIFcontrol_bucle : BREAK\n                        | CONTINUE\n                        | declaracionwhile : WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHETforeach : FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHETcomparacion : termino operadorcomparacion terminooperadorcomparacion : IS_EQUAL\n                            | IS_IDENTICAL\n                            | IS_NOT_EQUAL\n                            | IS_NOT_IDENTICAL\n                            | IS_GREATER_OR_EQUAL\n                            | IS_SMALLER_OR_EQUAL\n                            | SPACESHIP\n                            | MAYORQUE\n                            | MENORQUE expresionlogica : ID operadorlogico IDoperadorlogico : AND\n                        | OR\n                        | XOR\n                        | NOT declararvariable : ID EQUALS tipo END tipo : boolean\n            | NUMBER\n            | TEXT\n            | NULL\n            | archivos\n            | array\n            | new boolean : TRUE\n                | FALSEoperador_object : ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN ENDarray : ARRAY LPAREN termino RPAREN new : NEW FNOMBRE print : funcion_print LPAREN argument RPAREN ENDargument : ID\n                    | TEXTfuncion_print : VAR_EXPORT\n                       | ECHO\n                        |  PRINT\n                        | PRINT_R\n                        | VAR_DUMParreglos : funcion_arreglo LPAREN ID RPARENfuncion_arreglo :  SUFFLE\n                        | ARRAY_MERGE\n                        | ARRAY_SEARCH\n                        | ARRAY_RAND\n                        | ARRAY_CHUNK\n                        | STR_SPLIT\n                        | PREG_SPLIT\n                        | ARRAY_UNIQUE\n                         | COUNT\n                         | SIZEOF\n                         | ARRAY_PUSH\n                         | SORT\n                         | ASORT\n                         | KSORT\n                         | UNSET\n                         | IMPLODE\n                        | EXPLODE archivos : funcion_archivo LPAREN TEXT COMA TEXT RPARENfuncion_archivo : FGETS\n                    | FREAD\n                    | FSCANF\n                    | FPASSTHRU\n                    | FGETCSV\n                    | FGETC\n                    | FILE_GET_CONTENTS\n                    | READFILE\n                    | FILE\n                    | PARSE_INI_FILE\n                    clase : CLASS FNOMBRE LCORCHET declaracion RCORCHET'
    
_lr_action_items = {'OPEN':([0,],[2,]),'CLOSE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,52,64,100,104,119,137,141,149,152,153,168,169,170,172,175,],[4,-21,53,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,73,-25,-55,-24,-60,-81,-37,-73,-110,-27,-36,-20,-43,-70,-44,]),'ID':([0,2,21,55,56,57,58,59,60,61,68,69,70,71,74,111,113,114,115,116,117,118,122,125,126,127,128,129,130,131,132,133,134,139,143,146,148,150,171,],[18,18,66,66,100,-56,-57,-58,-59,66,106,108,66,110,18,18,66,-28,-29,-30,-31,-32,66,66,-46,-47,-48,-49,-50,-51,-52,-53,-54,151,154,18,18,18,18,]),'FUNCTION':([0,2,21,74,111,146,148,150,171,],[20,20,20,20,20,20,20,20,20,]),'RETURN':([0,2,74,111,146,148,150,171,],[21,21,21,21,21,21,21,21,]),'WHILE':([0,2,74,111,146,148,150,171,],[25,25,25,25,25,25,25,25,]),'FOREACH':([0,2,74,111,146,148,150,171,],[26,26,26,26,26,26,26,26,]),'CLASS':([0,2,74,111,146,148,150,171,],[27,27,27,27,27,27,27,27,]),'IF':([0,2,74,111,146,148,150,171,],[28,28,28,28,28,28,28,28,]),'ELSEIF':([0,2,74,111,146,148,150,171,],[29,29,29,29,29,29,29,29,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,22,52,53,64,73,100,104,119,137,141,149,152,153,168,169,170,172,175,],[-21,0,-6,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-2,-3,-25,-1,-55,-24,-60,-81,-37,-73,-110,-27,-36,-20,-43,-70,-44,]),'VAR_EXPORT':([0,2,74,111,146,148,150,171,],[30,30,30,30,30,30,30,30,]),'ECHO':([0,2,74,111,146,148,150,171,],[31,31,31,31,31,31,31,31,]),'PRINT':([0,2,74,111,146,148,150,171,],[32,32,32,32,32,32,32,32,]),'PRINT_R':([0,2,74,111,146,148,150,171,],[33,33,33,33,33,33,33,33,]),'VAR_DUMP':([0,2,74,111,146,148,150,171,],[34,34,34,34,34,34,34,34,]),'SUFFLE':([0,2,74,111,146,148,150,171,],[35,35,35,35,35,35,35,35,]),'ARRAY_MERGE':([0,2,74,111,146,148,150,171,],[36,36,36,36,36,36,36,36,]),'ARRAY_SEARCH':([0,2,74,111,146,148,150,171,],[37,37,37,37,37,37,37,37,]),'ARRAY_RAND':([0,2,74,111,146,148,150,171,],[38,38,38,38,38,38,38,38,]),'ARRAY_CHUNK':([0,2,74,111,146,148,150,171,],[39,39,39,39,39,39,39,39,]),'STR_SPLIT':([0,2,74,111,146,148,150,171,],[40,40,40,40,40,40,40,40,]),'PREG_SPLIT':([0,2,74,111,146,148,150,171,],[41,41,41,41,41,41,41,41,]),'ARRAY_UNIQUE':([0,2,74,111,146,148,150,171,],[42,42,42,42,42,42,42,42,]),'COUNT':([0,2,74,111,146,148,150,171,],[43,43,43,43,43,43,43,43,]),'SIZEOF':([0,2,74,111,146,148,150,171,],[44,44,44,44,44,44,44,44,]),'ARRAY_PUSH':([0,2,74,111,146,148,150,171,],[45,45,45,45,45,45,45,45,]),'SORT':([0,2,74,111,146,148,150,171,],[46,46,46,46,46,46,46,46,]),'ASORT':([0,2,74,111,146,148,150,171,],[47,47,47,47,47,47,47,47,]),'KSORT':([0,2,74,111,146,148,150,171,],[48,48,48,48,48,48,48,48,]),'UNSET':([0,2,74,111,146,148,150,171,],[49,49,49,49,49,49,49,49,]),'IMPLODE':([0,2,74,111,146,148,150,171,],[50,50,50,50,50,50,50,50,]),'EXPLODE':([0,2,74,111,146,148,150,171,],[51,51,51,51,51,51,51,51,]),'RCORCHET':([5,6,7,8,9,10,11,12,13,14,15,16,17,22,64,74,100,104,111,112,119,137,140,141,146,148,149,150,152,153,159,160,161,162,163,164,168,169,170,171,172,174,175,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-26,-25,-21,-55,-24,-21,141,-60,-81,152,-37,-21,-21,-73,-21,-110,-27,168,169,170,-40,-41,-42,-36,-20,-43,-21,-70,175,-44,]),'ELSE':([6,168,],[54,-36,]),'EQUALS':([18,],[55,]),'AND':([18,],[57,]),'OR':([18,],[58,]),'XOR':([18,],[59,]),'NOT':([18,],[60,]),'LPAREN':([19,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,62,87,88,90,91,92,93,94,95,96,97,98,99,120,],[61,68,69,70,71,-38,-39,-76,-77,-78,-79,-80,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,103,121,122,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,143,]),'FNOMBRE':([20,27,77,89,],[62,72,120,123,]),'NUMBER':([21,55,61,70,113,114,115,116,117,118,122,125,126,127,128,129,130,131,132,133,134,],[65,78,65,65,65,-28,-29,-30,-31,-32,65,65,-46,-47,-48,-49,-50,-51,-52,-53,-54,]),'DECIMAL':([21,55,61,70,113,114,115,116,117,118,122,125,126,127,128,129,130,131,132,133,134,],[67,67,67,67,67,-28,-29,-30,-31,-32,67,67,-46,-47,-48,-49,-50,-51,-52,-53,-54,]),'LCORCHET':([54,72,124,135,138,165,],[74,111,146,148,150,171,]),'OBJECT_OPERATOR':([55,],[77,]),'TEXT':([55,68,121,157,],[80,107,144,167,]),'NULL':([55,],[81,]),'TRUE':([55,],[85,]),'FALSE':([55,],[86,]),'ARRAY':([55,],[88,]),'NEW':([55,],[89,]),'FGETS':([55,],[90,]),'FREAD':([55,],[91,]),'FSCANF':([55,],[92,]),'FPASSTHRU':([55,],[93,]),'FGETCSV':([55,],[94,]),'FGETC':([55,],[95,]),'FILE_GET_CONTENTS':([55,],[96,]),'READFILE':([55,],[97,]),'FILE':([55,],[98,]),'PARSE_INI_FILE':([55,],[99,]),'END':([63,65,66,67,76,78,79,80,81,82,83,84,85,86,123,136,142,158,166,173,],[104,-33,-34,-35,119,-62,-61,-63,-64,-65,-66,-67,-68,-69,-72,149,153,-71,172,-99,]),'IS_EQUAL':([65,66,67,102,],[-33,-34,-35,126,]),'IS_IDENTICAL':([65,66,67,102,],[-33,-34,-35,127,]),'IS_NOT_EQUAL':([65,66,67,102,],[-33,-34,-35,128,]),'IS_NOT_IDENTICAL':([65,66,67,102,],[-33,-34,-35,129,]),'IS_GREATER_OR_EQUAL':([65,66,67,102,],[-33,-34,-35,130,]),'IS_SMALLER_OR_EQUAL':([65,66,67,102,],[-33,-34,-35,131,]),'SPACESHIP':([65,66,67,102,],[-33,-34,-35,132,]),'MAYORQUE':([65,66,67,102,],[-33,-34,-35,133,]),'MENORQUE':([65,66,67,102,],[-33,-34,-35,134,]),'RPAREN':([65,66,67,101,103,105,106,107,108,109,143,145,147,151,154,155,156,167,],[-33,-34,-35,124,135,136,-74,-75,137,138,-21,158,-45,165,-22,166,-23,173,]),'PLUS':([66,67,75,78,],[-34,-35,114,-33,]),'MINUS':([66,67,75,78,],[-34,-35,115,-33,]),'DIVIDE':([66,67,75,78,],[-34,-35,116,-33,]),'TIMES':([66,67,75,78,],[-34,-35,117,-33,]),'MODULO':([66,67,75,78,],[-34,-35,118,-33,]),'AS':([110,],[139,]),'COMA':([144,],[157,]),'BREAK':([150,171,],[162,162,]),'CONTINUE':([150,171,],[163,163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracion':([0,2,74,111,146,148,150,171,],[3,52,112,140,159,160,164,164,]),'expression':([0,2,74,111,146,148,150,171,],[5,5,5,5,5,5,5,5,]),'expif':([0,2,74,111,146,148,150,171,],[6,6,6,6,6,6,6,6,]),'expelse':([0,2,74,111,146,148,150,171,],[7,7,7,7,7,7,7,7,]),'expresionlogica':([0,2,74,111,146,148,150,171,],[8,8,8,8,8,8,8,8,]),'declararvariable':([0,2,74,111,146,148,150,171,],[9,9,9,9,9,9,9,9,]),'creacionfunciones':([0,2,21,74,111,146,148,150,171,],[10,10,64,10,10,10,10,10,10,]),'returnvalores':([0,2,74,111,146,148,150,171,],[11,11,11,11,11,11,11,11,]),'operador_object':([0,2,74,111,146,148,150,171,],[12,12,12,12,12,12,12,12,]),'print':([0,2,74,111,146,148,150,171,],[13,13,13,13,13,13,13,13,]),'arreglos':([0,2,74,111,146,148,150,171,],[14,14,14,14,14,14,14,14,]),'while':([0,2,74,111,146,148,150,171,],[15,15,15,15,15,15,15,15,]),'foreach':([0,2,74,111,146,148,150,171,],[16,16,16,16,16,16,16,16,]),'clase':([0,2,74,111,146,148,150,171,],[17,17,17,17,17,17,17,17,]),'funcion_condicion':([0,2,74,111,146,148,150,171,],[19,19,19,19,19,19,19,19,]),'empty':([0,2,74,111,143,146,148,150,171,],[22,22,22,22,156,22,22,22,22,]),'funcion_print':([0,2,74,111,146,148,150,171,],[23,23,23,23,23,23,23,23,]),'funcion_arreglo':([0,2,74,111,146,148,150,171,],[24,24,24,24,24,24,24,24,]),'operadorlogico':([18,],[56,]),'termino':([21,55,61,70,113,122,125,],[63,75,102,102,142,145,147,]),'tipo':([55,],[76,]),'boolean':([55,],[79,]),'archivos':([55,],[82,]),'array':([55,],[83,]),'new':([55,],[84,]),'funcion_archivo':([55,],[87,]),'comparacion':([61,70,],[101,109,]),'argument':([68,],[105,]),'operadores':([75,],[113,]),'operadorcomparacion':([102,],[125,]),'argumentos':([143,],[155,]),'control_bucle':([150,171,],[161,174,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> OPEN declaracion CLOSE','programa',3,'p_programa','sintactico.py',10),
  ('programa -> OPEN declaracion','programa',2,'p_programa','sintactico.py',11),
  ('programa -> declaracion CLOSE','programa',2,'p_programa','sintactico.py',12),
  ('programa -> declaracion','programa',1,'p_programa','sintactico.py',13),
  ('programa -> CLOSE','programa',1,'p_programa','sintactico.py',14),
  ('programa -> OPEN','programa',1,'p_programa','sintactico.py',15),
  ('declaracion -> expression','declaracion',1,'p_declaracion','sintactico.py',19),
  ('declaracion -> expif','declaracion',1,'p_declaracion','sintactico.py',20),
  ('declaracion -> expelse','declaracion',1,'p_declaracion','sintactico.py',21),
  ('declaracion -> expresionlogica','declaracion',1,'p_declaracion','sintactico.py',22),
  ('declaracion -> declararvariable','declaracion',1,'p_declaracion','sintactico.py',23),
  ('declaracion -> creacionfunciones','declaracion',1,'p_declaracion','sintactico.py',24),
  ('declaracion -> returnvalores','declaracion',1,'p_declaracion','sintactico.py',25),
  ('declaracion -> operador_object','declaracion',1,'p_declaracion','sintactico.py',26),
  ('declaracion -> print','declaracion',1,'p_declaracion','sintactico.py',27),
  ('declaracion -> arreglos','declaracion',1,'p_declaracion','sintactico.py',28),
  ('declaracion -> while','declaracion',1,'p_declaracion','sintactico.py',29),
  ('declaracion -> foreach','declaracion',1,'p_declaracion','sintactico.py',30),
  ('declaracion -> clase','declaracion',1,'p_declaracion','sintactico.py',31),
  ('creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET','creacionfunciones',7,'p_creacionfunciones','sintactico.py',37),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',40),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintactico.py',43),
  ('argumentos -> empty','argumentos',1,'p_argumentos','sintactico.py',44),
  ('returnvalores -> RETURN termino END','returnvalores',3,'p_returnvalores','sintactico.py',48),
  ('returnvalores -> RETURN creacionfunciones','returnvalores',2,'p_returnvalores','sintactico.py',49),
  ('returnvalores -> empty','returnvalores',1,'p_returnvalores','sintactico.py',50),
  ('expression -> ID EQUALS termino operadores termino END','expression',6,'p_expression_math','sintactico.py',54),
  ('operadores -> PLUS','operadores',1,'p_operadores','sintactico.py',59),
  ('operadores -> MINUS','operadores',1,'p_operadores','sintactico.py',60),
  ('operadores -> DIVIDE','operadores',1,'p_operadores','sintactico.py',61),
  ('operadores -> TIMES','operadores',1,'p_operadores','sintactico.py',62),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',63),
  ('termino -> NUMBER','termino',1,'p_termino','sintactico.py',67),
  ('termino -> ID','termino',1,'p_termino','sintactico.py',68),
  ('termino -> DECIMAL','termino',1,'p_termino','sintactico.py',69),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET','expif',7,'p_expif','sintactico.py',73),
  ('expelse -> expif ELSE LCORCHET declaracion RCORCHET','expelse',5,'p_expelse','sintactico.py',76),
  ('funcion_condicion -> IF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',79),
  ('funcion_condicion -> ELSEIF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',80),
  ('control_bucle -> BREAK','control_bucle',1,'p_control_bucle','sintactico.py',83),
  ('control_bucle -> CONTINUE','control_bucle',1,'p_control_bucle','sintactico.py',84),
  ('control_bucle -> declaracion','control_bucle',1,'p_control_bucle','sintactico.py',85),
  ('while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET','while',7,'p_while','sintactico.py',88),
  ('foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET','foreach',9,'p_foreach','sintactico.py',91),
  ('comparacion -> termino operadorcomparacion termino','comparacion',3,'p_comparacion','sintactico.py',95),
  ('operadorcomparacion -> IS_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',99),
  ('operadorcomparacion -> IS_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',100),
  ('operadorcomparacion -> IS_NOT_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',101),
  ('operadorcomparacion -> IS_NOT_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',102),
  ('operadorcomparacion -> IS_GREATER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',103),
  ('operadorcomparacion -> IS_SMALLER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',104),
  ('operadorcomparacion -> SPACESHIP','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',105),
  ('operadorcomparacion -> MAYORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',106),
  ('operadorcomparacion -> MENORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',107),
  ('expresionlogica -> ID operadorlogico ID','expresionlogica',3,'p_expresionlogica','sintactico.py',116),
  ('operadorlogico -> AND','operadorlogico',1,'p_operadorlogico','sintactico.py',119),
  ('operadorlogico -> OR','operadorlogico',1,'p_operadorlogico','sintactico.py',120),
  ('operadorlogico -> XOR','operadorlogico',1,'p_operadorlogico','sintactico.py',121),
  ('operadorlogico -> NOT','operadorlogico',1,'p_operadorlogico','sintactico.py',122),
  ('declararvariable -> ID EQUALS tipo END','declararvariable',4,'p_declararvariable','sintactico.py',126),
  ('tipo -> boolean','tipo',1,'p_tipo','sintactico.py',130),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',131),
  ('tipo -> TEXT','tipo',1,'p_tipo','sintactico.py',132),
  ('tipo -> NULL','tipo',1,'p_tipo','sintactico.py',133),
  ('tipo -> archivos','tipo',1,'p_tipo','sintactico.py',134),
  ('tipo -> array','tipo',1,'p_tipo','sintactico.py',135),
  ('tipo -> new','tipo',1,'p_tipo','sintactico.py',136),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',139),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',140),
  ('operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END','operador_object',8,'p_operador_object','sintactico.py',143),
  ('array -> ARRAY LPAREN termino RPAREN','array',4,'p_array','sintactico.py',146),
  ('new -> NEW FNOMBRE','new',2,'p_new','sintactico.py',149),
  ('print -> funcion_print LPAREN argument RPAREN END','print',5,'p_print','sintactico.py',164),
  ('argument -> ID','argument',1,'p_argument','sintactico.py',167),
  ('argument -> TEXT','argument',1,'p_argument','sintactico.py',168),
  ('funcion_print -> VAR_EXPORT','funcion_print',1,'p_funcion_print','sintactico.py',171),
  ('funcion_print -> ECHO','funcion_print',1,'p_funcion_print','sintactico.py',172),
  ('funcion_print -> PRINT','funcion_print',1,'p_funcion_print','sintactico.py',173),
  ('funcion_print -> PRINT_R','funcion_print',1,'p_funcion_print','sintactico.py',174),
  ('funcion_print -> VAR_DUMP','funcion_print',1,'p_funcion_print','sintactico.py',175),
  ('arreglos -> funcion_arreglo LPAREN ID RPAREN','arreglos',4,'p_arreglos','sintactico.py',178),
  ('funcion_arreglo -> SUFFLE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',181),
  ('funcion_arreglo -> ARRAY_MERGE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',182),
  ('funcion_arreglo -> ARRAY_SEARCH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',183),
  ('funcion_arreglo -> ARRAY_RAND','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',184),
  ('funcion_arreglo -> ARRAY_CHUNK','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',185),
  ('funcion_arreglo -> STR_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',186),
  ('funcion_arreglo -> PREG_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',187),
  ('funcion_arreglo -> ARRAY_UNIQUE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',188),
  ('funcion_arreglo -> COUNT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',189),
  ('funcion_arreglo -> SIZEOF','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',190),
  ('funcion_arreglo -> ARRAY_PUSH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',191),
  ('funcion_arreglo -> SORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',192),
  ('funcion_arreglo -> ASORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',193),
  ('funcion_arreglo -> KSORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',194),
  ('funcion_arreglo -> UNSET','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',195),
  ('funcion_arreglo -> IMPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',196),
  ('funcion_arreglo -> EXPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',197),
  ('archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN','archivos',6,'p_archivos','sintactico.py',200),
  ('funcion_archivo -> FGETS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',203),
  ('funcion_archivo -> FREAD','funcion_archivo',1,'p_funcion_archivo','sintactico.py',204),
  ('funcion_archivo -> FSCANF','funcion_archivo',1,'p_funcion_archivo','sintactico.py',205),
  ('funcion_archivo -> FPASSTHRU','funcion_archivo',1,'p_funcion_archivo','sintactico.py',206),
  ('funcion_archivo -> FGETCSV','funcion_archivo',1,'p_funcion_archivo','sintactico.py',207),
  ('funcion_archivo -> FGETC','funcion_archivo',1,'p_funcion_archivo','sintactico.py',208),
  ('funcion_archivo -> FILE_GET_CONTENTS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',209),
  ('funcion_archivo -> READFILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',210),
  ('funcion_archivo -> FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',211),
  ('funcion_archivo -> PARSE_INI_FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',212),
  ('clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET','clase',5,'p_clase','sintactico.py',216),
]

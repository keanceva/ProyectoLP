
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_CHUNK ARRAY_MERGE ARRAY_PUSH ARRAY_RAND ARRAY_SEARCH ARRAY_UNIQUE AS ASORT BREAK CLASS CLOSE COMA CONTINUE COUNT DECIMAL DIVIDE ECHO ELSE ELSEIF END EQUALS EXPLODE FALSE FGETC FGETCSV FGETS FILE FILE_GET_CONTENTS FNOMBRE FOREACH FPASSTHRU FREAD FSCANF FUNCTION ID IF IMPLODE IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL KSORT LCORCHET LPAREN MAYORQUE MENORQUE MINUS MODULO NEW NOT NULL NUMBER OBJECT_OPERATOR OPEN OR PARSE_INI_FILE PLUS PREG_SPLIT PRINT PRINT_R RCORCHET READFILE RETURN RPAREN SIZEOF SORT SPACESHIP STR_SPLIT SUFFLE TEXT TIMES TRUE UNSET VAR_DUMP VAR_EXPORT WHILE XORprograma : OPEN declaracion CLOSEdeclaracion : expression\n                        | expif\n                        | expelse\n                        | expresionlogica\n                        | declararvariable\n                        | creacionfunciones\n                        | returnvalores\n                        | operador_object\n                        | print\n                        | arreglos\n                        | while\n                        | foreach\n                        | clasecreacionfunciones : FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET empty : argumentos :   ID\n                    | emptyreturnvalores :  RETURN termino END\n                      | RETURN creacionfunciones\n                      | empty expression : ID EQUALS termino operadores termino ENDoperadores : PLUS\n                    | MINUS\n                    | DIVIDE\n                    | TIMES\n                    | MODULOtermino : NUMBER\n                    | ID\n                    | DECIMALexpif : funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHETexpelse : expif ELSE LCORCHET declaracion RCORCHETfuncion_condicion : IF\n                          | ELSEIFcontrol_bucle : BREAK\n                        | CONTINUE\n                        | declaracionwhile : WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHETforeach : FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHETcomparacion : termino operadorcomparacion terminooperadorcomparacion : IS_EQUAL\n                            | IS_IDENTICAL\n                            | IS_NOT_EQUAL\n                            | IS_NOT_IDENTICAL\n                            | IS_GREATER_OR_EQUAL\n                            | IS_SMALLER_OR_EQUAL\n                            | SPACESHIP\n                            | MAYORQUE\n                            | MENORQUE expresionlogica : ID operadorlogico IDoperadorlogico : AND\n                        | OR\n                        | XOR\n                        | NOT declararvariable : ID EQUALS tipo END tipo : boolean\n            | NUMBER\n            | TEXT\n            | NULL\n            | archivos\n            | array\n            | new boolean : TRUE\n                | FALSEoperador_object : ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN ENDarray : ARRAY LPAREN termino RPAREN new : NEW FNOMBRE print : funcion_print LPAREN argument RPAREN ENDargument : ID\n                    | TEXTfuncion_print : VAR_EXPORT\n                       | ECHO\n                        |  PRINT\n                        | PRINT_R\n                        | VAR_DUMParreglos : funcion_arreglo LPAREN ID RPARENfuncion_arreglo :  SUFFLE\n                        | ARRAY_MERGE\n                        | ARRAY_SEARCH\n                        | ARRAY_RAND\n                        | ARRAY_CHUNK\n                        | STR_SPLIT\n                        | PREG_SPLIT\n                        | ARRAY_UNIQUE\n                         | COUNT\n                         | SIZEOF\n                         | ARRAY_PUSH\n                         | SORT\n                         | ASORT\n                         | KSORT\n                         | UNSET\n                         | IMPLODE\n                        | EXPLODE archivos : funcion_archivo LPAREN TEXT COMA TEXT RPARENfuncion_archivo : FGETS\n                    | FREAD\n                    | FSCANF\n                    | FPASSTHRU\n                    | FGETCSV\n                    | FGETC\n                    | FILE_GET_CONTENTS\n                    | READFILE\n                    | FILE\n                    | PARSE_INI_FILE\n                    clase : CLASS FNOMBRE LCORCHET declaracion RCORCHET'
    
_lr_action_items = {'OPEN':([0,],[2,]),'$end':([1,51,],[0,-1,]),'ID':([2,20,53,54,55,56,57,58,59,66,67,68,69,71,108,110,111,112,113,114,115,119,122,123,124,125,126,127,128,129,130,131,136,140,143,145,147,168,],[17,64,64,97,-51,-52,-53,-54,64,103,105,64,107,17,17,64,-23,-24,-25,-26,-27,64,64,-41,-42,-43,-44,-45,-46,-47,-48,-49,148,151,17,17,17,17,]),'FUNCTION':([2,20,71,108,143,145,147,168,],[19,19,19,19,19,19,19,19,]),'RETURN':([2,71,108,143,145,147,168,],[20,20,20,20,20,20,20,]),'WHILE':([2,71,108,143,145,147,168,],[24,24,24,24,24,24,24,]),'FOREACH':([2,71,108,143,145,147,168,],[25,25,25,25,25,25,25,]),'CLASS':([2,71,108,143,145,147,168,],[26,26,26,26,26,26,26,]),'IF':([2,71,108,143,145,147,168,],[27,27,27,27,27,27,27,]),'ELSEIF':([2,71,108,143,145,147,168,],[28,28,28,28,28,28,28,]),'CLOSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,62,97,101,116,134,138,146,149,150,165,166,167,169,172,],[-16,51,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-21,-20,-50,-19,-55,-76,-32,-68,-105,-22,-31,-15,-38,-65,-39,]),'VAR_EXPORT':([2,71,108,143,145,147,168,],[29,29,29,29,29,29,29,]),'ECHO':([2,71,108,143,145,147,168,],[30,30,30,30,30,30,30,]),'PRINT':([2,71,108,143,145,147,168,],[31,31,31,31,31,31,31,]),'PRINT_R':([2,71,108,143,145,147,168,],[32,32,32,32,32,32,32,]),'VAR_DUMP':([2,71,108,143,145,147,168,],[33,33,33,33,33,33,33,]),'SUFFLE':([2,71,108,143,145,147,168,],[34,34,34,34,34,34,34,]),'ARRAY_MERGE':([2,71,108,143,145,147,168,],[35,35,35,35,35,35,35,]),'ARRAY_SEARCH':([2,71,108,143,145,147,168,],[36,36,36,36,36,36,36,]),'ARRAY_RAND':([2,71,108,143,145,147,168,],[37,37,37,37,37,37,37,]),'ARRAY_CHUNK':([2,71,108,143,145,147,168,],[38,38,38,38,38,38,38,]),'STR_SPLIT':([2,71,108,143,145,147,168,],[39,39,39,39,39,39,39,]),'PREG_SPLIT':([2,71,108,143,145,147,168,],[40,40,40,40,40,40,40,]),'ARRAY_UNIQUE':([2,71,108,143,145,147,168,],[41,41,41,41,41,41,41,]),'COUNT':([2,71,108,143,145,147,168,],[42,42,42,42,42,42,42,]),'SIZEOF':([2,71,108,143,145,147,168,],[43,43,43,43,43,43,43,]),'ARRAY_PUSH':([2,71,108,143,145,147,168,],[44,44,44,44,44,44,44,]),'SORT':([2,71,108,143,145,147,168,],[45,45,45,45,45,45,45,]),'ASORT':([2,71,108,143,145,147,168,],[46,46,46,46,46,46,46,]),'KSORT':([2,71,108,143,145,147,168,],[47,47,47,47,47,47,47,]),'UNSET':([2,71,108,143,145,147,168,],[48,48,48,48,48,48,48,]),'IMPLODE':([2,71,108,143,145,147,168,],[49,49,49,49,49,49,49,]),'EXPLODE':([2,71,108,143,145,147,168,],[50,50,50,50,50,50,50,]),'RCORCHET':([4,5,6,7,8,9,10,11,12,13,14,15,16,21,62,71,97,101,108,109,116,134,137,138,143,145,146,147,149,150,156,157,158,159,160,161,165,166,167,168,169,171,172,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-21,-20,-16,-50,-19,-16,138,-55,-76,149,-32,-16,-16,-68,-16,-105,-22,165,166,167,-35,-36,-37,-31,-15,-38,-16,-65,172,-39,]),'ELSE':([5,165,],[52,-31,]),'EQUALS':([17,],[53,]),'AND':([17,],[55,]),'OR':([17,],[56,]),'XOR':([17,],[57,]),'NOT':([17,],[58,]),'LPAREN':([18,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,60,84,85,87,88,89,90,91,92,93,94,95,96,117,],[59,66,67,68,69,-33,-34,-71,-72,-73,-74,-75,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,100,118,119,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,140,]),'FNOMBRE':([19,26,74,86,],[60,70,117,120,]),'NUMBER':([20,53,59,68,110,111,112,113,114,115,119,122,123,124,125,126,127,128,129,130,131,],[63,75,63,63,63,-23,-24,-25,-26,-27,63,63,-41,-42,-43,-44,-45,-46,-47,-48,-49,]),'DECIMAL':([20,53,59,68,110,111,112,113,114,115,119,122,123,124,125,126,127,128,129,130,131,],[65,65,65,65,65,-23,-24,-25,-26,-27,65,65,-41,-42,-43,-44,-45,-46,-47,-48,-49,]),'LCORCHET':([52,70,121,132,135,162,],[71,108,143,145,147,168,]),'OBJECT_OPERATOR':([53,],[74,]),'TEXT':([53,66,118,154,],[77,104,141,164,]),'NULL':([53,],[78,]),'TRUE':([53,],[82,]),'FALSE':([53,],[83,]),'ARRAY':([53,],[85,]),'NEW':([53,],[86,]),'FGETS':([53,],[87,]),'FREAD':([53,],[88,]),'FSCANF':([53,],[89,]),'FPASSTHRU':([53,],[90,]),'FGETCSV':([53,],[91,]),'FGETC':([53,],[92,]),'FILE_GET_CONTENTS':([53,],[93,]),'READFILE':([53,],[94,]),'FILE':([53,],[95,]),'PARSE_INI_FILE':([53,],[96,]),'END':([61,63,64,65,73,75,76,77,78,79,80,81,82,83,120,133,139,155,163,170,],[101,-28,-29,-30,116,-57,-56,-58,-59,-60,-61,-62,-63,-64,-67,146,150,-66,169,-94,]),'IS_EQUAL':([63,64,65,99,],[-28,-29,-30,123,]),'IS_IDENTICAL':([63,64,65,99,],[-28,-29,-30,124,]),'IS_NOT_EQUAL':([63,64,65,99,],[-28,-29,-30,125,]),'IS_NOT_IDENTICAL':([63,64,65,99,],[-28,-29,-30,126,]),'IS_GREATER_OR_EQUAL':([63,64,65,99,],[-28,-29,-30,127,]),'IS_SMALLER_OR_EQUAL':([63,64,65,99,],[-28,-29,-30,128,]),'SPACESHIP':([63,64,65,99,],[-28,-29,-30,129,]),'MAYORQUE':([63,64,65,99,],[-28,-29,-30,130,]),'MENORQUE':([63,64,65,99,],[-28,-29,-30,131,]),'RPAREN':([63,64,65,98,100,102,103,104,105,106,140,142,144,148,151,152,153,164,],[-28,-29,-30,121,132,133,-69,-70,134,135,-16,155,-40,162,-17,163,-18,170,]),'PLUS':([64,65,72,75,],[-29,-30,111,-28,]),'MINUS':([64,65,72,75,],[-29,-30,112,-28,]),'DIVIDE':([64,65,72,75,],[-29,-30,113,-28,]),'TIMES':([64,65,72,75,],[-29,-30,114,-28,]),'MODULO':([64,65,72,75,],[-29,-30,115,-28,]),'AS':([107,],[136,]),'COMA':([141,],[154,]),'BREAK':([147,168,],[159,159,]),'CONTINUE':([147,168,],[160,160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracion':([2,71,108,143,145,147,168,],[3,109,137,156,157,161,161,]),'expression':([2,71,108,143,145,147,168,],[4,4,4,4,4,4,4,]),'expif':([2,71,108,143,145,147,168,],[5,5,5,5,5,5,5,]),'expelse':([2,71,108,143,145,147,168,],[6,6,6,6,6,6,6,]),'expresionlogica':([2,71,108,143,145,147,168,],[7,7,7,7,7,7,7,]),'declararvariable':([2,71,108,143,145,147,168,],[8,8,8,8,8,8,8,]),'creacionfunciones':([2,20,71,108,143,145,147,168,],[9,62,9,9,9,9,9,9,]),'returnvalores':([2,71,108,143,145,147,168,],[10,10,10,10,10,10,10,]),'operador_object':([2,71,108,143,145,147,168,],[11,11,11,11,11,11,11,]),'print':([2,71,108,143,145,147,168,],[12,12,12,12,12,12,12,]),'arreglos':([2,71,108,143,145,147,168,],[13,13,13,13,13,13,13,]),'while':([2,71,108,143,145,147,168,],[14,14,14,14,14,14,14,]),'foreach':([2,71,108,143,145,147,168,],[15,15,15,15,15,15,15,]),'clase':([2,71,108,143,145,147,168,],[16,16,16,16,16,16,16,]),'funcion_condicion':([2,71,108,143,145,147,168,],[18,18,18,18,18,18,18,]),'empty':([2,71,108,140,143,145,147,168,],[21,21,21,153,21,21,21,21,]),'funcion_print':([2,71,108,143,145,147,168,],[22,22,22,22,22,22,22,]),'funcion_arreglo':([2,71,108,143,145,147,168,],[23,23,23,23,23,23,23,]),'operadorlogico':([17,],[54,]),'termino':([20,53,59,68,110,119,122,],[61,72,99,99,139,142,144,]),'tipo':([53,],[73,]),'boolean':([53,],[76,]),'archivos':([53,],[79,]),'array':([53,],[80,]),'new':([53,],[81,]),'funcion_archivo':([53,],[84,]),'comparacion':([59,68,],[98,106,]),'argument':([66,],[102,]),'operadores':([72,],[110,]),'operadorcomparacion':([99,],[122,]),'argumentos':([140,],[152,]),'control_bucle':([147,168,],[158,171,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> OPEN declaracion CLOSE','programa',3,'p_programa','sintactico.py',8),
  ('declaracion -> expression','declaracion',1,'p_declaracion','sintactico.py',12),
  ('declaracion -> expif','declaracion',1,'p_declaracion','sintactico.py',13),
  ('declaracion -> expelse','declaracion',1,'p_declaracion','sintactico.py',14),
  ('declaracion -> expresionlogica','declaracion',1,'p_declaracion','sintactico.py',15),
  ('declaracion -> declararvariable','declaracion',1,'p_declaracion','sintactico.py',16),
  ('declaracion -> creacionfunciones','declaracion',1,'p_declaracion','sintactico.py',17),
  ('declaracion -> returnvalores','declaracion',1,'p_declaracion','sintactico.py',18),
  ('declaracion -> operador_object','declaracion',1,'p_declaracion','sintactico.py',19),
  ('declaracion -> print','declaracion',1,'p_declaracion','sintactico.py',20),
  ('declaracion -> arreglos','declaracion',1,'p_declaracion','sintactico.py',21),
  ('declaracion -> while','declaracion',1,'p_declaracion','sintactico.py',22),
  ('declaracion -> foreach','declaracion',1,'p_declaracion','sintactico.py',23),
  ('declaracion -> clase','declaracion',1,'p_declaracion','sintactico.py',24),
  ('creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET','creacionfunciones',7,'p_creacionfunciones','sintactico.py',28),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',31),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintactico.py',34),
  ('argumentos -> empty','argumentos',1,'p_argumentos','sintactico.py',35),
  ('returnvalores -> RETURN termino END','returnvalores',3,'p_returnvalores','sintactico.py',39),
  ('returnvalores -> RETURN creacionfunciones','returnvalores',2,'p_returnvalores','sintactico.py',40),
  ('returnvalores -> empty','returnvalores',1,'p_returnvalores','sintactico.py',41),
  ('expression -> ID EQUALS termino operadores termino END','expression',6,'p_expression_math','sintactico.py',45),
  ('operadores -> PLUS','operadores',1,'p_operadores','sintactico.py',50),
  ('operadores -> MINUS','operadores',1,'p_operadores','sintactico.py',51),
  ('operadores -> DIVIDE','operadores',1,'p_operadores','sintactico.py',52),
  ('operadores -> TIMES','operadores',1,'p_operadores','sintactico.py',53),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',54),
  ('termino -> NUMBER','termino',1,'p_termino','sintactico.py',58),
  ('termino -> ID','termino',1,'p_termino','sintactico.py',59),
  ('termino -> DECIMAL','termino',1,'p_termino','sintactico.py',60),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET','expif',7,'p_expif','sintactico.py',64),
  ('expelse -> expif ELSE LCORCHET declaracion RCORCHET','expelse',5,'p_expelse','sintactico.py',67),
  ('funcion_condicion -> IF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',70),
  ('funcion_condicion -> ELSEIF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',71),
  ('control_bucle -> BREAK','control_bucle',1,'p_control_bucle','sintactico.py',74),
  ('control_bucle -> CONTINUE','control_bucle',1,'p_control_bucle','sintactico.py',75),
  ('control_bucle -> declaracion','control_bucle',1,'p_control_bucle','sintactico.py',76),
  ('while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET','while',7,'p_while','sintactico.py',79),
  ('foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET','foreach',9,'p_foreach','sintactico.py',82),
  ('comparacion -> termino operadorcomparacion termino','comparacion',3,'p_comparacion','sintactico.py',86),
  ('operadorcomparacion -> IS_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',90),
  ('operadorcomparacion -> IS_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',91),
  ('operadorcomparacion -> IS_NOT_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',92),
  ('operadorcomparacion -> IS_NOT_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',93),
  ('operadorcomparacion -> IS_GREATER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',94),
  ('operadorcomparacion -> IS_SMALLER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',95),
  ('operadorcomparacion -> SPACESHIP','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',96),
  ('operadorcomparacion -> MAYORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',97),
  ('operadorcomparacion -> MENORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',98),
  ('expresionlogica -> ID operadorlogico ID','expresionlogica',3,'p_expresionlogica','sintactico.py',107),
  ('operadorlogico -> AND','operadorlogico',1,'p_operadorlogico','sintactico.py',110),
  ('operadorlogico -> OR','operadorlogico',1,'p_operadorlogico','sintactico.py',111),
  ('operadorlogico -> XOR','operadorlogico',1,'p_operadorlogico','sintactico.py',112),
  ('operadorlogico -> NOT','operadorlogico',1,'p_operadorlogico','sintactico.py',113),
  ('declararvariable -> ID EQUALS tipo END','declararvariable',4,'p_declararvariable','sintactico.py',117),
  ('tipo -> boolean','tipo',1,'p_tipo','sintactico.py',121),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',122),
  ('tipo -> TEXT','tipo',1,'p_tipo','sintactico.py',123),
  ('tipo -> NULL','tipo',1,'p_tipo','sintactico.py',124),
  ('tipo -> archivos','tipo',1,'p_tipo','sintactico.py',125),
  ('tipo -> array','tipo',1,'p_tipo','sintactico.py',126),
  ('tipo -> new','tipo',1,'p_tipo','sintactico.py',127),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',130),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',131),
  ('operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END','operador_object',8,'p_operador_object','sintactico.py',134),
  ('array -> ARRAY LPAREN termino RPAREN','array',4,'p_array','sintactico.py',137),
  ('new -> NEW FNOMBRE','new',2,'p_new','sintactico.py',140),
  ('print -> funcion_print LPAREN argument RPAREN END','print',5,'p_print','sintactico.py',155),
  ('argument -> ID','argument',1,'p_argument','sintactico.py',158),
  ('argument -> TEXT','argument',1,'p_argument','sintactico.py',159),
  ('funcion_print -> VAR_EXPORT','funcion_print',1,'p_funcion_print','sintactico.py',162),
  ('funcion_print -> ECHO','funcion_print',1,'p_funcion_print','sintactico.py',163),
  ('funcion_print -> PRINT','funcion_print',1,'p_funcion_print','sintactico.py',164),
  ('funcion_print -> PRINT_R','funcion_print',1,'p_funcion_print','sintactico.py',165),
  ('funcion_print -> VAR_DUMP','funcion_print',1,'p_funcion_print','sintactico.py',166),
  ('arreglos -> funcion_arreglo LPAREN ID RPAREN','arreglos',4,'p_arreglos','sintactico.py',169),
  ('funcion_arreglo -> SUFFLE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',172),
  ('funcion_arreglo -> ARRAY_MERGE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',173),
  ('funcion_arreglo -> ARRAY_SEARCH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',174),
  ('funcion_arreglo -> ARRAY_RAND','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',175),
  ('funcion_arreglo -> ARRAY_CHUNK','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',176),
  ('funcion_arreglo -> STR_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',177),
  ('funcion_arreglo -> PREG_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',178),
  ('funcion_arreglo -> ARRAY_UNIQUE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',179),
  ('funcion_arreglo -> COUNT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',180),
  ('funcion_arreglo -> SIZEOF','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',181),
  ('funcion_arreglo -> ARRAY_PUSH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',182),
  ('funcion_arreglo -> SORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',183),
  ('funcion_arreglo -> ASORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',184),
  ('funcion_arreglo -> KSORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',185),
  ('funcion_arreglo -> UNSET','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',186),
  ('funcion_arreglo -> IMPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',187),
  ('funcion_arreglo -> EXPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',188),
  ('archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN','archivos',6,'p_archivos','sintactico.py',191),
  ('funcion_archivo -> FGETS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',194),
  ('funcion_archivo -> FREAD','funcion_archivo',1,'p_funcion_archivo','sintactico.py',195),
  ('funcion_archivo -> FSCANF','funcion_archivo',1,'p_funcion_archivo','sintactico.py',196),
  ('funcion_archivo -> FPASSTHRU','funcion_archivo',1,'p_funcion_archivo','sintactico.py',197),
  ('funcion_archivo -> FGETCSV','funcion_archivo',1,'p_funcion_archivo','sintactico.py',198),
  ('funcion_archivo -> FGETC','funcion_archivo',1,'p_funcion_archivo','sintactico.py',199),
  ('funcion_archivo -> FILE_GET_CONTENTS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',200),
  ('funcion_archivo -> READFILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',201),
  ('funcion_archivo -> FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',202),
  ('funcion_archivo -> PARSE_INI_FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',203),
  ('clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET','clase',5,'p_clase','sintactico.py',207),
]

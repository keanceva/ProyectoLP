
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_CHUNK ARRAY_MERGE ARRAY_PUSH ARRAY_RAND ARRAY_SEARCH ARRAY_UNIQUE AS ASORT BREAK CLASS CLOSE COMA CONTINUE COUNT DECIMAL DIVIDE ECHO ELSE ELSEIF END EQUALS EXPLODE FALSE FGETC FGETCSV FGETS FILE FILE_GET_CONTENTS FNOMBRE FOREACH FPASSTHRU FREAD FSCANF FUNCTION ID IF IMPLODE IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL KSORT LCORCHET LPAREN MAYORQUE MENORQUE MINUS MODULO NEW NOT NULL NUMBER OBJECT_OPERATOR OPEN OR PARSE_INI_FILE PLUS PREG_SPLIT PRINT PRINT_R RCORCHET READFILE RETURN RPAREN SIZEOF SORT SPACESHIP STR_SPLIT SUFFLE TEXT TIMES TRUE UNSET VAR_DUMP VAR_EXPORT WHILE XORprograma : OPEN  declaracion CLOSE\n                    | OPEN declaracion\n                    | declaracion CLOSE\n                    | declaracion\n                    | CLOSE\n                    | OPENdeclaracion :  expression\n                        | expif\n                        | expelse\n                        | expresionlogica\n                        | declararvariable\n                        | creacionfunciones\n                        | returnvalores\n                        | operador_object\n                        | print\n                        | arreglos\n                        | while\n                        | foreach\n                        | clase\n                        | declaracioncreacionfunciones : FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET empty : argumentos :   ID\n                    | emptyreturnvalores :  RETURN termino END\n                      | RETURN creacionfunciones\n                      | empty expression : ID EQUALS operacion_matematica ENDoperacion_matematica :  termino operadores operacion_matematica\n                                | termino operadores termino\n    operadores : PLUS\n                    | MINUS\n                    | DIVIDE\n                    | TIMES\n                    | MODULOtermino : NUMBER\n                    | ID\n                    | DECIMALexpif : funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET\n                | funcion_condicion LPAREN comparacion RPAREN LCORCHET\n                | declaracion RCORCHET\n                | declaracion\n                | RCORCHETexpelse : expif ELSE LCORCHET declaracion RCORCHETfuncion_condicion : IF\n                          | ELSEIFcontrol_bucle : BREAK\n                        | CONTINUE\n                        | declaracionwhile : WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHETforeach : FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHETcomparacion : termino operadorcomparacion terminooperadorcomparacion : IS_EQUAL\n                            | IS_IDENTICAL\n                            | IS_NOT_EQUAL\n                            | IS_NOT_IDENTICAL\n                            | IS_GREATER_OR_EQUAL\n                            | IS_SMALLER_OR_EQUAL\n                            | SPACESHIP\n                            | MAYORQUE\n                            | MENORQUE expresionlogica : ID operadorlogico IDoperadorlogico : AND\n                        | OR\n                        | XOR\n                        | NOT declararvariable : ID EQUALS tipo END tipo : boolean\n            | NUMBER\n            | TEXT\n            | NULL\n            | archivos\n            | array\n            | new boolean : TRUE\n                | FALSEoperador_object : ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN ENDarray : ARRAY LPAREN valores_array RPAREN valores_array : elementos_array COMA valores_array\n                          | elementos_array\n                          | empty\n      elementos_array : NUMBER\n                          | TEXT\n                          | empty\n                          | boolean\n                          | array\n    new : NEW FNOMBRE print : funcion_print LPAREN argument RPAREN END\n                | funcion_print argument END\n                | ECHO LPAREN valores_echo RPAREN END\n                | ECHO valores_echo ENDargument : ID\n                    | TEXT valores_echo : argument COMA valores_echo\n                        | argument\n                        funcion_print : VAR_EXPORT\n                       | ECHO\n                        |  PRINT\n                        | PRINT_R\n                        | VAR_DUMParreglos : funcion_arreglo LPAREN ID RPARENfuncion_arreglo :  SUFFLE\n                        | ARRAY_MERGE\n                        | ARRAY_SEARCH\n                        | ARRAY_RAND\n                        | ARRAY_CHUNK\n                        | STR_SPLIT\n                        | PREG_SPLIT\n                        | ARRAY_UNIQUE\n                         | COUNT\n                         | SIZEOF\n                         | ARRAY_PUSH\n                         | SORT\n                         | ASORT\n                         | KSORT\n                         | UNSET\n                         | IMPLODE\n                        | EXPLODE archivos : funcion_archivo LPAREN TEXT COMA TEXT RPARENfuncion_archivo : FGETS\n                    | FREAD\n                    | FSCANF\n                    | FPASSTHRU\n                    | FGETCSV\n                    | FGETC\n                    | FILE_GET_CONTENTS\n                    | READFILE\n                    | FILE\n                    | PARSE_INI_FILE\n                    clase : CLASS FNOMBRE LCORCHET declaracion RCORCHET'
    
_lr_action_items = {'OPEN':([0,],[2,]),'CLOSE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,53,55,66,109,113,115,117,124,125,151,155,167,170,171,174,191,192,193,195,198,],[4,-22,54,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,81,-41,-26,-62,-25,-89,-91,-28,-67,-101,-44,-40,-88,-90,-130,-39,-21,-50,-77,-51,]),'ID':([0,2,22,24,25,32,33,34,35,57,58,59,60,61,62,63,70,74,77,78,79,82,118,122,127,128,129,130,131,132,137,138,139,140,141,142,143,144,145,146,153,156,167,169,172,194,],[18,18,68,72,72,-96,-98,-99,-100,68,109,-63,-64,-65,-66,68,72,72,119,68,121,18,72,18,68,-31,-32,-33,-34,-35,68,-53,-54,-55,-56,-57,-58,-59,-60,-61,173,175,18,18,18,18,]),'RCORCHET':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,53,55,66,82,109,113,115,117,122,123,124,125,151,154,155,167,169,170,171,172,174,181,182,183,184,185,186,191,192,193,194,195,197,198,],[20,20,55,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,55,-41,-26,20,-62,-25,-89,-91,20,155,-28,-67,-101,174,-41,20,20,-88,-90,20,-41,191,192,193,-47,-48,55,-39,-21,-50,20,-77,198,-51,]),'FUNCTION':([0,2,22,82,122,167,169,172,194,],[21,21,21,21,21,21,21,21,21,]),'RETURN':([0,2,82,122,167,169,172,194,],[22,22,22,22,22,22,22,22,]),'ECHO':([0,2,82,122,167,169,172,194,],[25,25,25,25,25,25,25,25,]),'WHILE':([0,2,82,122,167,169,172,194,],[27,27,27,27,27,27,27,27,]),'FOREACH':([0,2,82,122,167,169,172,194,],[28,28,28,28,28,28,28,28,]),'CLASS':([0,2,82,122,167,169,172,194,],[29,29,29,29,29,29,29,29,]),'IF':([0,2,82,122,167,169,172,194,],[30,30,30,30,30,30,30,30,]),'ELSEIF':([0,2,82,122,167,169,172,194,],[31,31,31,31,31,31,31,31,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,53,54,55,66,81,109,113,115,117,124,125,151,155,167,170,171,174,191,192,193,195,198,],[-22,0,-6,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,-2,-3,-41,-26,-1,-62,-25,-89,-91,-28,-67,-101,-44,-40,-88,-90,-130,-39,-21,-50,-77,-51,]),'ELSE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,53,55,66,82,109,113,115,117,122,123,124,125,151,154,155,167,169,170,171,172,174,181,182,186,191,192,193,194,195,198,],[-22,-22,-20,-7,56,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,-20,-41,-26,-22,-62,-25,-89,-91,-22,-20,-28,-67,-101,-20,-41,-22,-22,-88,-90,-22,-41,-20,-20,-20,-39,-21,-50,-22,-77,-51,]),'VAR_EXPORT':([0,2,82,122,167,169,172,194,],[32,32,32,32,32,32,32,32,]),'PRINT':([0,2,82,122,167,169,172,194,],[33,33,33,33,33,33,33,33,]),'PRINT_R':([0,2,82,122,167,169,172,194,],[34,34,34,34,34,34,34,34,]),'VAR_DUMP':([0,2,82,122,167,169,172,194,],[35,35,35,35,35,35,35,35,]),'SUFFLE':([0,2,82,122,167,169,172,194,],[36,36,36,36,36,36,36,36,]),'ARRAY_MERGE':([0,2,82,122,167,169,172,194,],[37,37,37,37,37,37,37,37,]),'ARRAY_SEARCH':([0,2,82,122,167,169,172,194,],[38,38,38,38,38,38,38,38,]),'ARRAY_RAND':([0,2,82,122,167,169,172,194,],[39,39,39,39,39,39,39,39,]),'ARRAY_CHUNK':([0,2,82,122,167,169,172,194,],[40,40,40,40,40,40,40,40,]),'STR_SPLIT':([0,2,82,122,167,169,172,194,],[41,41,41,41,41,41,41,41,]),'PREG_SPLIT':([0,2,82,122,167,169,172,194,],[42,42,42,42,42,42,42,42,]),'ARRAY_UNIQUE':([0,2,82,122,167,169,172,194,],[43,43,43,43,43,43,43,43,]),'COUNT':([0,2,82,122,167,169,172,194,],[44,44,44,44,44,44,44,44,]),'SIZEOF':([0,2,82,122,167,169,172,194,],[45,45,45,45,45,45,45,45,]),'ARRAY_PUSH':([0,2,82,122,167,169,172,194,],[46,46,46,46,46,46,46,46,]),'SORT':([0,2,82,122,167,169,172,194,],[47,47,47,47,47,47,47,47,]),'ASORT':([0,2,82,122,167,169,172,194,],[48,48,48,48,48,48,48,48,]),'KSORT':([0,2,82,122,167,169,172,194,],[49,49,49,49,49,49,49,49,]),'UNSET':([0,2,82,122,167,169,172,194,],[50,50,50,50,50,50,50,50,]),'IMPLODE':([0,2,82,122,167,169,172,194,],[51,51,51,51,51,51,51,51,]),'EXPLODE':([0,2,82,122,167,169,172,194,],[52,52,52,52,52,52,52,52,]),'EQUALS':([18,],[57,]),'AND':([18,],[59,]),'OR':([18,],[60,]),'XOR':([18,],[61,]),'NOT':([18,],[62,]),'LPAREN':([19,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,64,96,97,99,100,101,102,103,104,105,106,107,108,126,],[63,70,74,77,78,79,-45,-46,-96,-98,-99,-100,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,112,133,134,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,156,]),'FNOMBRE':([21,29,85,98,],[64,80,126,135,]),'NUMBER':([22,57,63,78,127,128,129,130,131,132,134,137,138,139,140,141,142,143,144,145,146,180,],[67,88,67,67,67,-31,-32,-33,-34,-35,163,67,-53,-54,-55,-56,-57,-58,-59,-60,-61,163,]),'DECIMAL':([22,57,63,78,127,128,129,130,131,132,137,138,139,140,141,142,143,144,145,146,],[69,69,69,69,69,-31,-32,-33,-34,-35,69,-53,-54,-55,-56,-57,-58,-59,-60,-61,]),'TEXT':([24,25,32,33,34,35,57,70,74,118,133,134,178,180,],[73,73,-96,-98,-99,-100,89,73,73,73,159,164,189,164,]),'LCORCHET':([56,80,136,147,152,187,],[82,122,167,169,172,194,]),'OBJECT_OPERATOR':([57,],[85,]),'NULL':([57,],[90,]),'TRUE':([57,134,180,],[94,94,94,]),'FALSE':([57,134,180,],[95,95,95,]),'ARRAY':([57,134,180,],[97,97,97,]),'NEW':([57,],[98,]),'FGETS':([57,],[99,]),'FREAD':([57,],[100,]),'FSCANF':([57,],[101,]),'FPASSTHRU':([57,],[102,]),'FGETCSV':([57,],[103,]),'FGETC':([57,],[104,]),'FILE_GET_CONTENTS':([57,],[105,]),'READFILE':([57,],[106,]),'FILE':([57,],[107,]),'PARSE_INI_FILE':([57,],[108,]),'END':([65,67,68,69,71,72,73,75,76,83,84,87,88,89,90,91,92,93,94,95,135,148,149,150,157,158,179,188,196,],[113,-36,-37,-38,115,-92,-93,117,-95,124,125,-68,-69,-70,-71,-72,-73,-74,-75,-76,-87,170,171,-94,-30,-29,-78,195,-119,]),'IS_EQUAL':([67,68,69,111,],[-36,-37,-38,138,]),'IS_IDENTICAL':([67,68,69,111,],[-36,-37,-38,139,]),'IS_NOT_EQUAL':([67,68,69,111,],[-36,-37,-38,140,]),'IS_NOT_IDENTICAL':([67,68,69,111,],[-36,-37,-38,141,]),'IS_GREATER_OR_EQUAL':([67,68,69,111,],[-36,-37,-38,142,]),'IS_SMALLER_OR_EQUAL':([67,68,69,111,],[-36,-37,-38,143,]),'SPACESHIP':([67,68,69,111,],[-36,-37,-38,144,]),'MAYORQUE':([67,68,69,111,],[-36,-37,-38,145,]),'MENORQUE':([67,68,69,111,],[-36,-37,-38,146,]),'PLUS':([67,68,69,86,88,157,],[-36,-37,-38,128,-36,128,]),'MINUS':([67,68,69,86,88,157,],[-36,-37,-38,129,-36,129,]),'DIVIDE':([67,68,69,86,88,157,],[-36,-37,-38,130,-36,130,]),'TIMES':([67,68,69,86,88,157,],[-36,-37,-38,131,-36,131,]),'MODULO':([67,68,69,86,88,157,],[-36,-37,-38,132,-36,132,]),'RPAREN':([67,68,69,72,73,76,94,95,110,112,114,116,119,120,134,150,156,160,161,162,163,164,165,166,168,173,175,176,177,179,180,189,190,],[-36,-37,-38,-92,-93,-95,-75,-76,136,147,148,149,151,152,-22,-94,-22,179,-80,-81,-82,-83,-85,-86,-52,187,-23,188,-24,-78,-22,196,-79,]),'COMA':([72,73,76,94,95,134,159,161,162,163,164,165,166,179,180,],[-92,-93,118,-75,-76,-22,178,180,-84,-82,-83,-85,-86,-78,-22,]),'AS':([121,],[153,]),'BREAK':([172,194,],[184,184,]),'CONTINUE':([172,194,],[185,185,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracion':([0,2,82,122,167,169,172,194,],[3,53,123,154,181,182,186,186,]),'expression':([0,2,82,122,167,169,172,194,],[5,5,5,5,5,5,5,5,]),'expif':([0,2,82,122,167,169,172,194,],[6,6,6,6,6,6,6,6,]),'expelse':([0,2,82,122,167,169,172,194,],[7,7,7,7,7,7,7,7,]),'expresionlogica':([0,2,82,122,167,169,172,194,],[8,8,8,8,8,8,8,8,]),'declararvariable':([0,2,82,122,167,169,172,194,],[9,9,9,9,9,9,9,9,]),'creacionfunciones':([0,2,22,82,122,167,169,172,194,],[10,10,66,10,10,10,10,10,10,]),'returnvalores':([0,2,82,122,167,169,172,194,],[11,11,11,11,11,11,11,11,]),'operador_object':([0,2,82,122,167,169,172,194,],[12,12,12,12,12,12,12,12,]),'print':([0,2,82,122,167,169,172,194,],[13,13,13,13,13,13,13,13,]),'arreglos':([0,2,82,122,167,169,172,194,],[14,14,14,14,14,14,14,14,]),'while':([0,2,82,122,167,169,172,194,],[15,15,15,15,15,15,15,15,]),'foreach':([0,2,82,122,167,169,172,194,],[16,16,16,16,16,16,16,16,]),'clase':([0,2,82,122,167,169,172,194,],[17,17,17,17,17,17,17,17,]),'funcion_condicion':([0,2,82,122,167,169,172,194,],[19,19,19,19,19,19,19,19,]),'empty':([0,2,82,122,134,156,167,169,172,180,194,],[23,23,23,23,162,177,23,23,23,162,23,]),'funcion_print':([0,2,82,122,167,169,172,194,],[24,24,24,24,24,24,24,24,]),'funcion_arreglo':([0,2,82,122,167,169,172,194,],[26,26,26,26,26,26,26,26,]),'operadorlogico':([18,],[58,]),'termino':([22,57,63,78,127,137,],[65,86,111,111,157,168,]),'argument':([24,25,70,74,118,],[71,76,114,76,76,]),'valores_echo':([25,74,118,],[75,116,150,]),'operacion_matematica':([57,127,],[83,158,]),'tipo':([57,],[84,]),'boolean':([57,134,180,],[87,165,165,]),'archivos':([57,],[91,]),'array':([57,134,180,],[92,166,166,]),'new':([57,],[93,]),'funcion_archivo':([57,],[96,]),'comparacion':([63,78,],[110,120,]),'operadores':([86,157,],[127,127,]),'operadorcomparacion':([111,],[137,]),'valores_array':([134,180,],[160,190,]),'elementos_array':([134,180,],[161,161,]),'argumentos':([156,],[176,]),'control_bucle':([172,194,],[183,197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> OPEN declaracion CLOSE','programa',3,'p_programa','sintactico.py',11),
  ('programa -> OPEN declaracion','programa',2,'p_programa','sintactico.py',12),
  ('programa -> declaracion CLOSE','programa',2,'p_programa','sintactico.py',13),
  ('programa -> declaracion','programa',1,'p_programa','sintactico.py',14),
  ('programa -> CLOSE','programa',1,'p_programa','sintactico.py',15),
  ('programa -> OPEN','programa',1,'p_programa','sintactico.py',16),
  ('declaracion -> expression','declaracion',1,'p_declaracion','sintactico.py',20),
  ('declaracion -> expif','declaracion',1,'p_declaracion','sintactico.py',21),
  ('declaracion -> expelse','declaracion',1,'p_declaracion','sintactico.py',22),
  ('declaracion -> expresionlogica','declaracion',1,'p_declaracion','sintactico.py',23),
  ('declaracion -> declararvariable','declaracion',1,'p_declaracion','sintactico.py',24),
  ('declaracion -> creacionfunciones','declaracion',1,'p_declaracion','sintactico.py',25),
  ('declaracion -> returnvalores','declaracion',1,'p_declaracion','sintactico.py',26),
  ('declaracion -> operador_object','declaracion',1,'p_declaracion','sintactico.py',27),
  ('declaracion -> print','declaracion',1,'p_declaracion','sintactico.py',28),
  ('declaracion -> arreglos','declaracion',1,'p_declaracion','sintactico.py',29),
  ('declaracion -> while','declaracion',1,'p_declaracion','sintactico.py',30),
  ('declaracion -> foreach','declaracion',1,'p_declaracion','sintactico.py',31),
  ('declaracion -> clase','declaracion',1,'p_declaracion','sintactico.py',32),
  ('declaracion -> declaracion','declaracion',1,'p_declaracion','sintactico.py',33),
  ('creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET','creacionfunciones',7,'p_creacionfunciones','sintactico.py',38),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',41),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintactico.py',44),
  ('argumentos -> empty','argumentos',1,'p_argumentos','sintactico.py',45),
  ('returnvalores -> RETURN termino END','returnvalores',3,'p_returnvalores','sintactico.py',49),
  ('returnvalores -> RETURN creacionfunciones','returnvalores',2,'p_returnvalores','sintactico.py',50),
  ('returnvalores -> empty','returnvalores',1,'p_returnvalores','sintactico.py',51),
  ('expression -> ID EQUALS operacion_matematica END','expression',4,'p_expression_math','sintactico.py',55),
  ('operacion_matematica -> termino operadores operacion_matematica','operacion_matematica',3,'p_operacion_matematica','sintactico.py',58),
  ('operacion_matematica -> termino operadores termino','operacion_matematica',3,'p_operacion_matematica','sintactico.py',59),
  ('operadores -> PLUS','operadores',1,'p_operadores','sintactico.py',63),
  ('operadores -> MINUS','operadores',1,'p_operadores','sintactico.py',64),
  ('operadores -> DIVIDE','operadores',1,'p_operadores','sintactico.py',65),
  ('operadores -> TIMES','operadores',1,'p_operadores','sintactico.py',66),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',67),
  ('termino -> NUMBER','termino',1,'p_termino','sintactico.py',71),
  ('termino -> ID','termino',1,'p_termino','sintactico.py',72),
  ('termino -> DECIMAL','termino',1,'p_termino','sintactico.py',73),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET','expif',7,'p_expif','sintactico.py',77),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET','expif',5,'p_expif','sintactico.py',78),
  ('expif -> declaracion RCORCHET','expif',2,'p_expif','sintactico.py',79),
  ('expif -> declaracion','expif',1,'p_expif','sintactico.py',80),
  ('expif -> RCORCHET','expif',1,'p_expif','sintactico.py',81),
  ('expelse -> expif ELSE LCORCHET declaracion RCORCHET','expelse',5,'p_expelse','sintactico.py',84),
  ('funcion_condicion -> IF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',87),
  ('funcion_condicion -> ELSEIF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',88),
  ('control_bucle -> BREAK','control_bucle',1,'p_control_bucle','sintactico.py',91),
  ('control_bucle -> CONTINUE','control_bucle',1,'p_control_bucle','sintactico.py',92),
  ('control_bucle -> declaracion','control_bucle',1,'p_control_bucle','sintactico.py',93),
  ('while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET','while',7,'p_while','sintactico.py',96),
  ('foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET','foreach',9,'p_foreach','sintactico.py',99),
  ('comparacion -> termino operadorcomparacion termino','comparacion',3,'p_comparacion','sintactico.py',103),
  ('operadorcomparacion -> IS_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',107),
  ('operadorcomparacion -> IS_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',108),
  ('operadorcomparacion -> IS_NOT_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',109),
  ('operadorcomparacion -> IS_NOT_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',110),
  ('operadorcomparacion -> IS_GREATER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',111),
  ('operadorcomparacion -> IS_SMALLER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',112),
  ('operadorcomparacion -> SPACESHIP','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',113),
  ('operadorcomparacion -> MAYORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',114),
  ('operadorcomparacion -> MENORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',115),
  ('expresionlogica -> ID operadorlogico ID','expresionlogica',3,'p_expresionlogica','sintactico.py',124),
  ('operadorlogico -> AND','operadorlogico',1,'p_operadorlogico','sintactico.py',127),
  ('operadorlogico -> OR','operadorlogico',1,'p_operadorlogico','sintactico.py',128),
  ('operadorlogico -> XOR','operadorlogico',1,'p_operadorlogico','sintactico.py',129),
  ('operadorlogico -> NOT','operadorlogico',1,'p_operadorlogico','sintactico.py',130),
  ('declararvariable -> ID EQUALS tipo END','declararvariable',4,'p_declararvariable','sintactico.py',134),
  ('tipo -> boolean','tipo',1,'p_tipo','sintactico.py',138),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',139),
  ('tipo -> TEXT','tipo',1,'p_tipo','sintactico.py',140),
  ('tipo -> NULL','tipo',1,'p_tipo','sintactico.py',141),
  ('tipo -> archivos','tipo',1,'p_tipo','sintactico.py',142),
  ('tipo -> array','tipo',1,'p_tipo','sintactico.py',143),
  ('tipo -> new','tipo',1,'p_tipo','sintactico.py',144),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',147),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',148),
  ('operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END','operador_object',8,'p_operador_object','sintactico.py',151),
  ('array -> ARRAY LPAREN valores_array RPAREN','array',4,'p_array','sintactico.py',154),
  ('valores_array -> elementos_array COMA valores_array','valores_array',3,'p_valores_array','sintactico.py',157),
  ('valores_array -> elementos_array','valores_array',1,'p_valores_array','sintactico.py',158),
  ('valores_array -> empty','valores_array',1,'p_valores_array','sintactico.py',159),
  ('elementos_array -> NUMBER','elementos_array',1,'p_elementos_array','sintactico.py',162),
  ('elementos_array -> TEXT','elementos_array',1,'p_elementos_array','sintactico.py',163),
  ('elementos_array -> empty','elementos_array',1,'p_elementos_array','sintactico.py',164),
  ('elementos_array -> boolean','elementos_array',1,'p_elementos_array','sintactico.py',165),
  ('elementos_array -> array','elementos_array',1,'p_elementos_array','sintactico.py',166),
  ('new -> NEW FNOMBRE','new',2,'p_new','sintactico.py',170),
  ('print -> funcion_print LPAREN argument RPAREN END','print',5,'p_print','sintactico.py',185),
  ('print -> funcion_print argument END','print',3,'p_print','sintactico.py',186),
  ('print -> ECHO LPAREN valores_echo RPAREN END','print',5,'p_print','sintactico.py',187),
  ('print -> ECHO valores_echo END','print',3,'p_print','sintactico.py',188),
  ('argument -> ID','argument',1,'p_argument','sintactico.py',191),
  ('argument -> TEXT','argument',1,'p_argument','sintactico.py',192),
  ('valores_echo -> argument COMA valores_echo','valores_echo',3,'p_valores_echo','sintactico.py',195),
  ('valores_echo -> argument','valores_echo',1,'p_valores_echo','sintactico.py',196),
  ('funcion_print -> VAR_EXPORT','funcion_print',1,'p_funcion_print','sintactico.py',200),
  ('funcion_print -> ECHO','funcion_print',1,'p_funcion_print','sintactico.py',201),
  ('funcion_print -> PRINT','funcion_print',1,'p_funcion_print','sintactico.py',202),
  ('funcion_print -> PRINT_R','funcion_print',1,'p_funcion_print','sintactico.py',203),
  ('funcion_print -> VAR_DUMP','funcion_print',1,'p_funcion_print','sintactico.py',204),
  ('arreglos -> funcion_arreglo LPAREN ID RPAREN','arreglos',4,'p_arreglos','sintactico.py',207),
  ('funcion_arreglo -> SUFFLE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',210),
  ('funcion_arreglo -> ARRAY_MERGE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',211),
  ('funcion_arreglo -> ARRAY_SEARCH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',212),
  ('funcion_arreglo -> ARRAY_RAND','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',213),
  ('funcion_arreglo -> ARRAY_CHUNK','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',214),
  ('funcion_arreglo -> STR_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',215),
  ('funcion_arreglo -> PREG_SPLIT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',216),
  ('funcion_arreglo -> ARRAY_UNIQUE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',217),
  ('funcion_arreglo -> COUNT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',218),
  ('funcion_arreglo -> SIZEOF','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',219),
  ('funcion_arreglo -> ARRAY_PUSH','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',220),
  ('funcion_arreglo -> SORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',221),
  ('funcion_arreglo -> ASORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',222),
  ('funcion_arreglo -> KSORT','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',223),
  ('funcion_arreglo -> UNSET','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',224),
  ('funcion_arreglo -> IMPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',225),
  ('funcion_arreglo -> EXPLODE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',226),
  ('archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN','archivos',6,'p_archivos','sintactico.py',229),
  ('funcion_archivo -> FGETS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',232),
  ('funcion_archivo -> FREAD','funcion_archivo',1,'p_funcion_archivo','sintactico.py',233),
  ('funcion_archivo -> FSCANF','funcion_archivo',1,'p_funcion_archivo','sintactico.py',234),
  ('funcion_archivo -> FPASSTHRU','funcion_archivo',1,'p_funcion_archivo','sintactico.py',235),
  ('funcion_archivo -> FGETCSV','funcion_archivo',1,'p_funcion_archivo','sintactico.py',236),
  ('funcion_archivo -> FGETC','funcion_archivo',1,'p_funcion_archivo','sintactico.py',237),
  ('funcion_archivo -> FILE_GET_CONTENTS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',238),
  ('funcion_archivo -> READFILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',239),
  ('funcion_archivo -> FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',240),
  ('funcion_archivo -> PARSE_INI_FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',241),
  ('clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET','clase',5,'p_clase','sintactico.py',245),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_CHUNK ARRAY_MERGE ARRAY_PUSH ARRAY_RAND ARRAY_SEARCH ARRAY_UNIQUE AS ASORT BREAK CLASS CLOSE COMA CONTINUE COUNT DECIMAL DIVIDE ECHO ELSE ELSEIF END EQUALS EXPLODE FALSE FGETC FGETCSV FGETS FILE FILE_GET_CONTENTS FNOMBRE FOREACH FPASSTHRU FREAD FSCANF FUNCTION ID IF IMPLODE IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL KSORT LCORCHET LPAREN MAYORQUE MENORQUE MINUS MODULO NEW NOT NULL NUMBER OBJECT_OPERATOR OPEN OR PARSE_INI_FILE PLUS PREG_SPLIT PRINT PRINT_R RCORCHET READFILE RETURN RPAREN SIZEOF SORT SPACESHIP STR_SPLIT SUFFLE TEXT TIMES TRUE UNSET VAR_DUMP VAR_EXPORT WHILE XORprograma : OPEN  declaracion CLOSE\n                    | OPEN declaracion\n                    | declaracion CLOSE\n                    | declaracion\n                    | CLOSE\n                    | OPENdeclaracion :  expression\n                        | expif\n                        | expelse\n                        | expresionlogica\n                        | declararvariable\n                        | creacionfunciones\n                        | returnvalores\n                        | operador_object\n                        | print\n                        | arreglos\n                        | while\n                        | foreach\n                        | clase\n                        | declaracioncreacionfunciones : FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET empty : argumentos :   ID\n                    | emptyreturnvalores :  RETURN termino END\n                      | RETURN creacionfunciones\n                      | empty expression : ID EQUALS operacion_matematica ENDoperacion_matematica :  termino operadores operacion_matematica\n                                | termino operadores termino\n    operadores : PLUS\n                    | MINUS\n                    | DIVIDE\n                    | TIMES\n                    | MODULOtermino : NUMBER\n                    | ID\n                    | DECIMALexpif : funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET\n                | funcion_condicion LPAREN comparacion RPAREN LCORCHET\n                | declaracion RCORCHET\n                | declaracion\n                | RCORCHETexpelse : expif ELSE LCORCHET declaracion RCORCHET\n                | expif ELSE LCORCHET declaracion\n                | expif ELSE LCORCHET\n                | declaracion\n                | declaracion RCORCHET\n                | RCORCHETfuncion_condicion : IF\n                          | ELSEIFcontrol_bucle : declaracion\n                        | BREAK\n                        | CONTINUE\n                        while : WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET\n                | WHILE LPAREN comparacion RPAREN LCORCHET\n                | control_bucle RCORCHET\n                | control_bucle\n                | RCORCHETforeach : FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET\n                | FOREACH LPAREN ID AS ID RPAREN LCORCHET\n                | control_bucle RCORCHET\n                | control_bucle\n                | RCORCHET comparacion : valor_comparado operadorcomparacion valor_comparadovalor_comparado : NUMBER\n                        | boolean\n                        | operacion_matematica\n                        | IDoperadorcomparacion : IS_EQUAL\n                            | IS_IDENTICAL\n                            | IS_NOT_EQUAL\n                            | IS_NOT_IDENTICAL\n                            | IS_GREATER_OR_EQUAL\n                            | IS_SMALLER_OR_EQUAL\n                            | SPACESHIP\n                            | MAYORQUE\n                            | MENORQUE expresionlogica : ID operadorlogico IDoperadorlogico : AND\n                        | OR\n                        | XOR\n                        | NOT declararvariable : ID EQUALS tipo END tipo : boolean\n            | NUMBER\n            | TEXT\n            | NULL\n            | archivos\n            | array\n            | new boolean : TRUE\n                | FALSE\n                | expresionlogicaoperador_object : ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN ENDarray : ARRAY LPAREN valores_array RPAREN valores_array : elementos_array COMA valores_array\n                          | elementos_array\n                          | empty\n      elementos_array : NUMBER\n                          | TEXT\n                          | empty\n                          | boolean\n                          | array\n    new : NEW FNOMBRE print : funcion_print LPAREN argument RPAREN END\n                | funcion_print argument END\n                | ECHO LPAREN valores_echo RPAREN END\n                | ECHO valores_echo ENDargument : ID\n                    | TEXT valores_echo : argument COMA valores_echo\n                        | argument\n                        funcion_print : VAR_EXPORT\n                       | ECHO\n                        |  PRINT\n                        | PRINT_R\n                        | VAR_DUMParreglos : funcion_arreglo LPAREN ID RPARENargumento_doble : LPAREN ID COMA ID RPARENfuncion_argumento_doble :   ARRAY_MERGE\n                                    | ARRAY_SEARCH\n                                    | ARRAY_RAND\n                                    | ARRAY_CHUNK\n                                    | STR_SPLIT\n                                    | PREG_SPLIT\n                                     | COUNT\n                                     | ARRAY_PUSH\n                                     | SORT\n                                     | ASORT\n                                     | KSORT\n                                     | UNSET\n                                     | IMPLODE\n                                    | EXPLODE funcion_arreglo :  SUFFLE\n                        | ARRAY_UNIQUE\n                         | SIZEOF archivos : funcion_corta\n                    | estructura_funcionfuncion_corta : FGETS LPAREN ID COMA NUMBER RPARENestructura_funcion : funcion_archivo LPAREN opcion RPARENopcion : ID\n                | TEXTfuncion_archivo :  FREAD\n                    | FSCANF\n                    | FPASSTHRU\n                    | FGETCSV\n                    | FGETC\n                    | FILE_GET_CONTENTS\n                    | READFILE\n                    | FILE\n                    | PARSE_INI_FILE\n                    clase : CLASS FNOMBRE LCORCHET declaracion RCORCHET\n                | CLASS FNOMBRE LCORCHET\n                | declaracion RCORCHET\n                | declaracion\n                | RCORCHET '
    
_lr_action_items = {'OPEN':([0,],[2,]),'CLOSE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,28,40,41,42,44,55,68,72,103,111,113,115,120,121,122,123,150,154,170,173,174,175,177,193,194,195,196,197,200,],[4,-22,43,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,-58,-53,-54,71,-41,-26,-57,-22,-79,-25,-107,-109,-154,-20,-28,-84,-119,-41,-40,-106,-108,-56,-153,-39,-21,-55,-61,-95,-60,]),'ID':([0,2,22,24,25,33,34,35,36,46,47,48,49,50,51,52,59,63,66,67,69,72,116,120,125,126,127,128,129,130,131,133,134,136,137,138,139,140,141,142,143,144,145,152,155,170,172,175,182,196,],[18,18,57,61,61,-114,-116,-117,-118,73,103,-80,-81,-82,-83,109,61,61,117,109,119,18,61,18,57,-31,-32,-33,-34,-35,165,166,168,109,-70,-71,-72,-73,-74,-75,-76,-77,-78,176,178,18,18,18,165,18,]),'RCORCHET':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,28,40,41,42,44,55,68,72,103,111,113,115,120,121,122,123,150,153,154,170,172,173,174,175,177,185,186,187,188,193,194,195,196,197,199,200,],[20,20,44,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,68,-53,-54,44,-41,-26,-57,20,-79,-25,-107,-109,20,154,-28,-84,-119,177,-41,20,20,-106,-108,20,-41,193,194,195,44,-39,-21,-55,20,-95,200,-41,]),'FUNCTION':([0,2,22,72,120,170,172,175,196,],[21,21,21,21,21,21,21,21,21,]),'RETURN':([0,2,72,120,170,172,175,196,],[22,22,22,22,22,22,22,22,]),'ECHO':([0,2,72,120,170,172,175,196,],[25,25,25,25,25,25,25,25,]),'WHILE':([0,2,72,120,170,172,175,196,],[27,27,27,27,27,27,27,27,]),'FOREACH':([0,2,72,120,170,172,175,196,],[29,29,29,29,29,29,29,29,]),'CLASS':([0,2,72,120,170,172,175,196,],[30,30,30,30,30,30,30,30,]),'IF':([0,2,72,120,170,172,175,196,],[31,31,31,31,31,31,31,31,]),'ELSEIF':([0,2,72,120,170,172,175,196,],[32,32,32,32,32,32,32,32,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,28,40,41,42,43,44,55,68,71,72,103,111,113,115,120,121,122,123,150,154,170,173,174,175,177,193,194,195,196,197,200,],[-22,0,-6,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,-58,-53,-54,-2,-3,-41,-26,-57,-1,-22,-79,-25,-107,-109,-154,-20,-28,-84,-119,-41,-40,-106,-108,-56,-153,-39,-21,-55,-61,-95,-60,]),'ELSE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,20,23,28,40,41,42,44,55,68,72,103,111,113,115,120,121,122,123,150,153,154,170,172,173,174,175,177,185,186,187,188,193,194,195,196,197,199,200,],[-22,-22,-20,-7,45,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-43,-27,-58,-53,-54,-20,-41,-26,-57,-22,-79,-25,-107,-109,-22,-20,-28,-84,-119,-20,-41,-22,-22,-106,-108,-22,-41,-20,-20,-58,-20,-39,-21,-55,-22,-95,-20,-41,]),'VAR_EXPORT':([0,2,72,120,170,172,175,196,],[33,33,33,33,33,33,33,33,]),'PRINT':([0,2,72,120,170,172,175,196,],[34,34,34,34,34,34,34,34,]),'PRINT_R':([0,2,72,120,170,172,175,196,],[35,35,35,35,35,35,35,35,]),'VAR_DUMP':([0,2,72,120,170,172,175,196,],[36,36,36,36,36,36,36,36,]),'SUFFLE':([0,2,72,120,170,172,175,196,],[37,37,37,37,37,37,37,37,]),'ARRAY_UNIQUE':([0,2,72,120,170,172,175,196,],[38,38,38,38,38,38,38,38,]),'SIZEOF':([0,2,72,120,170,172,175,196,],[39,39,39,39,39,39,39,39,]),'BREAK':([0,2,72,120,170,172,175,196,],[40,40,40,40,40,40,40,40,]),'CONTINUE':([0,2,72,120,170,172,175,196,],[41,41,41,41,41,41,41,41,]),'EQUALS':([18,],[46,]),'AND':([18,73,109,165,],[48,48,48,48,]),'OR':([18,73,109,165,],[49,49,49,49,]),'XOR':([18,73,109,165,],[50,50,50,50,]),'NOT':([18,73,109,165,],[51,51,51,51,]),'LPAREN':([19,24,25,26,27,29,31,32,33,34,35,36,37,38,39,53,90,92,93,94,95,96,97,98,99,100,101,102,124,],[52,59,63,66,67,69,-50,-51,-114,-116,-117,-118,-135,-136,-137,110,131,133,134,-144,-145,-146,-147,-148,-149,-150,-151,-152,155,]),'FNOMBRE':([21,30,76,91,],[53,70,124,132,]),'NUMBER':([22,46,52,67,125,126,127,128,129,130,131,136,137,138,139,140,141,142,143,144,145,182,183,],[56,79,106,106,56,-31,-32,-33,-34,-35,161,106,-70,-71,-72,-73,-74,-75,-76,-77,-78,161,192,]),'DECIMAL':([22,46,52,67,125,126,127,128,129,130,136,137,138,139,140,141,142,143,144,145,],[58,58,58,58,58,-31,-32,-33,-34,-35,58,-70,-71,-72,-73,-74,-75,-76,-77,-78,]),'TEXT':([24,25,33,34,35,36,46,59,63,116,131,134,182,],[62,62,-114,-116,-117,-118,80,62,62,62,162,169,162,]),'LCORCHET':([45,70,135,146,151,189,],[72,120,170,172,175,196,]),'OBJECT_OPERATOR':([46,],[76,]),'NULL':([46,],[81,]),'TRUE':([46,52,67,131,136,137,138,139,140,141,142,143,144,145,182,],[85,85,85,85,85,-70,-71,-72,-73,-74,-75,-76,-77,-78,85,]),'FALSE':([46,52,67,131,136,137,138,139,140,141,142,143,144,145,182,],[86,86,86,86,86,-70,-71,-72,-73,-74,-75,-76,-77,-78,86,]),'ARRAY':([46,131,182,],[90,90,90,]),'NEW':([46,],[91,]),'FGETS':([46,],[92,]),'FREAD':([46,],[94,]),'FSCANF':([46,],[95,]),'FPASSTHRU':([46,],[96,]),'FGETCSV':([46,],[97,]),'FGETC':([46,],[98,]),'FILE_GET_CONTENTS':([46,],[99,]),'READFILE':([46,],[100,]),'FILE':([46,],[101,]),'PARSE_INI_FILE':([46,],[102,]),'END':([54,56,57,58,60,61,62,64,65,74,75,78,79,80,81,82,83,84,85,86,87,88,89,103,132,147,148,149,156,157,181,184,190,198,],[111,-36,-37,-38,113,-110,-111,115,-113,122,123,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-138,-139,-79,-105,173,174,-112,-30,-29,-96,-141,197,-140,]),'PLUS':([56,57,58,73,77,79,106,109,156,],[-36,-37,-38,-37,126,-36,-36,-37,126,]),'MINUS':([56,57,58,73,77,79,106,109,156,],[-36,-37,-38,-37,127,-36,-36,-37,127,]),'DIVIDE':([56,57,58,73,77,79,106,109,156,],[-36,-37,-38,-37,128,-36,-36,-37,128,]),'TIMES':([56,57,58,73,77,79,106,109,156,],[-36,-37,-38,-37,129,-36,-36,-37,129,]),'MODULO':([56,57,58,73,77,79,106,109,156,],[-36,-37,-38,-37,130,-36,-36,-37,130,]),'IS_EQUAL':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,137,-66,-67,-68,-69,-30,-29,]),'IS_IDENTICAL':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,138,-66,-67,-68,-69,-30,-29,]),'IS_NOT_EQUAL':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,139,-66,-67,-68,-69,-30,-29,]),'IS_NOT_IDENTICAL':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,140,-66,-67,-68,-69,-30,-29,]),'IS_GREATER_OR_EQUAL':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,141,-66,-67,-68,-69,-30,-29,]),'IS_SMALLER_OR_EQUAL':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,142,-66,-67,-68,-69,-30,-29,]),'SPACESHIP':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,143,-66,-67,-68,-69,-30,-29,]),'MAYORQUE':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,144,-66,-67,-68,-69,-30,-29,]),'MENORQUE':([56,57,58,85,86,87,103,105,106,107,108,109,156,157,],[-36,-37,-38,-92,-93,-94,-79,145,-66,-67,-68,-69,-30,-29,]),'RPAREN':([56,57,58,61,62,65,85,86,87,103,104,106,107,108,109,110,112,114,117,118,131,149,155,156,157,158,159,160,161,162,163,164,167,168,169,171,176,178,179,180,181,182,191,192,],[-36,-37,-38,-110,-111,-113,-92,-93,-94,-79,135,-66,-67,-68,-69,146,147,148,150,151,-22,-112,-22,-30,-29,181,-98,-99,-100,-101,-103,-104,184,-142,-143,-65,189,-23,190,-24,-96,-22,-97,198,]),'COMA':([61,62,65,85,86,87,103,131,159,160,161,162,163,164,166,181,182,],[-110,-111,116,-92,-93,-94,-79,-22,182,-102,-100,-101,-103,-104,183,-96,-22,]),'AS':([119,],[152,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracion':([0,2,72,120,170,172,175,196,],[3,42,121,153,185,186,188,199,]),'expression':([0,2,72,120,170,172,175,196,],[5,5,5,5,5,5,5,5,]),'expif':([0,2,72,120,170,172,175,196,],[6,6,6,6,6,6,6,6,]),'expelse':([0,2,72,120,170,172,175,196,],[7,7,7,7,7,7,7,7,]),'expresionlogica':([0,2,46,52,67,72,120,131,136,170,172,175,182,196,],[8,8,87,87,87,8,8,87,87,8,8,8,87,8,]),'declararvariable':([0,2,72,120,170,172,175,196,],[9,9,9,9,9,9,9,9,]),'creacionfunciones':([0,2,22,72,120,170,172,175,196,],[10,10,55,10,10,10,10,10,10,]),'returnvalores':([0,2,72,120,170,172,175,196,],[11,11,11,11,11,11,11,11,]),'operador_object':([0,2,72,120,170,172,175,196,],[12,12,12,12,12,12,12,12,]),'print':([0,2,72,120,170,172,175,196,],[13,13,13,13,13,13,13,13,]),'arreglos':([0,2,72,120,170,172,175,196,],[14,14,14,14,14,14,14,14,]),'while':([0,2,72,120,170,172,175,196,],[15,15,15,15,15,15,15,15,]),'foreach':([0,2,72,120,170,172,175,196,],[16,16,16,16,16,16,16,16,]),'clase':([0,2,72,120,170,172,175,196,],[17,17,17,17,17,17,17,17,]),'funcion_condicion':([0,2,72,120,170,172,175,196,],[19,19,19,19,19,19,19,19,]),'empty':([0,2,72,120,131,155,170,172,175,182,196,],[23,23,23,23,160,180,23,23,23,160,23,]),'funcion_print':([0,2,72,120,170,172,175,196,],[24,24,24,24,24,24,24,24,]),'funcion_arreglo':([0,2,72,120,170,172,175,196,],[26,26,26,26,26,26,26,26,]),'control_bucle':([0,2,72,120,170,172,175,196,],[28,28,28,28,28,28,187,28,]),'operadorlogico':([18,73,109,165,],[47,47,47,47,]),'termino':([22,46,52,67,125,136,],[54,77,77,77,156,77,]),'argument':([24,25,59,63,116,],[60,65,112,65,65,]),'valores_echo':([25,63,116,],[64,114,149,]),'operacion_matematica':([46,52,67,125,136,],[74,108,108,157,108,]),'tipo':([46,],[75,]),'boolean':([46,52,67,131,136,182,],[78,107,107,163,107,163,]),'archivos':([46,],[82,]),'array':([46,131,182,],[83,164,164,]),'new':([46,],[84,]),'funcion_corta':([46,],[88,]),'estructura_funcion':([46,],[89,]),'funcion_archivo':([46,],[93,]),'comparacion':([52,67,],[104,118,]),'valor_comparado':([52,67,136,],[105,105,171,]),'operadores':([77,156,],[125,125,]),'operadorcomparacion':([105,],[136,]),'valores_array':([131,182,],[158,191,]),'elementos_array':([131,182,],[159,159,]),'opcion':([134,],[167,]),'argumentos':([155,],[179,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> OPEN declaracion CLOSE','programa',3,'p_programa','sintactico.py',11),
  ('programa -> OPEN declaracion','programa',2,'p_programa','sintactico.py',12),
  ('programa -> declaracion CLOSE','programa',2,'p_programa','sintactico.py',13),
  ('programa -> declaracion','programa',1,'p_programa','sintactico.py',14),
  ('programa -> CLOSE','programa',1,'p_programa','sintactico.py',15),
  ('programa -> OPEN','programa',1,'p_programa','sintactico.py',16),
  ('declaracion -> expression','declaracion',1,'p_declaracion','sintactico.py',20),
  ('declaracion -> expif','declaracion',1,'p_declaracion','sintactico.py',21),
  ('declaracion -> expelse','declaracion',1,'p_declaracion','sintactico.py',22),
  ('declaracion -> expresionlogica','declaracion',1,'p_declaracion','sintactico.py',23),
  ('declaracion -> declararvariable','declaracion',1,'p_declaracion','sintactico.py',24),
  ('declaracion -> creacionfunciones','declaracion',1,'p_declaracion','sintactico.py',25),
  ('declaracion -> returnvalores','declaracion',1,'p_declaracion','sintactico.py',26),
  ('declaracion -> operador_object','declaracion',1,'p_declaracion','sintactico.py',27),
  ('declaracion -> print','declaracion',1,'p_declaracion','sintactico.py',28),
  ('declaracion -> arreglos','declaracion',1,'p_declaracion','sintactico.py',29),
  ('declaracion -> while','declaracion',1,'p_declaracion','sintactico.py',30),
  ('declaracion -> foreach','declaracion',1,'p_declaracion','sintactico.py',31),
  ('declaracion -> clase','declaracion',1,'p_declaracion','sintactico.py',32),
  ('declaracion -> declaracion','declaracion',1,'p_declaracion','sintactico.py',33),
  ('creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET','creacionfunciones',7,'p_creacionfunciones','sintactico.py',38),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',41),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintactico.py',44),
  ('argumentos -> empty','argumentos',1,'p_argumentos','sintactico.py',45),
  ('returnvalores -> RETURN termino END','returnvalores',3,'p_returnvalores','sintactico.py',49),
  ('returnvalores -> RETURN creacionfunciones','returnvalores',2,'p_returnvalores','sintactico.py',50),
  ('returnvalores -> empty','returnvalores',1,'p_returnvalores','sintactico.py',51),
  ('expression -> ID EQUALS operacion_matematica END','expression',4,'p_expression_math','sintactico.py',55),
  ('operacion_matematica -> termino operadores operacion_matematica','operacion_matematica',3,'p_operacion_matematica','sintactico.py',58),
  ('operacion_matematica -> termino operadores termino','operacion_matematica',3,'p_operacion_matematica','sintactico.py',59),
  ('operadores -> PLUS','operadores',1,'p_operadores','sintactico.py',63),
  ('operadores -> MINUS','operadores',1,'p_operadores','sintactico.py',64),
  ('operadores -> DIVIDE','operadores',1,'p_operadores','sintactico.py',65),
  ('operadores -> TIMES','operadores',1,'p_operadores','sintactico.py',66),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',67),
  ('termino -> NUMBER','termino',1,'p_termino','sintactico.py',71),
  ('termino -> ID','termino',1,'p_termino','sintactico.py',72),
  ('termino -> DECIMAL','termino',1,'p_termino','sintactico.py',73),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET','expif',7,'p_expif','sintactico.py',77),
  ('expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET','expif',5,'p_expif','sintactico.py',78),
  ('expif -> declaracion RCORCHET','expif',2,'p_expif','sintactico.py',79),
  ('expif -> declaracion','expif',1,'p_expif','sintactico.py',80),
  ('expif -> RCORCHET','expif',1,'p_expif','sintactico.py',81),
  ('expelse -> expif ELSE LCORCHET declaracion RCORCHET','expelse',5,'p_expelse','sintactico.py',84),
  ('expelse -> expif ELSE LCORCHET declaracion','expelse',4,'p_expelse','sintactico.py',85),
  ('expelse -> expif ELSE LCORCHET','expelse',3,'p_expelse','sintactico.py',86),
  ('expelse -> declaracion','expelse',1,'p_expelse','sintactico.py',87),
  ('expelse -> declaracion RCORCHET','expelse',2,'p_expelse','sintactico.py',88),
  ('expelse -> RCORCHET','expelse',1,'p_expelse','sintactico.py',89),
  ('funcion_condicion -> IF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',92),
  ('funcion_condicion -> ELSEIF','funcion_condicion',1,'p_funcion_condicion','sintactico.py',93),
  ('control_bucle -> declaracion','control_bucle',1,'p_control_bucle','sintactico.py',96),
  ('control_bucle -> BREAK','control_bucle',1,'p_control_bucle','sintactico.py',97),
  ('control_bucle -> CONTINUE','control_bucle',1,'p_control_bucle','sintactico.py',98),
  ('while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET','while',7,'p_while','sintactico.py',102),
  ('while -> WHILE LPAREN comparacion RPAREN LCORCHET','while',5,'p_while','sintactico.py',103),
  ('while -> control_bucle RCORCHET','while',2,'p_while','sintactico.py',104),
  ('while -> control_bucle','while',1,'p_while','sintactico.py',105),
  ('while -> RCORCHET','while',1,'p_while','sintactico.py',106),
  ('foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET','foreach',9,'p_foreach','sintactico.py',109),
  ('foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET','foreach',7,'p_foreach','sintactico.py',110),
  ('foreach -> control_bucle RCORCHET','foreach',2,'p_foreach','sintactico.py',111),
  ('foreach -> control_bucle','foreach',1,'p_foreach','sintactico.py',112),
  ('foreach -> RCORCHET','foreach',1,'p_foreach','sintactico.py',113),
  ('comparacion -> valor_comparado operadorcomparacion valor_comparado','comparacion',3,'p_comparacion','sintactico.py',117),
  ('valor_comparado -> NUMBER','valor_comparado',1,'p_valor_comparado','sintactico.py',120),
  ('valor_comparado -> boolean','valor_comparado',1,'p_valor_comparado','sintactico.py',121),
  ('valor_comparado -> operacion_matematica','valor_comparado',1,'p_valor_comparado','sintactico.py',122),
  ('valor_comparado -> ID','valor_comparado',1,'p_valor_comparado','sintactico.py',123),
  ('operadorcomparacion -> IS_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',127),
  ('operadorcomparacion -> IS_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',128),
  ('operadorcomparacion -> IS_NOT_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',129),
  ('operadorcomparacion -> IS_NOT_IDENTICAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',130),
  ('operadorcomparacion -> IS_GREATER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',131),
  ('operadorcomparacion -> IS_SMALLER_OR_EQUAL','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',132),
  ('operadorcomparacion -> SPACESHIP','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',133),
  ('operadorcomparacion -> MAYORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',134),
  ('operadorcomparacion -> MENORQUE','operadorcomparacion',1,'p_operadorcomparacion','sintactico.py',135),
  ('expresionlogica -> ID operadorlogico ID','expresionlogica',3,'p_expresionlogica','sintactico.py',144),
  ('operadorlogico -> AND','operadorlogico',1,'p_operadorlogico','sintactico.py',147),
  ('operadorlogico -> OR','operadorlogico',1,'p_operadorlogico','sintactico.py',148),
  ('operadorlogico -> XOR','operadorlogico',1,'p_operadorlogico','sintactico.py',149),
  ('operadorlogico -> NOT','operadorlogico',1,'p_operadorlogico','sintactico.py',150),
  ('declararvariable -> ID EQUALS tipo END','declararvariable',4,'p_declararvariable','sintactico.py',154),
  ('tipo -> boolean','tipo',1,'p_tipo','sintactico.py',158),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',159),
  ('tipo -> TEXT','tipo',1,'p_tipo','sintactico.py',160),
  ('tipo -> NULL','tipo',1,'p_tipo','sintactico.py',161),
  ('tipo -> archivos','tipo',1,'p_tipo','sintactico.py',162),
  ('tipo -> array','tipo',1,'p_tipo','sintactico.py',163),
  ('tipo -> new','tipo',1,'p_tipo','sintactico.py',164),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',167),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',168),
  ('boolean -> expresionlogica','boolean',1,'p_boolean','sintactico.py',169),
  ('operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END','operador_object',8,'p_operador_object','sintactico.py',172),
  ('array -> ARRAY LPAREN valores_array RPAREN','array',4,'p_array','sintactico.py',175),
  ('valores_array -> elementos_array COMA valores_array','valores_array',3,'p_valores_array','sintactico.py',178),
  ('valores_array -> elementos_array','valores_array',1,'p_valores_array','sintactico.py',179),
  ('valores_array -> empty','valores_array',1,'p_valores_array','sintactico.py',180),
  ('elementos_array -> NUMBER','elementos_array',1,'p_elementos_array','sintactico.py',183),
  ('elementos_array -> TEXT','elementos_array',1,'p_elementos_array','sintactico.py',184),
  ('elementos_array -> empty','elementos_array',1,'p_elementos_array','sintactico.py',185),
  ('elementos_array -> boolean','elementos_array',1,'p_elementos_array','sintactico.py',186),
  ('elementos_array -> array','elementos_array',1,'p_elementos_array','sintactico.py',187),
  ('new -> NEW FNOMBRE','new',2,'p_new','sintactico.py',191),
  ('print -> funcion_print LPAREN argument RPAREN END','print',5,'p_print','sintactico.py',206),
  ('print -> funcion_print argument END','print',3,'p_print','sintactico.py',207),
  ('print -> ECHO LPAREN valores_echo RPAREN END','print',5,'p_print','sintactico.py',208),
  ('print -> ECHO valores_echo END','print',3,'p_print','sintactico.py',209),
  ('argument -> ID','argument',1,'p_argument','sintactico.py',212),
  ('argument -> TEXT','argument',1,'p_argument','sintactico.py',213),
  ('valores_echo -> argument COMA valores_echo','valores_echo',3,'p_valores_echo','sintactico.py',216),
  ('valores_echo -> argument','valores_echo',1,'p_valores_echo','sintactico.py',217),
  ('funcion_print -> VAR_EXPORT','funcion_print',1,'p_funcion_print','sintactico.py',221),
  ('funcion_print -> ECHO','funcion_print',1,'p_funcion_print','sintactico.py',222),
  ('funcion_print -> PRINT','funcion_print',1,'p_funcion_print','sintactico.py',223),
  ('funcion_print -> PRINT_R','funcion_print',1,'p_funcion_print','sintactico.py',224),
  ('funcion_print -> VAR_DUMP','funcion_print',1,'p_funcion_print','sintactico.py',225),
  ('arreglos -> funcion_arreglo LPAREN ID RPAREN','arreglos',4,'p_arreglos','sintactico.py',228),
  ('argumento_doble -> LPAREN ID COMA ID RPAREN','argumento_doble',5,'p_argumento_doble','sintactico.py',231),
  ('funcion_argumento_doble -> ARRAY_MERGE','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',234),
  ('funcion_argumento_doble -> ARRAY_SEARCH','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',235),
  ('funcion_argumento_doble -> ARRAY_RAND','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',236),
  ('funcion_argumento_doble -> ARRAY_CHUNK','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',237),
  ('funcion_argumento_doble -> STR_SPLIT','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',238),
  ('funcion_argumento_doble -> PREG_SPLIT','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',239),
  ('funcion_argumento_doble -> COUNT','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',240),
  ('funcion_argumento_doble -> ARRAY_PUSH','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',241),
  ('funcion_argumento_doble -> SORT','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',242),
  ('funcion_argumento_doble -> ASORT','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',243),
  ('funcion_argumento_doble -> KSORT','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',244),
  ('funcion_argumento_doble -> UNSET','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',245),
  ('funcion_argumento_doble -> IMPLODE','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',246),
  ('funcion_argumento_doble -> EXPLODE','funcion_argumento_doble',1,'p_funcion_argumento_doble','sintactico.py',247),
  ('funcion_arreglo -> SUFFLE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',250),
  ('funcion_arreglo -> ARRAY_UNIQUE','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',251),
  ('funcion_arreglo -> SIZEOF','funcion_arreglo',1,'p_funcion_arreglo','sintactico.py',252),
  ('archivos -> funcion_corta','archivos',1,'p_archivos','sintactico.py',255),
  ('archivos -> estructura_funcion','archivos',1,'p_archivos','sintactico.py',256),
  ('funcion_corta -> FGETS LPAREN ID COMA NUMBER RPAREN','funcion_corta',6,'p_funcion_corta','sintactico.py',259),
  ('estructura_funcion -> funcion_archivo LPAREN opcion RPAREN','estructura_funcion',4,'p_estructura_funcion','sintactico.py',262),
  ('opcion -> ID','opcion',1,'p_opcion','sintactico.py',265),
  ('opcion -> TEXT','opcion',1,'p_opcion','sintactico.py',266),
  ('funcion_archivo -> FREAD','funcion_archivo',1,'p_funcion_archivo','sintactico.py',269),
  ('funcion_archivo -> FSCANF','funcion_archivo',1,'p_funcion_archivo','sintactico.py',270),
  ('funcion_archivo -> FPASSTHRU','funcion_archivo',1,'p_funcion_archivo','sintactico.py',271),
  ('funcion_archivo -> FGETCSV','funcion_archivo',1,'p_funcion_archivo','sintactico.py',272),
  ('funcion_archivo -> FGETC','funcion_archivo',1,'p_funcion_archivo','sintactico.py',273),
  ('funcion_archivo -> FILE_GET_CONTENTS','funcion_archivo',1,'p_funcion_archivo','sintactico.py',274),
  ('funcion_archivo -> READFILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',275),
  ('funcion_archivo -> FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',276),
  ('funcion_archivo -> PARSE_INI_FILE','funcion_archivo',1,'p_funcion_archivo','sintactico.py',277),
  ('clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET','clase',5,'p_clase','sintactico.py',281),
  ('clase -> CLASS FNOMBRE LCORCHET','clase',3,'p_clase','sintactico.py',282),
  ('clase -> declaracion RCORCHET','clase',2,'p_clase','sintactico.py',283),
  ('clase -> declaracion','clase',1,'p_clase','sintactico.py',284),
  ('clase -> RCORCHET','clase',1,'p_clase','sintactico.py',285),
]

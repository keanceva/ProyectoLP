Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> OPEN declaracion CLOSE
Rule 2     programa -> OPEN declaracion
Rule 3     programa -> declaracion CLOSE
Rule 4     programa -> declaracion
Rule 5     programa -> CLOSE
Rule 6     programa -> OPEN
Rule 7     declaracion -> expression
Rule 8     declaracion -> expif
Rule 9     declaracion -> expelse
Rule 10    declaracion -> expresionlogica
Rule 11    declaracion -> declararvariable
Rule 12    declaracion -> creacionfunciones
Rule 13    declaracion -> returnvalores
Rule 14    declaracion -> operador_object
Rule 15    declaracion -> print
Rule 16    declaracion -> arreglos
Rule 17    declaracion -> while
Rule 18    declaracion -> foreach
Rule 19    declaracion -> clase
Rule 20    declaracion -> declaracion
Rule 21    creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
Rule 22    creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
Rule 23    creacionfunciones -> declaracion RCORCHET
Rule 24    creacionfunciones -> declaracion
Rule 25    creacionfunciones -> RCORCHET
Rule 26    empty -> <empty>
Rule 27    argumentos -> ID
Rule 28    argumentos -> empty
Rule 29    returnvalores -> RETURN termino END
Rule 30    returnvalores -> RETURN creacionfunciones
Rule 31    returnvalores -> empty
Rule 32    expression -> ID EQUALS operacion_matematica END
Rule 33    operacion_matematica -> termino operadores operacion_matematica
Rule 34    operacion_matematica -> termino operadores termino
Rule 35    operadores -> PLUS
Rule 36    operadores -> MINUS
Rule 37    operadores -> DIVIDE
Rule 38    operadores -> TIMES
Rule 39    operadores -> MODULO
Rule 40    termino -> NUMBER
Rule 41    termino -> ID
Rule 42    termino -> DECIMAL
Rule 43    expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
Rule 44    expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET
Rule 45    expif -> declaracion RCORCHET
Rule 46    expif -> declaracion
Rule 47    expif -> RCORCHET
Rule 48    expelse -> expif ELSE LCORCHET declaracion RCORCHET
Rule 49    expelse -> expif ELSE LCORCHET declaracion
Rule 50    expelse -> expif ELSE LCORCHET
Rule 51    expelse -> declaracion
Rule 52    expelse -> declaracion RCORCHET
Rule 53    expelse -> RCORCHET
Rule 54    funcion_condicion -> IF
Rule 55    funcion_condicion -> ELSEIF
Rule 56    control_bucle -> declaracion
Rule 57    control_bucle -> BREAK
Rule 58    control_bucle -> CONTINUE
Rule 59    while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
Rule 60    while -> WHILE LPAREN comparacion RPAREN LCORCHET
Rule 61    while -> control_bucle RCORCHET
Rule 62    while -> control_bucle
Rule 63    while -> RCORCHET
Rule 64    foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
Rule 65    foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET
Rule 66    foreach -> control_bucle RCORCHET
Rule 67    foreach -> control_bucle
Rule 68    foreach -> RCORCHET
Rule 69    comparacion -> valor_comparado operadorcomparacion valor_comparado
Rule 70    comparacion -> boolean
Rule 71    valor_comparado -> NUMBER
Rule 72    valor_comparado -> boolean
Rule 73    valor_comparado -> operacion_matematica
Rule 74    valor_comparado -> ID
Rule 75    operadorcomparacion -> IS_EQUAL
Rule 76    operadorcomparacion -> IS_IDENTICAL
Rule 77    operadorcomparacion -> IS_NOT_EQUAL
Rule 78    operadorcomparacion -> IS_NOT_IDENTICAL
Rule 79    operadorcomparacion -> IS_GREATER_OR_EQUAL
Rule 80    operadorcomparacion -> IS_SMALLER_OR_EQUAL
Rule 81    operadorcomparacion -> SPACESHIP
Rule 82    operadorcomparacion -> MAYORQUE
Rule 83    operadorcomparacion -> MENORQUE
Rule 84    expresionlogica -> ID operadorlogico ID
Rule 85    operadorlogico -> AND
Rule 86    operadorlogico -> OR
Rule 87    operadorlogico -> XOR
Rule 88    operadorlogico -> NOT
Rule 89    declararvariable -> ID EQUALS tipo END
Rule 90    tipo -> boolean
Rule 91    tipo -> NUMBER
Rule 92    tipo -> TEXT
Rule 93    tipo -> NULL
Rule 94    tipo -> archivos
Rule 95    tipo -> array
Rule 96    tipo -> new
Rule 97    boolean -> TRUE
Rule 98    boolean -> FALSE
Rule 99    boolean -> expresionlogica
Rule 100   operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
Rule 101   array -> ARRAY LPAREN valores_array RPAREN
Rule 102   valores_array -> elementos_array COMA valores_array
Rule 103   valores_array -> elementos_array
Rule 104   valores_array -> empty
Rule 105   flecha_array -> elementos_array FLECHA elementos_array
Rule 106   elementos_array -> NUMBER
Rule 107   elementos_array -> TEXT
Rule 108   elementos_array -> empty
Rule 109   elementos_array -> boolean
Rule 110   elementos_array -> array
Rule 111   elementos_array -> flecha_array
Rule 112   new -> NEW FNOMBRE
Rule 113   print -> funcion_print LPAREN argument RPAREN END
Rule 114   print -> funcion_print argument END
Rule 115   print -> ECHO LPAREN valores_echo RPAREN END
Rule 116   print -> ECHO valores_echo END
Rule 117   argument -> ID
Rule 118   argument -> TEXT
Rule 119   argument -> operacion_matematica
Rule 120   argument -> comparacion
Rule 121   valores_echo -> argument COMA valores_echo
Rule 122   valores_echo -> argument
Rule 123   funcion_print -> VAR_EXPORT
Rule 124   funcion_print -> ECHO
Rule 125   funcion_print -> PRINT
Rule 126   funcion_print -> PRINT_R
Rule 127   funcion_print -> VAR_DUMP
Rule 128   arreglos -> funcion_arreglo LPAREN ID RPAREN
Rule 129   argumento_doble -> LPAREN ID COMA ID RPAREN
Rule 130   funcion_argumento_doble -> ARRAY_MERGE
Rule 131   funcion_argumento_doble -> ARRAY_SEARCH
Rule 132   funcion_argumento_doble -> ARRAY_RAND
Rule 133   funcion_argumento_doble -> ARRAY_CHUNK
Rule 134   funcion_argumento_doble -> STR_SPLIT
Rule 135   funcion_argumento_doble -> PREG_SPLIT
Rule 136   funcion_argumento_doble -> COUNT
Rule 137   funcion_argumento_doble -> ARRAY_PUSH
Rule 138   funcion_argumento_doble -> SORT
Rule 139   funcion_argumento_doble -> ASORT
Rule 140   funcion_argumento_doble -> KSORT
Rule 141   funcion_argumento_doble -> UNSET
Rule 142   funcion_argumento_doble -> IMPLODE
Rule 143   funcion_argumento_doble -> EXPLODE
Rule 144   funcion_arreglo -> SUFFLE
Rule 145   funcion_arreglo -> ARRAY_UNIQUE
Rule 146   funcion_arreglo -> SIZEOF
Rule 147   archivos -> funcion_corta
Rule 148   archivos -> estructura_funcion
Rule 149   funcion_corta -> FGETS LPAREN ID COMA NUMBER RPAREN
Rule 150   estructura_funcion -> funcion_archivo LPAREN opcion RPAREN
Rule 151   opcion -> ID
Rule 152   opcion -> TEXT
Rule 153   funcion_archivo -> FREAD
Rule 154   funcion_archivo -> FSCANF
Rule 155   funcion_archivo -> FPASSTHRU
Rule 156   funcion_archivo -> FGETCSV
Rule 157   funcion_archivo -> FGETC
Rule 158   funcion_archivo -> FILE_GET_CONTENTS
Rule 159   funcion_archivo -> READFILE
Rule 160   funcion_archivo -> FILE
Rule 161   funcion_archivo -> PARSE_INI_FILE
Rule 162   clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET
Rule 163   clase -> CLASS FNOMBRE LCORCHET
Rule 164   clase -> declaracion RCORCHET
Rule 165   clase -> declaracion
Rule 166   clase -> RCORCHET

Terminals, with rules where they appear

AND                  : 85
ARRAY                : 101
ARRAY_CHUNK          : 133
ARRAY_MERGE          : 130
ARRAY_PUSH           : 137
ARRAY_RAND           : 132
ARRAY_SEARCH         : 131
ARRAY_UNIQUE         : 145
AS                   : 64 65
ASORT                : 139
BREAK                : 57
CLASS                : 162 163
CLOSE                : 1 3 5
COMA                 : 102 121 129 149
CONTINUE             : 58
COUNT                : 136
DECIMAL              : 42
DIVIDE               : 37
ECHO                 : 115 116 124
ELSE                 : 48 49 50
ELSEIF               : 55
END                  : 29 32 89 100 113 114 115 116
EQUALS               : 32 89 100
EXPLODE              : 143
FALSE                : 98
FGETC                : 157
FGETCSV              : 156
FGETS                : 149
FILE                 : 160
FILE_GET_CONTENTS    : 158
FLECHA               : 105
FNOMBRE              : 21 22 100 112 162 163
FOREACH              : 64 65
FPASSTHRU            : 155
FREAD                : 153
FSCANF               : 154
FUNCTION             : 21 22
ID                   : 27 32 41 64 64 65 65 74 84 84 89 100 117 128 129 129 149 151
IF                   : 54
IMPLODE              : 142
IS_EQUAL             : 75
IS_GREATER_OR_EQUAL  : 79
IS_IDENTICAL         : 76
IS_NOT_EQUAL         : 77
IS_NOT_IDENTICAL     : 78
IS_SMALLER_OR_EQUAL  : 80
KSORT                : 140
LCORCHET             : 21 22 43 44 48 49 50 59 60 64 65 162 163
LPAREN               : 21 22 43 44 59 60 64 65 100 101 113 115 128 129 149 150
MAYORQUE             : 82
MENORQUE             : 83
MINUS                : 36
MODULO               : 39
NEW                  : 112
NOT                  : 88
NULL                 : 93
NUMBER               : 40 71 91 106 149
OBJECT_OPERATOR      : 100
OPEN                 : 1 2 6
OR                   : 86
PARSE_INI_FILE       : 161
PLUS                 : 35
PREG_SPLIT           : 135
PRINT                : 125
PRINT_R              : 126
RCORCHET             : 21 23 25 43 45 47 48 52 53 59 61 63 64 66 68 162 164 166
READFILE             : 159
RETURN               : 29 30
RPAREN               : 21 22 43 44 59 60 64 65 100 101 113 115 128 129 149 150
SIZEOF               : 146
SORT                 : 138
SPACESHIP            : 81
STR_SPLIT            : 134
SUFFLE               : 144
TEXT                 : 92 107 118 152
TIMES                : 38
TRUE                 : 97
UNSET                : 141
VAR_DUMP             : 127
VAR_EXPORT           : 123
WHILE                : 59 60
XOR                  : 87
error                : 

Nonterminals, with rules where they appear

archivos             : 94
argument             : 113 114 121 122
argumento_doble      : 
argumentos           : 100
array                : 95 110
arreglos             : 16
boolean              : 70 72 90 109
clase                : 19
comparacion          : 43 44 59 60 120
control_bucle        : 59 61 62 66 67
creacionfunciones    : 12 30
declaracion          : 1 2 3 4 20 21 23 24 43 45 46 48 49 51 52 56 64 162 164 165
declararvariable     : 11
elementos_array      : 102 103 105 105
empty                : 28 31 104 108
estructura_funcion   : 148
expelse              : 9
expif                : 8 48 49 50
expresionlogica      : 10 99
expression           : 7
flecha_array         : 111
foreach              : 18
funcion_archivo      : 150
funcion_argumento_doble : 
funcion_arreglo      : 128
funcion_condicion    : 43 44
funcion_corta        : 147
funcion_print        : 113 114
new                  : 96
opcion               : 150
operacion_matematica : 32 33 73 119
operador_object      : 14
operadorcomparacion  : 69
operadores           : 33 34
operadorlogico       : 84
print                : 15
programa             : 0
returnvalores        : 13
termino              : 29 33 34 34
tipo                 : 89
valor_comparado      : 69 69
valores_array        : 101 102
valores_echo         : 115 116 121
while                : 17

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . OPEN declaracion CLOSE
    (2) programa -> . OPEN declaracion
    (3) programa -> . declaracion CLOSE
    (4) programa -> . declaracion
    (5) programa -> . CLOSE
    (6) programa -> . OPEN
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
    OPEN            shift and go to state 2
    CLOSE           shift and go to state 4
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    $end            reduce using rule 26 (empty -> .)
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! CLOSE           [ reduce using rule 26 (empty -> .) ]
  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]

    programa                       shift and go to state 1
    declaracion                    shift and go to state 3
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 1

    (0) S' -> programa .



state 2

    (1) programa -> OPEN . declaracion CLOSE
    (2) programa -> OPEN . declaracion
    (6) programa -> OPEN .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 6 (programa -> OPEN .)
    $end            reduce using rule 6 (programa -> OPEN .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    CLOSE           reduce using rule 26 (empty -> .)
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]
  ! $end            [ reduce using rule 26 (empty -> .) ]

    declaracion                    shift and go to state 42
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 3

    (3) programa -> declaracion . CLOSE
    (4) programa -> declaracion .
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for CLOSE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    CLOSE           shift and go to state 43
    $end            reduce using rule 4 (programa -> declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 44

  ! CLOSE           [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! $end            [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! CLOSE           [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! $end            [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! CLOSE           [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! $end            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! CLOSE           [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! $end            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! CLOSE           [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! $end            [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! CLOSE           [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! $end            [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 4

    (5) programa -> CLOSE .

    $end            reduce using rule 5 (programa -> CLOSE .)


state 5

    (7) declaracion -> expression .

    CLOSE           reduce using rule 7 (declaracion -> expression .)
    RCORCHET        reduce using rule 7 (declaracion -> expression .)
    $end            reduce using rule 7 (declaracion -> expression .)
    ELSE            reduce using rule 7 (declaracion -> expression .)


state 6

    (8) declaracion -> expif .
    (48) expelse -> expif . ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> expif . ELSE LCORCHET declaracion
    (50) expelse -> expif . ELSE LCORCHET

  ! shift/reduce conflict for ELSE resolved as shift
    CLOSE           reduce using rule 8 (declaracion -> expif .)
    RCORCHET        reduce using rule 8 (declaracion -> expif .)
    $end            reduce using rule 8 (declaracion -> expif .)
    ELSE            shift and go to state 45

  ! ELSE            [ reduce using rule 8 (declaracion -> expif .) ]


state 7

    (9) declaracion -> expelse .

    CLOSE           reduce using rule 9 (declaracion -> expelse .)
    RCORCHET        reduce using rule 9 (declaracion -> expelse .)
    $end            reduce using rule 9 (declaracion -> expelse .)
    ELSE            reduce using rule 9 (declaracion -> expelse .)


state 8

    (10) declaracion -> expresionlogica .

    CLOSE           reduce using rule 10 (declaracion -> expresionlogica .)
    RCORCHET        reduce using rule 10 (declaracion -> expresionlogica .)
    $end            reduce using rule 10 (declaracion -> expresionlogica .)
    ELSE            reduce using rule 10 (declaracion -> expresionlogica .)


state 9

    (11) declaracion -> declararvariable .

    CLOSE           reduce using rule 11 (declaracion -> declararvariable .)
    RCORCHET        reduce using rule 11 (declaracion -> declararvariable .)
    $end            reduce using rule 11 (declaracion -> declararvariable .)
    ELSE            reduce using rule 11 (declaracion -> declararvariable .)


state 10

    (12) declaracion -> creacionfunciones .

    CLOSE           reduce using rule 12 (declaracion -> creacionfunciones .)
    RCORCHET        reduce using rule 12 (declaracion -> creacionfunciones .)
    $end            reduce using rule 12 (declaracion -> creacionfunciones .)
    ELSE            reduce using rule 12 (declaracion -> creacionfunciones .)


state 11

    (13) declaracion -> returnvalores .

    CLOSE           reduce using rule 13 (declaracion -> returnvalores .)
    RCORCHET        reduce using rule 13 (declaracion -> returnvalores .)
    $end            reduce using rule 13 (declaracion -> returnvalores .)
    ELSE            reduce using rule 13 (declaracion -> returnvalores .)


state 12

    (14) declaracion -> operador_object .

    CLOSE           reduce using rule 14 (declaracion -> operador_object .)
    RCORCHET        reduce using rule 14 (declaracion -> operador_object .)
    $end            reduce using rule 14 (declaracion -> operador_object .)
    ELSE            reduce using rule 14 (declaracion -> operador_object .)


state 13

    (15) declaracion -> print .

    CLOSE           reduce using rule 15 (declaracion -> print .)
    RCORCHET        reduce using rule 15 (declaracion -> print .)
    $end            reduce using rule 15 (declaracion -> print .)
    ELSE            reduce using rule 15 (declaracion -> print .)


state 14

    (16) declaracion -> arreglos .

    CLOSE           reduce using rule 16 (declaracion -> arreglos .)
    RCORCHET        reduce using rule 16 (declaracion -> arreglos .)
    $end            reduce using rule 16 (declaracion -> arreglos .)
    ELSE            reduce using rule 16 (declaracion -> arreglos .)


state 15

    (17) declaracion -> while .

    CLOSE           reduce using rule 17 (declaracion -> while .)
    RCORCHET        reduce using rule 17 (declaracion -> while .)
    $end            reduce using rule 17 (declaracion -> while .)
    ELSE            reduce using rule 17 (declaracion -> while .)


state 16

    (18) declaracion -> foreach .

    CLOSE           reduce using rule 18 (declaracion -> foreach .)
    RCORCHET        reduce using rule 18 (declaracion -> foreach .)
    $end            reduce using rule 18 (declaracion -> foreach .)
    ELSE            reduce using rule 18 (declaracion -> foreach .)


state 17

    (19) declaracion -> clase .

    CLOSE           reduce using rule 19 (declaracion -> clase .)
    RCORCHET        reduce using rule 19 (declaracion -> clase .)
    $end            reduce using rule 19 (declaracion -> clase .)
    ELSE            reduce using rule 19 (declaracion -> clase .)


state 18

    (32) expression -> ID . EQUALS operacion_matematica END
    (84) expresionlogica -> ID . operadorlogico ID
    (89) declararvariable -> ID . EQUALS tipo END
    (100) operador_object -> ID . EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (85) operadorlogico -> . AND
    (86) operadorlogico -> . OR
    (87) operadorlogico -> . XOR
    (88) operadorlogico -> . NOT

    EQUALS          shift and go to state 46
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 19

    (43) expif -> funcion_condicion . LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> funcion_condicion . LPAREN comparacion RPAREN LCORCHET

    LPAREN          shift and go to state 52


state 20

    (47) expif -> RCORCHET .
    (53) expelse -> RCORCHET .
    (25) creacionfunciones -> RCORCHET .
    (63) while -> RCORCHET .
    (68) foreach -> RCORCHET .
    (166) clase -> RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 47 (expif -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 47 (expif -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 47 (expif -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 47 (expif -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
    CLOSE           reduce using rule 25 (creacionfunciones -> RCORCHET .)
    RCORCHET        reduce using rule 25 (creacionfunciones -> RCORCHET .)
    $end            reduce using rule 25 (creacionfunciones -> RCORCHET .)
    ELSE            reduce using rule 25 (creacionfunciones -> RCORCHET .)

  ! CLOSE           [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! $end            [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! $end            [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 63 (while -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 63 (while -> RCORCHET .) ]
  ! $end            [ reduce using rule 63 (while -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 63 (while -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! $end            [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 166 (clase -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 166 (clase -> RCORCHET .) ]
  ! $end            [ reduce using rule 166 (clase -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 166 (clase -> RCORCHET .) ]


state 21

    (21) creacionfunciones -> FUNCTION . FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> FUNCTION . FNOMBRE LPAREN RPAREN LCORCHET

    FNOMBRE         shift and go to state 53


state 22

    (29) returnvalores -> RETURN . termino END
    (30) returnvalores -> RETURN . creacionfunciones
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
    NUMBER          shift and go to state 56
    ID              shift and go to state 57
    DECIMAL         shift and go to state 58
    FUNCTION        shift and go to state 21
    RCORCHET        shift and go to state 60
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    CLOSE           reduce using rule 26 (empty -> .)
    $end            reduce using rule 26 (empty -> .)
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]

    termino                        shift and go to state 54
    creacionfunciones              shift and go to state 55
    declaracion                    shift and go to state 59
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 23

    (31) returnvalores -> empty .

    CLOSE           reduce using rule 31 (returnvalores -> empty .)
    RCORCHET        reduce using rule 31 (returnvalores -> empty .)
    $end            reduce using rule 31 (returnvalores -> empty .)
    ELSE            reduce using rule 31 (returnvalores -> empty .)


state 24

    (113) print -> funcion_print . LPAREN argument RPAREN END
    (114) print -> funcion_print . argument END
    (117) argument -> . ID
    (118) argument -> . TEXT
    (119) argument -> . operacion_matematica
    (120) argument -> . comparacion
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (69) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (70) comparacion -> . boolean
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (84) expresionlogica -> . ID operadorlogico ID

    LPAREN          shift and go to state 61
    ID              shift and go to state 63
    TEXT            shift and go to state 64
    NUMBER          shift and go to state 70
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    argument                       shift and go to state 62
    operacion_matematica           shift and go to state 65
    comparacion                    shift and go to state 66
    termino                        shift and go to state 67
    valor_comparado                shift and go to state 68
    boolean                        shift and go to state 69
    expresionlogica                shift and go to state 73

state 25

    (115) print -> ECHO . LPAREN valores_echo RPAREN END
    (116) print -> ECHO . valores_echo END
    (124) funcion_print -> ECHO .
    (121) valores_echo -> . argument COMA valores_echo
    (122) valores_echo -> . argument
    (117) argument -> . ID
    (118) argument -> . TEXT
    (119) argument -> . operacion_matematica
    (120) argument -> . comparacion
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (69) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (70) comparacion -> . boolean
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (84) expresionlogica -> . ID operadorlogico ID

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 74
    ID              shift and go to state 63
    TEXT            shift and go to state 64
    NUMBER          shift and go to state 70
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

  ! LPAREN          [ reduce using rule 124 (funcion_print -> ECHO .) ]
  ! ID              [ reduce using rule 124 (funcion_print -> ECHO .) ]
  ! TEXT            [ reduce using rule 124 (funcion_print -> ECHO .) ]
  ! NUMBER          [ reduce using rule 124 (funcion_print -> ECHO .) ]
  ! DECIMAL         [ reduce using rule 124 (funcion_print -> ECHO .) ]
  ! TRUE            [ reduce using rule 124 (funcion_print -> ECHO .) ]
  ! FALSE           [ reduce using rule 124 (funcion_print -> ECHO .) ]

    valores_echo                   shift and go to state 75
    argument                       shift and go to state 76
    operacion_matematica           shift and go to state 65
    comparacion                    shift and go to state 66
    termino                        shift and go to state 67
    valor_comparado                shift and go to state 68
    boolean                        shift and go to state 69
    expresionlogica                shift and go to state 73

state 26

    (128) arreglos -> funcion_arreglo . LPAREN ID RPAREN

    LPAREN          shift and go to state 77


state 27

    (59) while -> WHILE . LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> WHILE . LPAREN comparacion RPAREN LCORCHET

    LPAREN          shift and go to state 78


state 28

    (61) while -> control_bucle . RCORCHET
    (62) while -> control_bucle .
    (66) foreach -> control_bucle . RCORCHET
    (67) foreach -> control_bucle .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 62 (while -> control_bucle .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 62 (while -> control_bucle .)
  ! reduce/reduce conflict for ELSE resolved using rule 62 (while -> control_bucle .)
    RCORCHET        shift and go to state 79
    CLOSE           reduce using rule 62 (while -> control_bucle .)
    $end            reduce using rule 62 (while -> control_bucle .)
    ELSE            reduce using rule 62 (while -> control_bucle .)

  ! RCORCHET        [ reduce using rule 62 (while -> control_bucle .) ]
  ! CLOSE           [ reduce using rule 67 (foreach -> control_bucle .) ]
  ! RCORCHET        [ reduce using rule 67 (foreach -> control_bucle .) ]
  ! $end            [ reduce using rule 67 (foreach -> control_bucle .) ]
  ! ELSE            [ reduce using rule 67 (foreach -> control_bucle .) ]


state 29

    (64) foreach -> FOREACH . LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> FOREACH . LPAREN ID AS ID RPAREN LCORCHET

    LPAREN          shift and go to state 80


state 30

    (162) clase -> CLASS . FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> CLASS . FNOMBRE LCORCHET

    FNOMBRE         shift and go to state 81


state 31

    (54) funcion_condicion -> IF .

    LPAREN          reduce using rule 54 (funcion_condicion -> IF .)


state 32

    (55) funcion_condicion -> ELSEIF .

    LPAREN          reduce using rule 55 (funcion_condicion -> ELSEIF .)


state 33

    (123) funcion_print -> VAR_EXPORT .

    LPAREN          reduce using rule 123 (funcion_print -> VAR_EXPORT .)
    ID              reduce using rule 123 (funcion_print -> VAR_EXPORT .)
    TEXT            reduce using rule 123 (funcion_print -> VAR_EXPORT .)
    NUMBER          reduce using rule 123 (funcion_print -> VAR_EXPORT .)
    DECIMAL         reduce using rule 123 (funcion_print -> VAR_EXPORT .)
    TRUE            reduce using rule 123 (funcion_print -> VAR_EXPORT .)
    FALSE           reduce using rule 123 (funcion_print -> VAR_EXPORT .)


state 34

    (125) funcion_print -> PRINT .

    LPAREN          reduce using rule 125 (funcion_print -> PRINT .)
    ID              reduce using rule 125 (funcion_print -> PRINT .)
    TEXT            reduce using rule 125 (funcion_print -> PRINT .)
    NUMBER          reduce using rule 125 (funcion_print -> PRINT .)
    DECIMAL         reduce using rule 125 (funcion_print -> PRINT .)
    TRUE            reduce using rule 125 (funcion_print -> PRINT .)
    FALSE           reduce using rule 125 (funcion_print -> PRINT .)


state 35

    (126) funcion_print -> PRINT_R .

    LPAREN          reduce using rule 126 (funcion_print -> PRINT_R .)
    ID              reduce using rule 126 (funcion_print -> PRINT_R .)
    TEXT            reduce using rule 126 (funcion_print -> PRINT_R .)
    NUMBER          reduce using rule 126 (funcion_print -> PRINT_R .)
    DECIMAL         reduce using rule 126 (funcion_print -> PRINT_R .)
    TRUE            reduce using rule 126 (funcion_print -> PRINT_R .)
    FALSE           reduce using rule 126 (funcion_print -> PRINT_R .)


state 36

    (127) funcion_print -> VAR_DUMP .

    LPAREN          reduce using rule 127 (funcion_print -> VAR_DUMP .)
    ID              reduce using rule 127 (funcion_print -> VAR_DUMP .)
    TEXT            reduce using rule 127 (funcion_print -> VAR_DUMP .)
    NUMBER          reduce using rule 127 (funcion_print -> VAR_DUMP .)
    DECIMAL         reduce using rule 127 (funcion_print -> VAR_DUMP .)
    TRUE            reduce using rule 127 (funcion_print -> VAR_DUMP .)
    FALSE           reduce using rule 127 (funcion_print -> VAR_DUMP .)


state 37

    (144) funcion_arreglo -> SUFFLE .

    LPAREN          reduce using rule 144 (funcion_arreglo -> SUFFLE .)


state 38

    (145) funcion_arreglo -> ARRAY_UNIQUE .

    LPAREN          reduce using rule 145 (funcion_arreglo -> ARRAY_UNIQUE .)


state 39

    (146) funcion_arreglo -> SIZEOF .

    LPAREN          reduce using rule 146 (funcion_arreglo -> SIZEOF .)


state 40

    (57) control_bucle -> BREAK .

    CLOSE           reduce using rule 57 (control_bucle -> BREAK .)
    RCORCHET        reduce using rule 57 (control_bucle -> BREAK .)
    $end            reduce using rule 57 (control_bucle -> BREAK .)
    ELSE            reduce using rule 57 (control_bucle -> BREAK .)


state 41

    (58) control_bucle -> CONTINUE .

    CLOSE           reduce using rule 58 (control_bucle -> CONTINUE .)
    RCORCHET        reduce using rule 58 (control_bucle -> CONTINUE .)
    $end            reduce using rule 58 (control_bucle -> CONTINUE .)
    ELSE            reduce using rule 58 (control_bucle -> CONTINUE .)


state 42

    (1) programa -> OPEN declaracion . CLOSE
    (2) programa -> OPEN declaracion .
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for CLOSE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    CLOSE           shift and go to state 82
    $end            reduce using rule 2 (programa -> OPEN declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 44

  ! CLOSE           [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! $end            [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! CLOSE           [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! $end            [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! CLOSE           [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! $end            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! CLOSE           [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! $end            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! CLOSE           [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! $end            [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! CLOSE           [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! $end            [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 43

    (3) programa -> declaracion CLOSE .

    $end            reduce using rule 3 (programa -> declaracion CLOSE .)


state 44

    (45) expif -> declaracion RCORCHET .
    (52) expelse -> declaracion RCORCHET .
    (23) creacionfunciones -> declaracion RCORCHET .
    (164) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    CLOSE           reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    RCORCHET        reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    $end            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    ELSE            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)

  ! CLOSE           [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]


state 45

    (48) expelse -> expif ELSE . LCORCHET declaracion RCORCHET
    (49) expelse -> expif ELSE . LCORCHET declaracion
    (50) expelse -> expif ELSE . LCORCHET

    LCORCHET        shift and go to state 83


state 46

    (32) expression -> ID EQUALS . operacion_matematica END
    (89) declararvariable -> ID EQUALS . tipo END
    (100) operador_object -> ID EQUALS . OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (90) tipo -> . boolean
    (91) tipo -> . NUMBER
    (92) tipo -> . TEXT
    (93) tipo -> . NULL
    (94) tipo -> . archivos
    (95) tipo -> . array
    (96) tipo -> . new
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (147) archivos -> . funcion_corta
    (148) archivos -> . estructura_funcion
    (101) array -> . ARRAY LPAREN valores_array RPAREN
    (112) new -> . NEW FNOMBRE
    (84) expresionlogica -> . ID operadorlogico ID
    (149) funcion_corta -> . FGETS LPAREN ID COMA NUMBER RPAREN
    (150) estructura_funcion -> . funcion_archivo LPAREN opcion RPAREN
    (153) funcion_archivo -> . FREAD
    (154) funcion_archivo -> . FSCANF
    (155) funcion_archivo -> . FPASSTHRU
    (156) funcion_archivo -> . FGETCSV
    (157) funcion_archivo -> . FGETC
    (158) funcion_archivo -> . FILE_GET_CONTENTS
    (159) funcion_archivo -> . READFILE
    (160) funcion_archivo -> . FILE
    (161) funcion_archivo -> . PARSE_INI_FILE

    OBJECT_OPERATOR shift and go to state 87
    NUMBER          shift and go to state 89
    TEXT            shift and go to state 90
    NULL            shift and go to state 91
    ID              shift and go to state 84
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    ARRAY           shift and go to state 97
    NEW             shift and go to state 98
    FGETS           shift and go to state 99
    FREAD           shift and go to state 101
    FSCANF          shift and go to state 102
    FPASSTHRU       shift and go to state 103
    FGETCSV         shift and go to state 104
    FGETC           shift and go to state 105
    FILE_GET_CONTENTS shift and go to state 106
    READFILE        shift and go to state 107
    FILE            shift and go to state 108
    PARSE_INI_FILE  shift and go to state 109

    operacion_matematica           shift and go to state 85
    tipo                           shift and go to state 86
    termino                        shift and go to state 67
    boolean                        shift and go to state 88
    archivos                       shift and go to state 92
    array                          shift and go to state 93
    new                            shift and go to state 94
    expresionlogica                shift and go to state 73
    funcion_corta                  shift and go to state 95
    estructura_funcion             shift and go to state 96
    funcion_archivo                shift and go to state 100

state 47

    (84) expresionlogica -> ID operadorlogico . ID

    ID              shift and go to state 110


state 48

    (85) operadorlogico -> AND .

    ID              reduce using rule 85 (operadorlogico -> AND .)


state 49

    (86) operadorlogico -> OR .

    ID              reduce using rule 86 (operadorlogico -> OR .)


state 50

    (87) operadorlogico -> XOR .

    ID              reduce using rule 87 (operadorlogico -> XOR .)


state 51

    (88) operadorlogico -> NOT .

    ID              reduce using rule 88 (operadorlogico -> NOT .)


state 52

    (43) expif -> funcion_condicion LPAREN . comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> funcion_condicion LPAREN . comparacion RPAREN LCORCHET
    (69) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (70) comparacion -> . boolean
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (84) expresionlogica -> . ID operadorlogico ID
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL

    NUMBER          shift and go to state 112
    ID              shift and go to state 114
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    DECIMAL         shift and go to state 58

    comparacion                    shift and go to state 111
    valor_comparado                shift and go to state 68
    boolean                        shift and go to state 69
    operacion_matematica           shift and go to state 113
    expresionlogica                shift and go to state 73
    termino                        shift and go to state 67

state 53

    (21) creacionfunciones -> FUNCTION FNOMBRE . LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> FUNCTION FNOMBRE . LPAREN RPAREN LCORCHET

    LPAREN          shift and go to state 115


state 54

    (29) returnvalores -> RETURN termino . END

    END             shift and go to state 116


state 55

    (30) returnvalores -> RETURN creacionfunciones .
    (12) declaracion -> creacionfunciones .

  ! reduce/reduce conflict for CLOSE resolved using rule 12 (declaracion -> creacionfunciones .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 12 (declaracion -> creacionfunciones .)
  ! reduce/reduce conflict for $end resolved using rule 12 (declaracion -> creacionfunciones .)
  ! reduce/reduce conflict for ELSE resolved using rule 12 (declaracion -> creacionfunciones .)
    CLOSE           reduce using rule 12 (declaracion -> creacionfunciones .)
    RCORCHET        reduce using rule 12 (declaracion -> creacionfunciones .)
    $end            reduce using rule 12 (declaracion -> creacionfunciones .)
    ELSE            reduce using rule 12 (declaracion -> creacionfunciones .)

  ! CLOSE           [ reduce using rule 30 (returnvalores -> RETURN creacionfunciones .) ]
  ! RCORCHET        [ reduce using rule 30 (returnvalores -> RETURN creacionfunciones .) ]
  ! $end            [ reduce using rule 30 (returnvalores -> RETURN creacionfunciones .) ]
  ! ELSE            [ reduce using rule 30 (returnvalores -> RETURN creacionfunciones .) ]


state 56

    (40) termino -> NUMBER .

    END             reduce using rule 40 (termino -> NUMBER .)
    PLUS            reduce using rule 40 (termino -> NUMBER .)
    MINUS           reduce using rule 40 (termino -> NUMBER .)
    DIVIDE          reduce using rule 40 (termino -> NUMBER .)
    TIMES           reduce using rule 40 (termino -> NUMBER .)
    MODULO          reduce using rule 40 (termino -> NUMBER .)
    IS_EQUAL        reduce using rule 40 (termino -> NUMBER .)
    IS_IDENTICAL    reduce using rule 40 (termino -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 40 (termino -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 40 (termino -> NUMBER .)
    IS_GREATER_OR_EQUAL reduce using rule 40 (termino -> NUMBER .)
    IS_SMALLER_OR_EQUAL reduce using rule 40 (termino -> NUMBER .)
    SPACESHIP       reduce using rule 40 (termino -> NUMBER .)
    MAYORQUE        reduce using rule 40 (termino -> NUMBER .)
    MENORQUE        reduce using rule 40 (termino -> NUMBER .)
    COMA            reduce using rule 40 (termino -> NUMBER .)
    RPAREN          reduce using rule 40 (termino -> NUMBER .)


state 57

    (41) termino -> ID .
    (32) expression -> ID . EQUALS operacion_matematica END
    (84) expresionlogica -> ID . operadorlogico ID
    (89) declararvariable -> ID . EQUALS tipo END
    (100) operador_object -> ID . EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (85) operadorlogico -> . AND
    (86) operadorlogico -> . OR
    (87) operadorlogico -> . XOR
    (88) operadorlogico -> . NOT

    END             reduce using rule 41 (termino -> ID .)
    EQUALS          shift and go to state 46
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 58

    (42) termino -> DECIMAL .

    END             reduce using rule 42 (termino -> DECIMAL .)
    PLUS            reduce using rule 42 (termino -> DECIMAL .)
    MINUS           reduce using rule 42 (termino -> DECIMAL .)
    DIVIDE          reduce using rule 42 (termino -> DECIMAL .)
    TIMES           reduce using rule 42 (termino -> DECIMAL .)
    MODULO          reduce using rule 42 (termino -> DECIMAL .)
    IS_EQUAL        reduce using rule 42 (termino -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 42 (termino -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 42 (termino -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 42 (termino -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 42 (termino -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 42 (termino -> DECIMAL .)
    SPACESHIP       reduce using rule 42 (termino -> DECIMAL .)
    MAYORQUE        reduce using rule 42 (termino -> DECIMAL .)
    MENORQUE        reduce using rule 42 (termino -> DECIMAL .)
    COMA            reduce using rule 42 (termino -> DECIMAL .)
    RPAREN          reduce using rule 42 (termino -> DECIMAL .)


state 59

    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 117
    CLOSE           reduce using rule 20 (declaracion -> declaracion .)
    $end            reduce using rule 20 (declaracion -> declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! CLOSE           [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! $end            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! CLOSE           [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! $end            [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! CLOSE           [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! $end            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! CLOSE           [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! $end            [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! CLOSE           [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! $end            [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 60

    (25) creacionfunciones -> RCORCHET .
    (47) expif -> RCORCHET .
    (53) expelse -> RCORCHET .
    (63) while -> RCORCHET .
    (68) foreach -> RCORCHET .
    (166) clase -> RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 25 (creacionfunciones -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (creacionfunciones -> RCORCHET .)
    CLOSE           reduce using rule 25 (creacionfunciones -> RCORCHET .)
    RCORCHET        reduce using rule 25 (creacionfunciones -> RCORCHET .)
    $end            reduce using rule 25 (creacionfunciones -> RCORCHET .)
    ELSE            reduce using rule 25 (creacionfunciones -> RCORCHET .)

  ! CLOSE           [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! $end            [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 47 (expif -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! $end            [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 53 (expelse -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 63 (while -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 63 (while -> RCORCHET .) ]
  ! $end            [ reduce using rule 63 (while -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 63 (while -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! $end            [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 68 (foreach -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 166 (clase -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 166 (clase -> RCORCHET .) ]
  ! $end            [ reduce using rule 166 (clase -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 166 (clase -> RCORCHET .) ]


state 61

    (113) print -> funcion_print LPAREN . argument RPAREN END
    (117) argument -> . ID
    (118) argument -> . TEXT
    (119) argument -> . operacion_matematica
    (120) argument -> . comparacion
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (69) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (70) comparacion -> . boolean
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (84) expresionlogica -> . ID operadorlogico ID

    ID              shift and go to state 63
    TEXT            shift and go to state 64
    NUMBER          shift and go to state 70
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    argument                       shift and go to state 118
    operacion_matematica           shift and go to state 65
    comparacion                    shift and go to state 66
    termino                        shift and go to state 67
    valor_comparado                shift and go to state 68
    boolean                        shift and go to state 69
    expresionlogica                shift and go to state 73

state 62

    (114) print -> funcion_print argument . END

    END             shift and go to state 119


state 63

    (117) argument -> ID .
    (41) termino -> ID .
    (74) valor_comparado -> ID .
    (84) expresionlogica -> ID . operadorlogico ID
    (85) operadorlogico -> . AND
    (86) operadorlogico -> . OR
    (87) operadorlogico -> . XOR
    (88) operadorlogico -> . NOT

    END             reduce using rule 117 (argument -> ID .)
    COMA            reduce using rule 117 (argument -> ID .)
    RPAREN          reduce using rule 117 (argument -> ID .)
    PLUS            reduce using rule 41 (termino -> ID .)
    MINUS           reduce using rule 41 (termino -> ID .)
    DIVIDE          reduce using rule 41 (termino -> ID .)
    TIMES           reduce using rule 41 (termino -> ID .)
    MODULO          reduce using rule 41 (termino -> ID .)
    IS_EQUAL        reduce using rule 74 (valor_comparado -> ID .)
    IS_IDENTICAL    reduce using rule 74 (valor_comparado -> ID .)
    IS_NOT_EQUAL    reduce using rule 74 (valor_comparado -> ID .)
    IS_NOT_IDENTICAL reduce using rule 74 (valor_comparado -> ID .)
    IS_GREATER_OR_EQUAL reduce using rule 74 (valor_comparado -> ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 74 (valor_comparado -> ID .)
    SPACESHIP       reduce using rule 74 (valor_comparado -> ID .)
    MAYORQUE        reduce using rule 74 (valor_comparado -> ID .)
    MENORQUE        reduce using rule 74 (valor_comparado -> ID .)
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 64

    (118) argument -> TEXT .

    END             reduce using rule 118 (argument -> TEXT .)
    COMA            reduce using rule 118 (argument -> TEXT .)
    RPAREN          reduce using rule 118 (argument -> TEXT .)


state 65

    (119) argument -> operacion_matematica .
    (73) valor_comparado -> operacion_matematica .

    END             reduce using rule 119 (argument -> operacion_matematica .)
    COMA            reduce using rule 119 (argument -> operacion_matematica .)
    RPAREN          reduce using rule 119 (argument -> operacion_matematica .)
    IS_EQUAL        reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_IDENTICAL    reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_NOT_EQUAL    reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_NOT_IDENTICAL reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_GREATER_OR_EQUAL reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_SMALLER_OR_EQUAL reduce using rule 73 (valor_comparado -> operacion_matematica .)
    SPACESHIP       reduce using rule 73 (valor_comparado -> operacion_matematica .)
    MAYORQUE        reduce using rule 73 (valor_comparado -> operacion_matematica .)
    MENORQUE        reduce using rule 73 (valor_comparado -> operacion_matematica .)


state 66

    (120) argument -> comparacion .

    END             reduce using rule 120 (argument -> comparacion .)
    COMA            reduce using rule 120 (argument -> comparacion .)
    RPAREN          reduce using rule 120 (argument -> comparacion .)


state 67

    (33) operacion_matematica -> termino . operadores operacion_matematica
    (34) operacion_matematica -> termino . operadores termino
    (35) operadores -> . PLUS
    (36) operadores -> . MINUS
    (37) operadores -> . DIVIDE
    (38) operadores -> . TIMES
    (39) operadores -> . MODULO

    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    DIVIDE          shift and go to state 123
    TIMES           shift and go to state 124
    MODULO          shift and go to state 125

    operadores                     shift and go to state 120

state 68

    (69) comparacion -> valor_comparado . operadorcomparacion valor_comparado
    (75) operadorcomparacion -> . IS_EQUAL
    (76) operadorcomparacion -> . IS_IDENTICAL
    (77) operadorcomparacion -> . IS_NOT_EQUAL
    (78) operadorcomparacion -> . IS_NOT_IDENTICAL
    (79) operadorcomparacion -> . IS_GREATER_OR_EQUAL
    (80) operadorcomparacion -> . IS_SMALLER_OR_EQUAL
    (81) operadorcomparacion -> . SPACESHIP
    (82) operadorcomparacion -> . MAYORQUE
    (83) operadorcomparacion -> . MENORQUE

    IS_EQUAL        shift and go to state 127
    IS_IDENTICAL    shift and go to state 128
    IS_NOT_EQUAL    shift and go to state 129
    IS_NOT_IDENTICAL shift and go to state 130
    IS_GREATER_OR_EQUAL shift and go to state 131
    IS_SMALLER_OR_EQUAL shift and go to state 132
    SPACESHIP       shift and go to state 133
    MAYORQUE        shift and go to state 134
    MENORQUE        shift and go to state 135

    operadorcomparacion            shift and go to state 126

state 69

    (70) comparacion -> boolean .
    (72) valor_comparado -> boolean .

    END             reduce using rule 70 (comparacion -> boolean .)
    COMA            reduce using rule 70 (comparacion -> boolean .)
    RPAREN          reduce using rule 70 (comparacion -> boolean .)
    IS_EQUAL        reduce using rule 72 (valor_comparado -> boolean .)
    IS_IDENTICAL    reduce using rule 72 (valor_comparado -> boolean .)
    IS_NOT_EQUAL    reduce using rule 72 (valor_comparado -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 72 (valor_comparado -> boolean .)
    IS_GREATER_OR_EQUAL reduce using rule 72 (valor_comparado -> boolean .)
    IS_SMALLER_OR_EQUAL reduce using rule 72 (valor_comparado -> boolean .)
    SPACESHIP       reduce using rule 72 (valor_comparado -> boolean .)
    MAYORQUE        reduce using rule 72 (valor_comparado -> boolean .)
    MENORQUE        reduce using rule 72 (valor_comparado -> boolean .)


state 70

    (40) termino -> NUMBER .
    (71) valor_comparado -> NUMBER .

    PLUS            reduce using rule 40 (termino -> NUMBER .)
    MINUS           reduce using rule 40 (termino -> NUMBER .)
    DIVIDE          reduce using rule 40 (termino -> NUMBER .)
    TIMES           reduce using rule 40 (termino -> NUMBER .)
    MODULO          reduce using rule 40 (termino -> NUMBER .)
    IS_EQUAL        reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_IDENTICAL    reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_GREATER_OR_EQUAL reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_SMALLER_OR_EQUAL reduce using rule 71 (valor_comparado -> NUMBER .)
    SPACESHIP       reduce using rule 71 (valor_comparado -> NUMBER .)
    MAYORQUE        reduce using rule 71 (valor_comparado -> NUMBER .)
    MENORQUE        reduce using rule 71 (valor_comparado -> NUMBER .)


state 71

    (97) boolean -> TRUE .

    END             reduce using rule 97 (boolean -> TRUE .)
    IS_EQUAL        reduce using rule 97 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 97 (boolean -> TRUE .)
    IS_NOT_EQUAL    reduce using rule 97 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 97 (boolean -> TRUE .)
    IS_GREATER_OR_EQUAL reduce using rule 97 (boolean -> TRUE .)
    IS_SMALLER_OR_EQUAL reduce using rule 97 (boolean -> TRUE .)
    SPACESHIP       reduce using rule 97 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 97 (boolean -> TRUE .)
    MENORQUE        reduce using rule 97 (boolean -> TRUE .)
    COMA            reduce using rule 97 (boolean -> TRUE .)
    RPAREN          reduce using rule 97 (boolean -> TRUE .)
    FLECHA          reduce using rule 97 (boolean -> TRUE .)


state 72

    (98) boolean -> FALSE .

    END             reduce using rule 98 (boolean -> FALSE .)
    IS_EQUAL        reduce using rule 98 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 98 (boolean -> FALSE .)
    IS_NOT_EQUAL    reduce using rule 98 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 98 (boolean -> FALSE .)
    IS_GREATER_OR_EQUAL reduce using rule 98 (boolean -> FALSE .)
    IS_SMALLER_OR_EQUAL reduce using rule 98 (boolean -> FALSE .)
    SPACESHIP       reduce using rule 98 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 98 (boolean -> FALSE .)
    MENORQUE        reduce using rule 98 (boolean -> FALSE .)
    COMA            reduce using rule 98 (boolean -> FALSE .)
    RPAREN          reduce using rule 98 (boolean -> FALSE .)
    FLECHA          reduce using rule 98 (boolean -> FALSE .)


state 73

    (99) boolean -> expresionlogica .

    END             reduce using rule 99 (boolean -> expresionlogica .)
    IS_EQUAL        reduce using rule 99 (boolean -> expresionlogica .)
    IS_IDENTICAL    reduce using rule 99 (boolean -> expresionlogica .)
    IS_NOT_EQUAL    reduce using rule 99 (boolean -> expresionlogica .)
    IS_NOT_IDENTICAL reduce using rule 99 (boolean -> expresionlogica .)
    IS_GREATER_OR_EQUAL reduce using rule 99 (boolean -> expresionlogica .)
    IS_SMALLER_OR_EQUAL reduce using rule 99 (boolean -> expresionlogica .)
    SPACESHIP       reduce using rule 99 (boolean -> expresionlogica .)
    MAYORQUE        reduce using rule 99 (boolean -> expresionlogica .)
    MENORQUE        reduce using rule 99 (boolean -> expresionlogica .)
    COMA            reduce using rule 99 (boolean -> expresionlogica .)
    RPAREN          reduce using rule 99 (boolean -> expresionlogica .)
    FLECHA          reduce using rule 99 (boolean -> expresionlogica .)


state 74

    (115) print -> ECHO LPAREN . valores_echo RPAREN END
    (121) valores_echo -> . argument COMA valores_echo
    (122) valores_echo -> . argument
    (117) argument -> . ID
    (118) argument -> . TEXT
    (119) argument -> . operacion_matematica
    (120) argument -> . comparacion
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (69) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (70) comparacion -> . boolean
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (84) expresionlogica -> . ID operadorlogico ID

    ID              shift and go to state 63
    TEXT            shift and go to state 64
    NUMBER          shift and go to state 70
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    valores_echo                   shift and go to state 136
    argument                       shift and go to state 76
    operacion_matematica           shift and go to state 65
    comparacion                    shift and go to state 66
    termino                        shift and go to state 67
    valor_comparado                shift and go to state 68
    boolean                        shift and go to state 69
    expresionlogica                shift and go to state 73

state 75

    (116) print -> ECHO valores_echo . END

    END             shift and go to state 137


state 76

    (121) valores_echo -> argument . COMA valores_echo
    (122) valores_echo -> argument .

    COMA            shift and go to state 138
    END             reduce using rule 122 (valores_echo -> argument .)
    RPAREN          reduce using rule 122 (valores_echo -> argument .)


state 77

    (128) arreglos -> funcion_arreglo LPAREN . ID RPAREN

    ID              shift and go to state 139


state 78

    (59) while -> WHILE LPAREN . comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> WHILE LPAREN . comparacion RPAREN LCORCHET
    (69) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (70) comparacion -> . boolean
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (84) expresionlogica -> . ID operadorlogico ID
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL

    NUMBER          shift and go to state 112
    ID              shift and go to state 114
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    DECIMAL         shift and go to state 58

    comparacion                    shift and go to state 140
    valor_comparado                shift and go to state 68
    boolean                        shift and go to state 69
    operacion_matematica           shift and go to state 113
    expresionlogica                shift and go to state 73
    termino                        shift and go to state 67

state 79

    (61) while -> control_bucle RCORCHET .
    (66) foreach -> control_bucle RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 61 (while -> control_bucle RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 61 (while -> control_bucle RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 61 (while -> control_bucle RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 61 (while -> control_bucle RCORCHET .)
    CLOSE           reduce using rule 61 (while -> control_bucle RCORCHET .)
    RCORCHET        reduce using rule 61 (while -> control_bucle RCORCHET .)
    $end            reduce using rule 61 (while -> control_bucle RCORCHET .)
    ELSE            reduce using rule 61 (while -> control_bucle RCORCHET .)

  ! CLOSE           [ reduce using rule 66 (foreach -> control_bucle RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 66 (foreach -> control_bucle RCORCHET .) ]
  ! $end            [ reduce using rule 66 (foreach -> control_bucle RCORCHET .) ]
  ! ELSE            [ reduce using rule 66 (foreach -> control_bucle RCORCHET .) ]


state 80

    (64) foreach -> FOREACH LPAREN . ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> FOREACH LPAREN . ID AS ID RPAREN LCORCHET

    ID              shift and go to state 141


state 81

    (162) clase -> CLASS FNOMBRE . LCORCHET declaracion RCORCHET
    (163) clase -> CLASS FNOMBRE . LCORCHET

    LCORCHET        shift and go to state 142


state 82

    (1) programa -> OPEN declaracion CLOSE .

    $end            reduce using rule 1 (programa -> OPEN declaracion CLOSE .)


state 83

    (48) expelse -> expif ELSE LCORCHET . declaracion RCORCHET
    (49) expelse -> expif ELSE LCORCHET . declaracion
    (50) expelse -> expif ELSE LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 26 (empty -> .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 26 (empty -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 26 (empty -> .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    CLOSE           reduce using rule 26 (empty -> .)
    $end            reduce using rule 26 (empty -> .)
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! CLOSE           [ reduce using rule 50 (expelse -> expif ELSE LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 50 (expelse -> expif ELSE LCORCHET .) ]
  ! $end            [ reduce using rule 50 (expelse -> expif ELSE LCORCHET .) ]
  ! ELSE            [ reduce using rule 50 (expelse -> expif ELSE LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]

    expif                          shift and go to state 6
    declaracion                    shift and go to state 143
    expression                     shift and go to state 5
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 84

    (41) termino -> ID .
    (84) expresionlogica -> ID . operadorlogico ID
    (85) operadorlogico -> . AND
    (86) operadorlogico -> . OR
    (87) operadorlogico -> . XOR
    (88) operadorlogico -> . NOT

    PLUS            reduce using rule 41 (termino -> ID .)
    MINUS           reduce using rule 41 (termino -> ID .)
    DIVIDE          reduce using rule 41 (termino -> ID .)
    TIMES           reduce using rule 41 (termino -> ID .)
    MODULO          reduce using rule 41 (termino -> ID .)
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 85

    (32) expression -> ID EQUALS operacion_matematica . END

    END             shift and go to state 144


state 86

    (89) declararvariable -> ID EQUALS tipo . END

    END             shift and go to state 145


state 87

    (100) operador_object -> ID EQUALS OBJECT_OPERATOR . FNOMBRE LPAREN argumentos RPAREN END

    FNOMBRE         shift and go to state 146


state 88

    (90) tipo -> boolean .

    END             reduce using rule 90 (tipo -> boolean .)


state 89

    (91) tipo -> NUMBER .
    (40) termino -> NUMBER .

    END             reduce using rule 91 (tipo -> NUMBER .)
    PLUS            reduce using rule 40 (termino -> NUMBER .)
    MINUS           reduce using rule 40 (termino -> NUMBER .)
    DIVIDE          reduce using rule 40 (termino -> NUMBER .)
    TIMES           reduce using rule 40 (termino -> NUMBER .)
    MODULO          reduce using rule 40 (termino -> NUMBER .)


state 90

    (92) tipo -> TEXT .

    END             reduce using rule 92 (tipo -> TEXT .)


state 91

    (93) tipo -> NULL .

    END             reduce using rule 93 (tipo -> NULL .)


state 92

    (94) tipo -> archivos .

    END             reduce using rule 94 (tipo -> archivos .)


state 93

    (95) tipo -> array .

    END             reduce using rule 95 (tipo -> array .)


state 94

    (96) tipo -> new .

    END             reduce using rule 96 (tipo -> new .)


state 95

    (147) archivos -> funcion_corta .

    END             reduce using rule 147 (archivos -> funcion_corta .)


state 96

    (148) archivos -> estructura_funcion .

    END             reduce using rule 148 (archivos -> estructura_funcion .)


state 97

    (101) array -> ARRAY . LPAREN valores_array RPAREN

    LPAREN          shift and go to state 147


state 98

    (112) new -> NEW . FNOMBRE

    FNOMBRE         shift and go to state 148


state 99

    (149) funcion_corta -> FGETS . LPAREN ID COMA NUMBER RPAREN

    LPAREN          shift and go to state 149


state 100

    (150) estructura_funcion -> funcion_archivo . LPAREN opcion RPAREN

    LPAREN          shift and go to state 150


state 101

    (153) funcion_archivo -> FREAD .

    LPAREN          reduce using rule 153 (funcion_archivo -> FREAD .)


state 102

    (154) funcion_archivo -> FSCANF .

    LPAREN          reduce using rule 154 (funcion_archivo -> FSCANF .)


state 103

    (155) funcion_archivo -> FPASSTHRU .

    LPAREN          reduce using rule 155 (funcion_archivo -> FPASSTHRU .)


state 104

    (156) funcion_archivo -> FGETCSV .

    LPAREN          reduce using rule 156 (funcion_archivo -> FGETCSV .)


state 105

    (157) funcion_archivo -> FGETC .

    LPAREN          reduce using rule 157 (funcion_archivo -> FGETC .)


state 106

    (158) funcion_archivo -> FILE_GET_CONTENTS .

    LPAREN          reduce using rule 158 (funcion_archivo -> FILE_GET_CONTENTS .)


state 107

    (159) funcion_archivo -> READFILE .

    LPAREN          reduce using rule 159 (funcion_archivo -> READFILE .)


state 108

    (160) funcion_archivo -> FILE .

    LPAREN          reduce using rule 160 (funcion_archivo -> FILE .)


state 109

    (161) funcion_archivo -> PARSE_INI_FILE .

    LPAREN          reduce using rule 161 (funcion_archivo -> PARSE_INI_FILE .)


state 110

    (84) expresionlogica -> ID operadorlogico ID .

    CLOSE           reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    RCORCHET        reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    $end            reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    ELSE            reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    END             reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    IS_EQUAL        reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    IS_IDENTICAL    reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    IS_NOT_EQUAL    reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    IS_NOT_IDENTICAL reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    IS_GREATER_OR_EQUAL reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    SPACESHIP       reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    MAYORQUE        reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    MENORQUE        reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    COMA            reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    RPAREN          reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)
    FLECHA          reduce using rule 84 (expresionlogica -> ID operadorlogico ID .)


state 111

    (43) expif -> funcion_condicion LPAREN comparacion . RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> funcion_condicion LPAREN comparacion . RPAREN LCORCHET

    RPAREN          shift and go to state 151


state 112

    (71) valor_comparado -> NUMBER .
    (40) termino -> NUMBER .

    IS_EQUAL        reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_IDENTICAL    reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_GREATER_OR_EQUAL reduce using rule 71 (valor_comparado -> NUMBER .)
    IS_SMALLER_OR_EQUAL reduce using rule 71 (valor_comparado -> NUMBER .)
    SPACESHIP       reduce using rule 71 (valor_comparado -> NUMBER .)
    MAYORQUE        reduce using rule 71 (valor_comparado -> NUMBER .)
    MENORQUE        reduce using rule 71 (valor_comparado -> NUMBER .)
    END             reduce using rule 71 (valor_comparado -> NUMBER .)
    COMA            reduce using rule 71 (valor_comparado -> NUMBER .)
    RPAREN          reduce using rule 71 (valor_comparado -> NUMBER .)
    PLUS            reduce using rule 40 (termino -> NUMBER .)
    MINUS           reduce using rule 40 (termino -> NUMBER .)
    DIVIDE          reduce using rule 40 (termino -> NUMBER .)
    TIMES           reduce using rule 40 (termino -> NUMBER .)
    MODULO          reduce using rule 40 (termino -> NUMBER .)


state 113

    (73) valor_comparado -> operacion_matematica .

    IS_EQUAL        reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_IDENTICAL    reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_NOT_EQUAL    reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_NOT_IDENTICAL reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_GREATER_OR_EQUAL reduce using rule 73 (valor_comparado -> operacion_matematica .)
    IS_SMALLER_OR_EQUAL reduce using rule 73 (valor_comparado -> operacion_matematica .)
    SPACESHIP       reduce using rule 73 (valor_comparado -> operacion_matematica .)
    MAYORQUE        reduce using rule 73 (valor_comparado -> operacion_matematica .)
    MENORQUE        reduce using rule 73 (valor_comparado -> operacion_matematica .)
    END             reduce using rule 73 (valor_comparado -> operacion_matematica .)
    COMA            reduce using rule 73 (valor_comparado -> operacion_matematica .)
    RPAREN          reduce using rule 73 (valor_comparado -> operacion_matematica .)


state 114

    (74) valor_comparado -> ID .
    (84) expresionlogica -> ID . operadorlogico ID
    (41) termino -> ID .
    (85) operadorlogico -> . AND
    (86) operadorlogico -> . OR
    (87) operadorlogico -> . XOR
    (88) operadorlogico -> . NOT

    IS_EQUAL        reduce using rule 74 (valor_comparado -> ID .)
    IS_IDENTICAL    reduce using rule 74 (valor_comparado -> ID .)
    IS_NOT_EQUAL    reduce using rule 74 (valor_comparado -> ID .)
    IS_NOT_IDENTICAL reduce using rule 74 (valor_comparado -> ID .)
    IS_GREATER_OR_EQUAL reduce using rule 74 (valor_comparado -> ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 74 (valor_comparado -> ID .)
    SPACESHIP       reduce using rule 74 (valor_comparado -> ID .)
    MAYORQUE        reduce using rule 74 (valor_comparado -> ID .)
    MENORQUE        reduce using rule 74 (valor_comparado -> ID .)
    END             reduce using rule 74 (valor_comparado -> ID .)
    COMA            reduce using rule 74 (valor_comparado -> ID .)
    RPAREN          reduce using rule 74 (valor_comparado -> ID .)
    PLUS            reduce using rule 41 (termino -> ID .)
    MINUS           reduce using rule 41 (termino -> ID .)
    DIVIDE          reduce using rule 41 (termino -> ID .)
    TIMES           reduce using rule 41 (termino -> ID .)
    MODULO          reduce using rule 41 (termino -> ID .)
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 115

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN . RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> FUNCTION FNOMBRE LPAREN . RPAREN LCORCHET

    RPAREN          shift and go to state 152


state 116

    (29) returnvalores -> RETURN termino END .

    CLOSE           reduce using rule 29 (returnvalores -> RETURN termino END .)
    RCORCHET        reduce using rule 29 (returnvalores -> RETURN termino END .)
    $end            reduce using rule 29 (returnvalores -> RETURN termino END .)
    ELSE            reduce using rule 29 (returnvalores -> RETURN termino END .)


state 117

    (23) creacionfunciones -> declaracion RCORCHET .
    (45) expif -> declaracion RCORCHET .
    (52) expelse -> declaracion RCORCHET .
    (164) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    CLOSE           reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    RCORCHET        reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    $end            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    ELSE            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)

  ! CLOSE           [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]


state 118

    (113) print -> funcion_print LPAREN argument . RPAREN END

    RPAREN          shift and go to state 153


state 119

    (114) print -> funcion_print argument END .

    CLOSE           reduce using rule 114 (print -> funcion_print argument END .)
    RCORCHET        reduce using rule 114 (print -> funcion_print argument END .)
    $end            reduce using rule 114 (print -> funcion_print argument END .)
    ELSE            reduce using rule 114 (print -> funcion_print argument END .)


state 120

    (33) operacion_matematica -> termino operadores . operacion_matematica
    (34) operacion_matematica -> termino operadores . termino
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL

    NUMBER          shift and go to state 56
    ID              shift and go to state 156
    DECIMAL         shift and go to state 58

    termino                        shift and go to state 154
    operacion_matematica           shift and go to state 155

state 121

    (35) operadores -> PLUS .

    NUMBER          reduce using rule 35 (operadores -> PLUS .)
    ID              reduce using rule 35 (operadores -> PLUS .)
    DECIMAL         reduce using rule 35 (operadores -> PLUS .)


state 122

    (36) operadores -> MINUS .

    NUMBER          reduce using rule 36 (operadores -> MINUS .)
    ID              reduce using rule 36 (operadores -> MINUS .)
    DECIMAL         reduce using rule 36 (operadores -> MINUS .)


state 123

    (37) operadores -> DIVIDE .

    NUMBER          reduce using rule 37 (operadores -> DIVIDE .)
    ID              reduce using rule 37 (operadores -> DIVIDE .)
    DECIMAL         reduce using rule 37 (operadores -> DIVIDE .)


state 124

    (38) operadores -> TIMES .

    NUMBER          reduce using rule 38 (operadores -> TIMES .)
    ID              reduce using rule 38 (operadores -> TIMES .)
    DECIMAL         reduce using rule 38 (operadores -> TIMES .)


state 125

    (39) operadores -> MODULO .

    NUMBER          reduce using rule 39 (operadores -> MODULO .)
    ID              reduce using rule 39 (operadores -> MODULO .)
    DECIMAL         reduce using rule 39 (operadores -> MODULO .)


state 126

    (69) comparacion -> valor_comparado operadorcomparacion . valor_comparado
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (84) expresionlogica -> . ID operadorlogico ID
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL

    NUMBER          shift and go to state 112
    ID              shift and go to state 114
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    DECIMAL         shift and go to state 58

    valor_comparado                shift and go to state 157
    boolean                        shift and go to state 158
    operacion_matematica           shift and go to state 113
    expresionlogica                shift and go to state 73
    termino                        shift and go to state 67

state 127

    (75) operadorcomparacion -> IS_EQUAL .

    NUMBER          reduce using rule 75 (operadorcomparacion -> IS_EQUAL .)
    ID              reduce using rule 75 (operadorcomparacion -> IS_EQUAL .)
    TRUE            reduce using rule 75 (operadorcomparacion -> IS_EQUAL .)
    FALSE           reduce using rule 75 (operadorcomparacion -> IS_EQUAL .)
    DECIMAL         reduce using rule 75 (operadorcomparacion -> IS_EQUAL .)


state 128

    (76) operadorcomparacion -> IS_IDENTICAL .

    NUMBER          reduce using rule 76 (operadorcomparacion -> IS_IDENTICAL .)
    ID              reduce using rule 76 (operadorcomparacion -> IS_IDENTICAL .)
    TRUE            reduce using rule 76 (operadorcomparacion -> IS_IDENTICAL .)
    FALSE           reduce using rule 76 (operadorcomparacion -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 76 (operadorcomparacion -> IS_IDENTICAL .)


state 129

    (77) operadorcomparacion -> IS_NOT_EQUAL .

    NUMBER          reduce using rule 77 (operadorcomparacion -> IS_NOT_EQUAL .)
    ID              reduce using rule 77 (operadorcomparacion -> IS_NOT_EQUAL .)
    TRUE            reduce using rule 77 (operadorcomparacion -> IS_NOT_EQUAL .)
    FALSE           reduce using rule 77 (operadorcomparacion -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 77 (operadorcomparacion -> IS_NOT_EQUAL .)


state 130

    (78) operadorcomparacion -> IS_NOT_IDENTICAL .

    NUMBER          reduce using rule 78 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    ID              reduce using rule 78 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    TRUE            reduce using rule 78 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    FALSE           reduce using rule 78 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 78 (operadorcomparacion -> IS_NOT_IDENTICAL .)


state 131

    (79) operadorcomparacion -> IS_GREATER_OR_EQUAL .

    NUMBER          reduce using rule 79 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    ID              reduce using rule 79 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    TRUE            reduce using rule 79 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    FALSE           reduce using rule 79 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 79 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)


state 132

    (80) operadorcomparacion -> IS_SMALLER_OR_EQUAL .

    NUMBER          reduce using rule 80 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    ID              reduce using rule 80 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    TRUE            reduce using rule 80 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    FALSE           reduce using rule 80 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 80 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)


state 133

    (81) operadorcomparacion -> SPACESHIP .

    NUMBER          reduce using rule 81 (operadorcomparacion -> SPACESHIP .)
    ID              reduce using rule 81 (operadorcomparacion -> SPACESHIP .)
    TRUE            reduce using rule 81 (operadorcomparacion -> SPACESHIP .)
    FALSE           reduce using rule 81 (operadorcomparacion -> SPACESHIP .)
    DECIMAL         reduce using rule 81 (operadorcomparacion -> SPACESHIP .)


state 134

    (82) operadorcomparacion -> MAYORQUE .

    NUMBER          reduce using rule 82 (operadorcomparacion -> MAYORQUE .)
    ID              reduce using rule 82 (operadorcomparacion -> MAYORQUE .)
    TRUE            reduce using rule 82 (operadorcomparacion -> MAYORQUE .)
    FALSE           reduce using rule 82 (operadorcomparacion -> MAYORQUE .)
    DECIMAL         reduce using rule 82 (operadorcomparacion -> MAYORQUE .)


state 135

    (83) operadorcomparacion -> MENORQUE .

    NUMBER          reduce using rule 83 (operadorcomparacion -> MENORQUE .)
    ID              reduce using rule 83 (operadorcomparacion -> MENORQUE .)
    TRUE            reduce using rule 83 (operadorcomparacion -> MENORQUE .)
    FALSE           reduce using rule 83 (operadorcomparacion -> MENORQUE .)
    DECIMAL         reduce using rule 83 (operadorcomparacion -> MENORQUE .)


state 136

    (115) print -> ECHO LPAREN valores_echo . RPAREN END

    RPAREN          shift and go to state 159


state 137

    (116) print -> ECHO valores_echo END .

    CLOSE           reduce using rule 116 (print -> ECHO valores_echo END .)
    RCORCHET        reduce using rule 116 (print -> ECHO valores_echo END .)
    $end            reduce using rule 116 (print -> ECHO valores_echo END .)
    ELSE            reduce using rule 116 (print -> ECHO valores_echo END .)


state 138

    (121) valores_echo -> argument COMA . valores_echo
    (121) valores_echo -> . argument COMA valores_echo
    (122) valores_echo -> . argument
    (117) argument -> . ID
    (118) argument -> . TEXT
    (119) argument -> . operacion_matematica
    (120) argument -> . comparacion
    (33) operacion_matematica -> . termino operadores operacion_matematica
    (34) operacion_matematica -> . termino operadores termino
    (69) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (70) comparacion -> . boolean
    (40) termino -> . NUMBER
    (41) termino -> . ID
    (42) termino -> . DECIMAL
    (71) valor_comparado -> . NUMBER
    (72) valor_comparado -> . boolean
    (73) valor_comparado -> . operacion_matematica
    (74) valor_comparado -> . ID
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (84) expresionlogica -> . ID operadorlogico ID

    ID              shift and go to state 63
    TEXT            shift and go to state 64
    NUMBER          shift and go to state 70
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    argument                       shift and go to state 76
    valores_echo                   shift and go to state 160
    operacion_matematica           shift and go to state 65
    comparacion                    shift and go to state 66
    termino                        shift and go to state 67
    valor_comparado                shift and go to state 68
    boolean                        shift and go to state 69
    expresionlogica                shift and go to state 73

state 139

    (128) arreglos -> funcion_arreglo LPAREN ID . RPAREN

    RPAREN          shift and go to state 161


state 140

    (59) while -> WHILE LPAREN comparacion . RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> WHILE LPAREN comparacion . RPAREN LCORCHET

    RPAREN          shift and go to state 162


state 141

    (64) foreach -> FOREACH LPAREN ID . AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> FOREACH LPAREN ID . AS ID RPAREN LCORCHET

    AS              shift and go to state 163


state 142

    (162) clase -> CLASS FNOMBRE LCORCHET . declaracion RCORCHET
    (163) clase -> CLASS FNOMBRE LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 26 (empty -> .)
    CLOSE           reduce using rule 163 (clase -> CLASS FNOMBRE LCORCHET .)
    $end            reduce using rule 163 (clase -> CLASS FNOMBRE LCORCHET .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 163 (clase -> CLASS FNOMBRE LCORCHET .) ]
  ! ELSE            [ reduce using rule 163 (clase -> CLASS FNOMBRE LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]

    declaracion                    shift and go to state 164
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 143

    (48) expelse -> expif ELSE LCORCHET declaracion . RCORCHET
    (49) expelse -> expif ELSE LCORCHET declaracion .
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 165
    CLOSE           reduce using rule 20 (declaracion -> declaracion .)
    $end            reduce using rule 20 (declaracion -> declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! CLOSE           [ reduce using rule 49 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! RCORCHET        [ reduce using rule 49 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! $end            [ reduce using rule 49 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! ELSE            [ reduce using rule 49 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! CLOSE           [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! $end            [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! CLOSE           [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! $end            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! CLOSE           [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! $end            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! CLOSE           [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! $end            [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! CLOSE           [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! $end            [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 144

    (32) expression -> ID EQUALS operacion_matematica END .

    CLOSE           reduce using rule 32 (expression -> ID EQUALS operacion_matematica END .)
    RCORCHET        reduce using rule 32 (expression -> ID EQUALS operacion_matematica END .)
    $end            reduce using rule 32 (expression -> ID EQUALS operacion_matematica END .)
    ELSE            reduce using rule 32 (expression -> ID EQUALS operacion_matematica END .)


state 145

    (89) declararvariable -> ID EQUALS tipo END .

    CLOSE           reduce using rule 89 (declararvariable -> ID EQUALS tipo END .)
    RCORCHET        reduce using rule 89 (declararvariable -> ID EQUALS tipo END .)
    $end            reduce using rule 89 (declararvariable -> ID EQUALS tipo END .)
    ELSE            reduce using rule 89 (declararvariable -> ID EQUALS tipo END .)


state 146

    (100) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE . LPAREN argumentos RPAREN END

    LPAREN          shift and go to state 166


state 147

    (101) array -> ARRAY LPAREN . valores_array RPAREN
    (102) valores_array -> . elementos_array COMA valores_array
    (103) valores_array -> . elementos_array
    (104) valores_array -> . empty
    (106) elementos_array -> . NUMBER
    (107) elementos_array -> . TEXT
    (108) elementos_array -> . empty
    (109) elementos_array -> . boolean
    (110) elementos_array -> . array
    (111) elementos_array -> . flecha_array
    (26) empty -> .
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (101) array -> . ARRAY LPAREN valores_array RPAREN
    (105) flecha_array -> . elementos_array FLECHA elementos_array
    (84) expresionlogica -> . ID operadorlogico ID

    NUMBER          shift and go to state 170
    TEXT            shift and go to state 171
    RPAREN          reduce using rule 26 (empty -> .)
    COMA            reduce using rule 26 (empty -> .)
    FLECHA          reduce using rule 26 (empty -> .)
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    ARRAY           shift and go to state 97
    ID              shift and go to state 175

    valores_array                  shift and go to state 167
    elementos_array                shift and go to state 168
    empty                          shift and go to state 169
    boolean                        shift and go to state 172
    array                          shift and go to state 173
    flecha_array                   shift and go to state 174
    expresionlogica                shift and go to state 73

state 148

    (112) new -> NEW FNOMBRE .

    END             reduce using rule 112 (new -> NEW FNOMBRE .)


state 149

    (149) funcion_corta -> FGETS LPAREN . ID COMA NUMBER RPAREN

    ID              shift and go to state 176


state 150

    (150) estructura_funcion -> funcion_archivo LPAREN . opcion RPAREN
    (151) opcion -> . ID
    (152) opcion -> . TEXT

    ID              shift and go to state 178
    TEXT            shift and go to state 179

    opcion                         shift and go to state 177

state 151

    (43) expif -> funcion_condicion LPAREN comparacion RPAREN . LCORCHET declaracion RCORCHET
    (44) expif -> funcion_condicion LPAREN comparacion RPAREN . LCORCHET

    LCORCHET        shift and go to state 180


state 152

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN . LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN . LCORCHET

    LCORCHET        shift and go to state 181


state 153

    (113) print -> funcion_print LPAREN argument RPAREN . END

    END             shift and go to state 182


state 154

    (34) operacion_matematica -> termino operadores termino .
    (33) operacion_matematica -> termino . operadores operacion_matematica
    (34) operacion_matematica -> termino . operadores termino
    (35) operadores -> . PLUS
    (36) operadores -> . MINUS
    (37) operadores -> . DIVIDE
    (38) operadores -> . TIMES
    (39) operadores -> . MODULO

    END             reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    IS_EQUAL        reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    IS_IDENTICAL    reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    IS_NOT_EQUAL    reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    IS_NOT_IDENTICAL reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    IS_GREATER_OR_EQUAL reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    IS_SMALLER_OR_EQUAL reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    SPACESHIP       reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    MAYORQUE        reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    MENORQUE        reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    COMA            reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    RPAREN          reduce using rule 34 (operacion_matematica -> termino operadores termino .)
    PLUS            shift and go to state 121
    MINUS           shift and go to state 122
    DIVIDE          shift and go to state 123
    TIMES           shift and go to state 124
    MODULO          shift and go to state 125

    operadores                     shift and go to state 120

state 155

    (33) operacion_matematica -> termino operadores operacion_matematica .

    END             reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_EQUAL        reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_IDENTICAL    reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_NOT_EQUAL    reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_NOT_IDENTICAL reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_GREATER_OR_EQUAL reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_SMALLER_OR_EQUAL reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    SPACESHIP       reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    MAYORQUE        reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    MENORQUE        reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    COMA            reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)
    RPAREN          reduce using rule 33 (operacion_matematica -> termino operadores operacion_matematica .)


state 156

    (41) termino -> ID .

    PLUS            reduce using rule 41 (termino -> ID .)
    MINUS           reduce using rule 41 (termino -> ID .)
    DIVIDE          reduce using rule 41 (termino -> ID .)
    TIMES           reduce using rule 41 (termino -> ID .)
    MODULO          reduce using rule 41 (termino -> ID .)
    END             reduce using rule 41 (termino -> ID .)
    IS_EQUAL        reduce using rule 41 (termino -> ID .)
    IS_IDENTICAL    reduce using rule 41 (termino -> ID .)
    IS_NOT_EQUAL    reduce using rule 41 (termino -> ID .)
    IS_NOT_IDENTICAL reduce using rule 41 (termino -> ID .)
    IS_GREATER_OR_EQUAL reduce using rule 41 (termino -> ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 41 (termino -> ID .)
    SPACESHIP       reduce using rule 41 (termino -> ID .)
    MAYORQUE        reduce using rule 41 (termino -> ID .)
    MENORQUE        reduce using rule 41 (termino -> ID .)
    COMA            reduce using rule 41 (termino -> ID .)
    RPAREN          reduce using rule 41 (termino -> ID .)


state 157

    (69) comparacion -> valor_comparado operadorcomparacion valor_comparado .

    END             reduce using rule 69 (comparacion -> valor_comparado operadorcomparacion valor_comparado .)
    COMA            reduce using rule 69 (comparacion -> valor_comparado operadorcomparacion valor_comparado .)
    RPAREN          reduce using rule 69 (comparacion -> valor_comparado operadorcomparacion valor_comparado .)


state 158

    (72) valor_comparado -> boolean .

    END             reduce using rule 72 (valor_comparado -> boolean .)
    COMA            reduce using rule 72 (valor_comparado -> boolean .)
    RPAREN          reduce using rule 72 (valor_comparado -> boolean .)


state 159

    (115) print -> ECHO LPAREN valores_echo RPAREN . END

    END             shift and go to state 183


state 160

    (121) valores_echo -> argument COMA valores_echo .

    END             reduce using rule 121 (valores_echo -> argument COMA valores_echo .)
    RPAREN          reduce using rule 121 (valores_echo -> argument COMA valores_echo .)


state 161

    (128) arreglos -> funcion_arreglo LPAREN ID RPAREN .

    CLOSE           reduce using rule 128 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    RCORCHET        reduce using rule 128 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    $end            reduce using rule 128 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    ELSE            reduce using rule 128 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)


state 162

    (59) while -> WHILE LPAREN comparacion RPAREN . LCORCHET control_bucle RCORCHET
    (60) while -> WHILE LPAREN comparacion RPAREN . LCORCHET

    LCORCHET        shift and go to state 184


state 163

    (64) foreach -> FOREACH LPAREN ID AS . ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> FOREACH LPAREN ID AS . ID RPAREN LCORCHET

    ID              shift and go to state 185


state 164

    (162) clase -> CLASS FNOMBRE LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 186
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 165

    (48) expelse -> expif ELSE LCORCHET declaracion RCORCHET .
    (45) expif -> declaracion RCORCHET .
    (52) expelse -> declaracion RCORCHET .
    (23) creacionfunciones -> declaracion RCORCHET .
    (164) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    CLOSE           reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    RCORCHET        reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    $end            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    ELSE            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)

  ! CLOSE           [ reduce using rule 48 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 48 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 48 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 48 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]


state 166

    (100) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN . argumentos RPAREN END
    (27) argumentos -> . ID
    (28) argumentos -> . empty
    (26) empty -> .

    ID              shift and go to state 187
    RPAREN          reduce using rule 26 (empty -> .)

    argumentos                     shift and go to state 188
    empty                          shift and go to state 189

state 167

    (101) array -> ARRAY LPAREN valores_array . RPAREN

    RPAREN          shift and go to state 190


state 168

    (102) valores_array -> elementos_array . COMA valores_array
    (103) valores_array -> elementos_array .
    (105) flecha_array -> elementos_array . FLECHA elementos_array

    COMA            shift and go to state 191
    RPAREN          reduce using rule 103 (valores_array -> elementos_array .)
    FLECHA          shift and go to state 192


state 169

    (104) valores_array -> empty .
    (108) elementos_array -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 104 (valores_array -> empty .)
    RPAREN          reduce using rule 104 (valores_array -> empty .)
    COMA            reduce using rule 108 (elementos_array -> empty .)
    FLECHA          reduce using rule 108 (elementos_array -> empty .)

  ! RPAREN          [ reduce using rule 108 (elementos_array -> empty .) ]


state 170

    (106) elementos_array -> NUMBER .

    COMA            reduce using rule 106 (elementos_array -> NUMBER .)
    FLECHA          reduce using rule 106 (elementos_array -> NUMBER .)
    RPAREN          reduce using rule 106 (elementos_array -> NUMBER .)


state 171

    (107) elementos_array -> TEXT .

    COMA            reduce using rule 107 (elementos_array -> TEXT .)
    FLECHA          reduce using rule 107 (elementos_array -> TEXT .)
    RPAREN          reduce using rule 107 (elementos_array -> TEXT .)


state 172

    (109) elementos_array -> boolean .

    COMA            reduce using rule 109 (elementos_array -> boolean .)
    FLECHA          reduce using rule 109 (elementos_array -> boolean .)
    RPAREN          reduce using rule 109 (elementos_array -> boolean .)


state 173

    (110) elementos_array -> array .

    COMA            reduce using rule 110 (elementos_array -> array .)
    FLECHA          reduce using rule 110 (elementos_array -> array .)
    RPAREN          reduce using rule 110 (elementos_array -> array .)


state 174

    (111) elementos_array -> flecha_array .

    COMA            reduce using rule 111 (elementos_array -> flecha_array .)
    FLECHA          reduce using rule 111 (elementos_array -> flecha_array .)
    RPAREN          reduce using rule 111 (elementos_array -> flecha_array .)


state 175

    (84) expresionlogica -> ID . operadorlogico ID
    (85) operadorlogico -> . AND
    (86) operadorlogico -> . OR
    (87) operadorlogico -> . XOR
    (88) operadorlogico -> . NOT

    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 176

    (149) funcion_corta -> FGETS LPAREN ID . COMA NUMBER RPAREN

    COMA            shift and go to state 193


state 177

    (150) estructura_funcion -> funcion_archivo LPAREN opcion . RPAREN

    RPAREN          shift and go to state 194


state 178

    (151) opcion -> ID .

    RPAREN          reduce using rule 151 (opcion -> ID .)


state 179

    (152) opcion -> TEXT .

    RPAREN          reduce using rule 152 (opcion -> TEXT .)


state 180

    (43) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET . declaracion RCORCHET
    (44) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 26 (empty -> .)
    CLOSE           reduce using rule 44 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .)
    $end            reduce using rule 44 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 44 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .) ]
  ! ELSE            [ reduce using rule 44 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]

    funcion_condicion              shift and go to state 19
    declaracion                    shift and go to state 195
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 181

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET . declaracion RCORCHET
    (22) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 22 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET .)
    CLOSE           reduce using rule 22 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET .)
    $end            reduce using rule 22 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET .)
    ELSE            reduce using rule 22 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 22 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]
  ! ELSE            [ reduce using rule 26 (empty -> .) ]

    declaracion                    shift and go to state 196
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 182

    (113) print -> funcion_print LPAREN argument RPAREN END .

    CLOSE           reduce using rule 113 (print -> funcion_print LPAREN argument RPAREN END .)
    RCORCHET        reduce using rule 113 (print -> funcion_print LPAREN argument RPAREN END .)
    $end            reduce using rule 113 (print -> funcion_print LPAREN argument RPAREN END .)
    ELSE            reduce using rule 113 (print -> funcion_print LPAREN argument RPAREN END .)


state 183

    (115) print -> ECHO LPAREN valores_echo RPAREN END .

    CLOSE           reduce using rule 115 (print -> ECHO LPAREN valores_echo RPAREN END .)
    RCORCHET        reduce using rule 115 (print -> ECHO LPAREN valores_echo RPAREN END .)
    $end            reduce using rule 115 (print -> ECHO LPAREN valores_echo RPAREN END .)
    ELSE            reduce using rule 115 (print -> ECHO LPAREN valores_echo RPAREN END .)


state 184

    (59) while -> WHILE LPAREN comparacion RPAREN LCORCHET . control_bucle RCORCHET
    (60) while -> WHILE LPAREN comparacion RPAREN LCORCHET .
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 26 (empty -> .)
    CLOSE           reduce using rule 60 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .)
    $end            reduce using rule 60 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .)
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39

  ! RCORCHET        [ reduce using rule 60 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .) ]
  ! ELSE            [ reduce using rule 60 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]

    control_bucle                  shift and go to state 197
    declaracion                    shift and go to state 198
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26

state 185

    (64) foreach -> FOREACH LPAREN ID AS ID . RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> FOREACH LPAREN ID AS ID . RPAREN LCORCHET

    RPAREN          shift and go to state 199


state 186

    (162) clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .
    (45) expif -> declaracion RCORCHET .
    (52) expelse -> declaracion RCORCHET .
    (23) creacionfunciones -> declaracion RCORCHET .
    (164) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    CLOSE           reduce using rule 162 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 162 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    ELSE            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 162 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 162 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]


state 187

    (27) argumentos -> ID .

    RPAREN          reduce using rule 27 (argumentos -> ID .)


state 188

    (100) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos . RPAREN END

    RPAREN          shift and go to state 200


state 189

    (28) argumentos -> empty .

    RPAREN          reduce using rule 28 (argumentos -> empty .)


state 190

    (101) array -> ARRAY LPAREN valores_array RPAREN .

    END             reduce using rule 101 (array -> ARRAY LPAREN valores_array RPAREN .)
    COMA            reduce using rule 101 (array -> ARRAY LPAREN valores_array RPAREN .)
    FLECHA          reduce using rule 101 (array -> ARRAY LPAREN valores_array RPAREN .)
    RPAREN          reduce using rule 101 (array -> ARRAY LPAREN valores_array RPAREN .)


state 191

    (102) valores_array -> elementos_array COMA . valores_array
    (102) valores_array -> . elementos_array COMA valores_array
    (103) valores_array -> . elementos_array
    (104) valores_array -> . empty
    (106) elementos_array -> . NUMBER
    (107) elementos_array -> . TEXT
    (108) elementos_array -> . empty
    (109) elementos_array -> . boolean
    (110) elementos_array -> . array
    (111) elementos_array -> . flecha_array
    (26) empty -> .
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (101) array -> . ARRAY LPAREN valores_array RPAREN
    (105) flecha_array -> . elementos_array FLECHA elementos_array
    (84) expresionlogica -> . ID operadorlogico ID

    NUMBER          shift and go to state 170
    TEXT            shift and go to state 171
    RPAREN          reduce using rule 26 (empty -> .)
    COMA            reduce using rule 26 (empty -> .)
    FLECHA          reduce using rule 26 (empty -> .)
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    ARRAY           shift and go to state 97
    ID              shift and go to state 175

    elementos_array                shift and go to state 168
    valores_array                  shift and go to state 201
    empty                          shift and go to state 169
    boolean                        shift and go to state 172
    array                          shift and go to state 173
    flecha_array                   shift and go to state 174
    expresionlogica                shift and go to state 73

state 192

    (105) flecha_array -> elementos_array FLECHA . elementos_array
    (106) elementos_array -> . NUMBER
    (107) elementos_array -> . TEXT
    (108) elementos_array -> . empty
    (109) elementos_array -> . boolean
    (110) elementos_array -> . array
    (111) elementos_array -> . flecha_array
    (26) empty -> .
    (97) boolean -> . TRUE
    (98) boolean -> . FALSE
    (99) boolean -> . expresionlogica
    (101) array -> . ARRAY LPAREN valores_array RPAREN
    (105) flecha_array -> . elementos_array FLECHA elementos_array
    (84) expresionlogica -> . ID operadorlogico ID

    NUMBER          shift and go to state 170
    TEXT            shift and go to state 171
    FLECHA          reduce using rule 26 (empty -> .)
    COMA            reduce using rule 26 (empty -> .)
    RPAREN          reduce using rule 26 (empty -> .)
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72
    ARRAY           shift and go to state 97
    ID              shift and go to state 175

    elementos_array                shift and go to state 202
    empty                          shift and go to state 203
    boolean                        shift and go to state 172
    array                          shift and go to state 173
    flecha_array                   shift and go to state 174
    expresionlogica                shift and go to state 73

state 193

    (149) funcion_corta -> FGETS LPAREN ID COMA . NUMBER RPAREN

    NUMBER          shift and go to state 204


state 194

    (150) estructura_funcion -> funcion_archivo LPAREN opcion RPAREN .

    END             reduce using rule 150 (estructura_funcion -> funcion_archivo LPAREN opcion RPAREN .)


state 195

    (43) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 205
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 196

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 206
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 197

    (59) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle . RCORCHET
    (61) while -> control_bucle . RCORCHET
    (62) while -> control_bucle .
    (66) foreach -> control_bucle . RCORCHET
    (67) foreach -> control_bucle .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 62 (while -> control_bucle .)
    RCORCHET        shift and go to state 207
    ELSE            reduce using rule 62 (while -> control_bucle .)

  ! RCORCHET        [ reduce using rule 62 (while -> control_bucle .) ]
  ! RCORCHET        [ reduce using rule 67 (foreach -> control_bucle .) ]
  ! ELSE            [ reduce using rule 67 (foreach -> control_bucle .) ]


state 198

    (56) control_bucle -> declaracion .
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .

  ! reduce/reduce conflict for RCORCHET resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 44

  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]


state 199

    (64) foreach -> FOREACH LPAREN ID AS ID RPAREN . LCORCHET declaracion RCORCHET
    (65) foreach -> FOREACH LPAREN ID AS ID RPAREN . LCORCHET

    LCORCHET        shift and go to state 208


state 200

    (100) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN . END

    END             shift and go to state 209


state 201

    (102) valores_array -> elementos_array COMA valores_array .

    RPAREN          reduce using rule 102 (valores_array -> elementos_array COMA valores_array .)


state 202

    (105) flecha_array -> elementos_array FLECHA elementos_array .
    (105) flecha_array -> elementos_array . FLECHA elementos_array

  ! shift/reduce conflict for FLECHA resolved as shift
    COMA            reduce using rule 105 (flecha_array -> elementos_array FLECHA elementos_array .)
    RPAREN          reduce using rule 105 (flecha_array -> elementos_array FLECHA elementos_array .)
    FLECHA          shift and go to state 192

  ! FLECHA          [ reduce using rule 105 (flecha_array -> elementos_array FLECHA elementos_array .) ]


state 203

    (108) elementos_array -> empty .

    FLECHA          reduce using rule 108 (elementos_array -> empty .)
    COMA            reduce using rule 108 (elementos_array -> empty .)
    RPAREN          reduce using rule 108 (elementos_array -> empty .)


state 204

    (149) funcion_corta -> FGETS LPAREN ID COMA NUMBER . RPAREN

    RPAREN          shift and go to state 210


state 205

    (43) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .
    (45) expif -> declaracion RCORCHET .
    (52) expelse -> declaracion RCORCHET .
    (23) creacionfunciones -> declaracion RCORCHET .
    (164) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    CLOSE           reduce using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    ELSE            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 43 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]


state 206

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .
    (45) expif -> declaracion RCORCHET .
    (52) expelse -> declaracion RCORCHET .
    (23) creacionfunciones -> declaracion RCORCHET .
    (164) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    CLOSE           reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    ELSE            reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]


state 207

    (59) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .
    (61) while -> control_bucle RCORCHET .
    (66) foreach -> control_bucle RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    CLOSE           reduce using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    RCORCHET        reduce using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    $end            reduce using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    ELSE            reduce using rule 59 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)

  ! RCORCHET        [ reduce using rule 61 (while -> control_bucle RCORCHET .) ]
  ! ELSE            [ reduce using rule 61 (while -> control_bucle RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 66 (foreach -> control_bucle RCORCHET .) ]
  ! ELSE            [ reduce using rule 66 (foreach -> control_bucle RCORCHET .) ]


state 208

    (64) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET . declaracion RCORCHET
    (65) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (32) expression -> . ID EQUALS operacion_matematica END
    (43) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (44) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (45) expif -> . declaracion RCORCHET
    (46) expif -> . declaracion
    (47) expif -> . RCORCHET
    (48) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (49) expelse -> . expif ELSE LCORCHET declaracion
    (50) expelse -> . expif ELSE LCORCHET
    (51) expelse -> . declaracion
    (52) expelse -> . declaracion RCORCHET
    (53) expelse -> . RCORCHET
    (84) expresionlogica -> . ID operadorlogico ID
    (89) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (22) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET
    (23) creacionfunciones -> . declaracion RCORCHET
    (24) creacionfunciones -> . declaracion
    (25) creacionfunciones -> . RCORCHET
    (29) returnvalores -> . RETURN termino END
    (30) returnvalores -> . RETURN creacionfunciones
    (31) returnvalores -> . empty
    (100) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (113) print -> . funcion_print LPAREN argument RPAREN END
    (114) print -> . funcion_print argument END
    (115) print -> . ECHO LPAREN valores_echo RPAREN END
    (116) print -> . ECHO valores_echo END
    (128) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (59) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (60) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (61) while -> . control_bucle RCORCHET
    (62) while -> . control_bucle
    (63) while -> . RCORCHET
    (64) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (65) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (66) foreach -> . control_bucle RCORCHET
    (67) foreach -> . control_bucle
    (68) foreach -> . RCORCHET
    (162) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (163) clase -> . CLASS FNOMBRE LCORCHET
    (164) clase -> . declaracion RCORCHET
    (165) clase -> . declaracion
    (166) clase -> . RCORCHET
    (54) funcion_condicion -> . IF
    (55) funcion_condicion -> . ELSEIF
    (26) empty -> .
    (123) funcion_print -> . VAR_EXPORT
    (124) funcion_print -> . ECHO
    (125) funcion_print -> . PRINT
    (126) funcion_print -> . PRINT_R
    (127) funcion_print -> . VAR_DUMP
    (144) funcion_arreglo -> . SUFFLE
    (145) funcion_arreglo -> . ARRAY_UNIQUE
    (146) funcion_arreglo -> . SIZEOF
    (56) control_bucle -> . declaracion
    (57) control_bucle -> . BREAK
    (58) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 26 (empty -> .)
    CLOSE           reduce using rule 65 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .)
    $end            reduce using rule 65 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 26 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 65 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .) ]
  ! ELSE            [ reduce using rule 65 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 26 (empty -> .) ]

    declaracion                    shift and go to state 211
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 209

    (100) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .

    CLOSE           reduce using rule 100 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    RCORCHET        reduce using rule 100 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    $end            reduce using rule 100 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    ELSE            reduce using rule 100 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)


state 210

    (149) funcion_corta -> FGETS LPAREN ID COMA NUMBER RPAREN .

    END             reduce using rule 149 (funcion_corta -> FGETS LPAREN ID COMA NUMBER RPAREN .)


state 211

    (64) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (45) expif -> declaracion . RCORCHET
    (46) expif -> declaracion .
    (51) expelse -> declaracion .
    (52) expelse -> declaracion . RCORCHET
    (23) creacionfunciones -> declaracion . RCORCHET
    (24) creacionfunciones -> declaracion .
    (164) clase -> declaracion . RCORCHET
    (165) clase -> declaracion .
    (56) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 212
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 46 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 46 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 51 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 51 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! ELSE            [ reduce using rule 24 (creacionfunciones -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 165 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 165 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 56 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 56 (control_bucle -> declaracion .) ]


state 212

    (64) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .
    (45) expif -> declaracion RCORCHET .
    (52) expelse -> declaracion RCORCHET .
    (23) creacionfunciones -> declaracion RCORCHET .
    (164) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    CLOSE           reduce using rule 64 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 64 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)
    ELSE            reduce using rule 23 (creacionfunciones -> declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 64 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 64 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 45 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 52 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 164 (clase -> declaracion RCORCHET .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSE in state 0 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 0 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 2 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 6 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 22 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 25 resolved as shift
WARNING: shift/reduce conflict for ID in state 25 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 25 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 25 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 25 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 25 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 25 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 28 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 28 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 59 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 59 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 59 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 59 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 59 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 59 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 83 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 83 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 142 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 142 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 143 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 143 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 143 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 143 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 143 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 143 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 143 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 164 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 164 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 164 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 164 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 164 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 164 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 180 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 180 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 181 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 181 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 184 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 184 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 195 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 195 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 195 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 195 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 195 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 195 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 197 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 197 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 198 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 198 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 198 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 198 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 198 resolved as shift
WARNING: shift/reduce conflict for FLECHA in state 202 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 208 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 208 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 211 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 211 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 211 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 211 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 211 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 211 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (programa -> OPEN)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (declaracion -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 20 resolved using rule (expif -> RCORCHET)
WARNING: rejected rule (expelse -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (expif -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (while -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (foreach -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (clase -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 28 resolved using rule (while -> control_bucle)
WARNING: rejected rule (foreach -> control_bucle) in state 28
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (declaracion -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (expif -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (clase -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 44 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 44
WARNING: reduce/reduce conflict in state 44 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 44
WARNING: reduce/reduce conflict in state 44 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 44
WARNING: reduce/reduce conflict in state 55 resolved using rule (declaracion -> creacionfunciones)
WARNING: rejected rule (returnvalores -> RETURN creacionfunciones) in state 55
WARNING: reduce/reduce conflict in state 59 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 59
WARNING: reduce/reduce conflict in state 59 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 59
WARNING: reduce/reduce conflict in state 59 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 59
WARNING: reduce/reduce conflict in state 59 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 59
WARNING: reduce/reduce conflict in state 59 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 59
WARNING: reduce/reduce conflict in state 60 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (expif -> RCORCHET) in state 60
WARNING: reduce/reduce conflict in state 60 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (expelse -> RCORCHET) in state 60
WARNING: reduce/reduce conflict in state 60 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (while -> RCORCHET) in state 60
WARNING: reduce/reduce conflict in state 60 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (foreach -> RCORCHET) in state 60
WARNING: reduce/reduce conflict in state 60 resolved using rule (creacionfunciones -> RCORCHET)
WARNING: rejected rule (clase -> RCORCHET) in state 60
WARNING: reduce/reduce conflict in state 79 resolved using rule (while -> control_bucle RCORCHET)
WARNING: rejected rule (foreach -> control_bucle RCORCHET) in state 79
WARNING: reduce/reduce conflict in state 83 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expelse -> expif ELSE LCORCHET) in state 83
WARNING: reduce/reduce conflict in state 117 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 117
WARNING: reduce/reduce conflict in state 117 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 117
WARNING: reduce/reduce conflict in state 142 resolved using rule (empty -> <empty>)
WARNING: rejected rule (clase -> CLASS FNOMBRE LCORCHET) in state 142
WARNING: reduce/reduce conflict in state 143 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> expif ELSE LCORCHET declaracion) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 143
WARNING: reduce/reduce conflict in state 164 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 164
WARNING: reduce/reduce conflict in state 164 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 164
WARNING: reduce/reduce conflict in state 164 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 164
WARNING: reduce/reduce conflict in state 164 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 164
WARNING: reduce/reduce conflict in state 164 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 164
WARNING: reduce/reduce conflict in state 165 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> expif ELSE LCORCHET declaracion RCORCHET) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 165
WARNING: reduce/reduce conflict in state 169 resolved using rule (valores_array -> empty)
WARNING: rejected rule (elementos_array -> empty) in state 169
WARNING: reduce/reduce conflict in state 180 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET) in state 180
WARNING: reduce/reduce conflict in state 181 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET)
WARNING: rejected rule (empty -> <empty>) in state 181
WARNING: reduce/reduce conflict in state 184 resolved using rule (empty -> <empty>)
WARNING: rejected rule (while -> WHILE LPAREN comparacion RPAREN LCORCHET) in state 184
WARNING: reduce/reduce conflict in state 186 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET) in state 186
WARNING: reduce/reduce conflict in state 186 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 186
WARNING: reduce/reduce conflict in state 186 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 186
WARNING: reduce/reduce conflict in state 186 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 186
WARNING: reduce/reduce conflict in state 195 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 195
WARNING: reduce/reduce conflict in state 196 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 196
WARNING: reduce/reduce conflict in state 197 resolved using rule (while -> control_bucle)
WARNING: rejected rule (foreach -> control_bucle) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 198
WARNING: reduce/reduce conflict in state 205 resolved using rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 205
WARNING: reduce/reduce conflict in state 205 resolved using rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 205
WARNING: reduce/reduce conflict in state 205 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET) in state 205
WARNING: reduce/reduce conflict in state 205 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 205
WARNING: reduce/reduce conflict in state 206 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (creacionfunciones -> declaracion RCORCHET) in state 206
WARNING: reduce/reduce conflict in state 206 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 206
WARNING: reduce/reduce conflict in state 207 resolved using rule (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET)
WARNING: rejected rule (while -> control_bucle RCORCHET) in state 207
WARNING: reduce/reduce conflict in state 207 resolved using rule (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET)
WARNING: rejected rule (foreach -> control_bucle RCORCHET) in state 207
WARNING: reduce/reduce conflict in state 208 resolved using rule (empty -> <empty>)
WARNING: rejected rule (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET) in state 208
WARNING: reduce/reduce conflict in state 211 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (creacionfunciones -> declaracion) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 211
WARNING: reduce/reduce conflict in state 211 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 211
WARNING: reduce/reduce conflict in state 212 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 212
WARNING: reduce/reduce conflict in state 212 resolved using rule (creacionfunciones -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 212
WARNING: Rule (expif -> declaracion) is never reduced
WARNING: Rule (expelse -> declaracion) is never reduced
WARNING: Rule (creacionfunciones -> declaracion) is never reduced
WARNING: Rule (clase -> declaracion) is never reduced
WARNING: Rule (control_bucle -> declaracion) is never reduced
WARNING: Rule (expelse -> RCORCHET) is never reduced
WARNING: Rule (expif -> RCORCHET) is never reduced
WARNING: Rule (while -> RCORCHET) is never reduced
WARNING: Rule (foreach -> RCORCHET) is never reduced
WARNING: Rule (clase -> RCORCHET) is never reduced
WARNING: Rule (foreach -> control_bucle) is never reduced
WARNING: Rule (expelse -> declaracion RCORCHET) is never reduced
WARNING: Rule (expif -> declaracion RCORCHET) is never reduced
WARNING: Rule (clase -> declaracion RCORCHET) is never reduced
WARNING: Rule (returnvalores -> RETURN creacionfunciones) is never reduced
WARNING: Rule (foreach -> control_bucle RCORCHET) is never reduced
WARNING: Rule (expelse -> expif ELSE LCORCHET) is never reduced
WARNING: Rule (expelse -> expif ELSE LCORCHET declaracion) is never reduced
WARNING: Rule (expelse -> expif ELSE LCORCHET declaracion RCORCHET) is never reduced

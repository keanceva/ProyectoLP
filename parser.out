Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> OPEN declaracion CLOSE
Rule 2     programa -> OPEN declaracion
Rule 3     programa -> declaracion CLOSE
Rule 4     programa -> declaracion
Rule 5     programa -> CLOSE
Rule 6     programa -> OPEN
Rule 7     declaracion -> expression
Rule 8     declaracion -> expif
Rule 9     declaracion -> expelse
Rule 10    declaracion -> expresionlogica
Rule 11    declaracion -> declararvariable
Rule 12    declaracion -> creacionfunciones
Rule 13    declaracion -> returnvalores
Rule 14    declaracion -> operador_object
Rule 15    declaracion -> print
Rule 16    declaracion -> arreglos
Rule 17    declaracion -> while
Rule 18    declaracion -> foreach
Rule 19    declaracion -> clase
Rule 20    declaracion -> declaracion
Rule 21    creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
Rule 22    empty -> <empty>
Rule 23    argumentos -> ID
Rule 24    argumentos -> empty
Rule 25    returnvalores -> RETURN termino END
Rule 26    returnvalores -> RETURN creacionfunciones
Rule 27    returnvalores -> empty
Rule 28    expression -> ID EQUALS operacion_matematica END
Rule 29    operacion_matematica -> termino operadores operacion_matematica
Rule 30    operacion_matematica -> termino operadores termino
Rule 31    operadores -> PLUS
Rule 32    operadores -> MINUS
Rule 33    operadores -> DIVIDE
Rule 34    operadores -> TIMES
Rule 35    operadores -> MODULO
Rule 36    termino -> NUMBER
Rule 37    termino -> ID
Rule 38    termino -> DECIMAL
Rule 39    expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
Rule 40    expelse -> expif ELSE LCORCHET declaracion RCORCHET
Rule 41    funcion_condicion -> IF
Rule 42    funcion_condicion -> ELSEIF
Rule 43    control_bucle -> BREAK
Rule 44    control_bucle -> CONTINUE
Rule 45    control_bucle -> declaracion
Rule 46    while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
Rule 47    foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
Rule 48    comparacion -> termino operadorcomparacion termino
Rule 49    operadorcomparacion -> IS_EQUAL
Rule 50    operadorcomparacion -> IS_IDENTICAL
Rule 51    operadorcomparacion -> IS_NOT_EQUAL
Rule 52    operadorcomparacion -> IS_NOT_IDENTICAL
Rule 53    operadorcomparacion -> IS_GREATER_OR_EQUAL
Rule 54    operadorcomparacion -> IS_SMALLER_OR_EQUAL
Rule 55    operadorcomparacion -> SPACESHIP
Rule 56    operadorcomparacion -> MAYORQUE
Rule 57    operadorcomparacion -> MENORQUE
Rule 58    expresionlogica -> ID operadorlogico ID
Rule 59    operadorlogico -> AND
Rule 60    operadorlogico -> OR
Rule 61    operadorlogico -> XOR
Rule 62    operadorlogico -> NOT
Rule 63    declararvariable -> ID EQUALS tipo END
Rule 64    tipo -> boolean
Rule 65    tipo -> NUMBER
Rule 66    tipo -> TEXT
Rule 67    tipo -> NULL
Rule 68    tipo -> archivos
Rule 69    tipo -> array
Rule 70    tipo -> new
Rule 71    boolean -> TRUE
Rule 72    boolean -> FALSE
Rule 73    operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
Rule 74    array -> ARRAY LPAREN valores_array RPAREN
Rule 75    valores_array -> elementos_array COMA valores_array
Rule 76    valores_array -> elementos_array
Rule 77    valores_array -> empty
Rule 78    elementos_array -> NUMBER
Rule 79    elementos_array -> TEXT
Rule 80    elementos_array -> empty
Rule 81    elementos_array -> boolean
Rule 82    elementos_array -> array
Rule 83    new -> NEW FNOMBRE
Rule 84    print -> funcion_print LPAREN argument RPAREN END
Rule 85    print -> funcion_print argument END
Rule 86    print -> ECHO LPAREN valores_echo RPAREN END
Rule 87    print -> ECHO valores_echo END
Rule 88    argument -> ID
Rule 89    argument -> TEXT
Rule 90    valores_echo -> argument COMA valores_echo
Rule 91    valores_echo -> argument
Rule 92    funcion_print -> VAR_EXPORT
Rule 93    funcion_print -> ECHO
Rule 94    funcion_print -> PRINT
Rule 95    funcion_print -> PRINT_R
Rule 96    funcion_print -> VAR_DUMP
Rule 97    arreglos -> funcion_arreglo LPAREN ID RPAREN
Rule 98    funcion_arreglo -> SUFFLE
Rule 99    funcion_arreglo -> ARRAY_MERGE
Rule 100   funcion_arreglo -> ARRAY_SEARCH
Rule 101   funcion_arreglo -> ARRAY_RAND
Rule 102   funcion_arreglo -> ARRAY_CHUNK
Rule 103   funcion_arreglo -> STR_SPLIT
Rule 104   funcion_arreglo -> PREG_SPLIT
Rule 105   funcion_arreglo -> ARRAY_UNIQUE
Rule 106   funcion_arreglo -> COUNT
Rule 107   funcion_arreglo -> SIZEOF
Rule 108   funcion_arreglo -> ARRAY_PUSH
Rule 109   funcion_arreglo -> SORT
Rule 110   funcion_arreglo -> ASORT
Rule 111   funcion_arreglo -> KSORT
Rule 112   funcion_arreglo -> UNSET
Rule 113   funcion_arreglo -> IMPLODE
Rule 114   funcion_arreglo -> EXPLODE
Rule 115   archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN
Rule 116   funcion_archivo -> FGETS
Rule 117   funcion_archivo -> FREAD
Rule 118   funcion_archivo -> FSCANF
Rule 119   funcion_archivo -> FPASSTHRU
Rule 120   funcion_archivo -> FGETCSV
Rule 121   funcion_archivo -> FGETC
Rule 122   funcion_archivo -> FILE_GET_CONTENTS
Rule 123   funcion_archivo -> READFILE
Rule 124   funcion_archivo -> FILE
Rule 125   funcion_archivo -> PARSE_INI_FILE
Rule 126   clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET

Terminals, with rules where they appear

AND                  : 59
ARRAY                : 74
ARRAY_CHUNK          : 102
ARRAY_MERGE          : 99
ARRAY_PUSH           : 108
ARRAY_RAND           : 101
ARRAY_SEARCH         : 100
ARRAY_UNIQUE         : 105
AS                   : 47
ASORT                : 110
BREAK                : 43
CLASS                : 126
CLOSE                : 1 3 5
COMA                 : 75 90 115
CONTINUE             : 44
COUNT                : 106
DECIMAL              : 38
DIVIDE               : 33
ECHO                 : 86 87 93
ELSE                 : 40
ELSEIF               : 42
END                  : 25 28 63 73 84 85 86 87
EQUALS               : 28 63 73
EXPLODE              : 114
FALSE                : 72
FGETC                : 121
FGETCSV              : 120
FGETS                : 116
FILE                 : 124
FILE_GET_CONTENTS    : 122
FNOMBRE              : 21 73 83 126
FOREACH              : 47
FPASSTHRU            : 119
FREAD                : 117
FSCANF               : 118
FUNCTION             : 21
ID                   : 23 28 37 47 47 58 58 63 73 88 97
IF                   : 41
IMPLODE              : 113
IS_EQUAL             : 49
IS_GREATER_OR_EQUAL  : 53
IS_IDENTICAL         : 50
IS_NOT_EQUAL         : 51
IS_NOT_IDENTICAL     : 52
IS_SMALLER_OR_EQUAL  : 54
KSORT                : 111
LCORCHET             : 21 39 40 46 47 126
LPAREN               : 21 39 46 47 73 74 84 86 97 115
MAYORQUE             : 56
MENORQUE             : 57
MINUS                : 32
MODULO               : 35
NEW                  : 83
NOT                  : 62
NULL                 : 67
NUMBER               : 36 65 78
OBJECT_OPERATOR      : 73
OPEN                 : 1 2 6
OR                   : 60
PARSE_INI_FILE       : 125
PLUS                 : 31
PREG_SPLIT           : 104
PRINT                : 94
PRINT_R              : 95
RCORCHET             : 21 39 40 46 47 126
READFILE             : 123
RETURN               : 25 26
RPAREN               : 21 39 46 47 73 74 84 86 97 115
SIZEOF               : 107
SORT                 : 109
SPACESHIP            : 55
STR_SPLIT            : 103
SUFFLE               : 98
TEXT                 : 66 79 89 115 115
TIMES                : 34
TRUE                 : 71
UNSET                : 112
VAR_DUMP             : 96
VAR_EXPORT           : 92
WHILE                : 46
XOR                  : 61
error                : 

Nonterminals, with rules where they appear

archivos             : 68
argument             : 84 85 90 91
argumentos           : 73
array                : 69 82
arreglos             : 16
boolean              : 64 81
clase                : 19
comparacion          : 39 46
control_bucle        : 46 47
creacionfunciones    : 12 26
declaracion          : 1 2 3 4 20 21 39 40 45 126
declararvariable     : 11
elementos_array      : 75 76
empty                : 24 27 77 80
expelse              : 9
expif                : 8 40
expresionlogica      : 10
expression           : 7
foreach              : 18
funcion_archivo      : 115
funcion_arreglo      : 97
funcion_condicion    : 39
funcion_print        : 84 85
new                  : 70
operacion_matematica : 28 29
operador_object      : 14
operadorcomparacion  : 48
operadores           : 29 30
operadorlogico       : 58
print                : 15
programa             : 0
returnvalores        : 13
termino              : 25 29 30 30 48 48
tipo                 : 63
valores_array        : 74 75
valores_echo         : 86 87 90
while                : 17

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . OPEN declaracion CLOSE
    (2) programa -> . OPEN declaracion
    (3) programa -> . declaracion CLOSE
    (4) programa -> . declaracion
    (5) programa -> . CLOSE
    (6) programa -> . OPEN
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

  ! shift/reduce conflict for CLOSE resolved as shift
    OPEN            shift and go to state 2
    CLOSE           shift and go to state 4
    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    $end            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

  ! CLOSE           [ reduce using rule 22 (empty -> .) ]

    programa                       shift and go to state 1
    declaracion                    shift and go to state 3
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 1

    (0) S' -> programa .



state 2

    (1) programa -> OPEN . declaracion CLOSE
    (2) programa -> OPEN . declaracion
    (6) programa -> OPEN .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

  ! reduce/reduce conflict for $end resolved using rule 6 (programa -> OPEN .)
    $end            reduce using rule 6 (programa -> OPEN .)
    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    CLOSE           reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

  ! $end            [ reduce using rule 22 (empty -> .) ]

    declaracion                    shift and go to state 52
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 3

    (3) programa -> declaracion . CLOSE
    (4) programa -> declaracion .
    (20) declaracion -> declaracion .

  ! shift/reduce conflict for CLOSE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
    CLOSE           shift and go to state 53
    $end            reduce using rule 4 (programa -> declaracion .)

  ! CLOSE           [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! $end            [ reduce using rule 20 (declaracion -> declaracion .) ]


state 4

    (5) programa -> CLOSE .

    $end            reduce using rule 5 (programa -> CLOSE .)


state 5

    (7) declaracion -> expression .

    CLOSE           reduce using rule 7 (declaracion -> expression .)
    $end            reduce using rule 7 (declaracion -> expression .)
    RCORCHET        reduce using rule 7 (declaracion -> expression .)


state 6

    (8) declaracion -> expif .
    (40) expelse -> expif . ELSE LCORCHET declaracion RCORCHET

    CLOSE           reduce using rule 8 (declaracion -> expif .)
    $end            reduce using rule 8 (declaracion -> expif .)
    RCORCHET        reduce using rule 8 (declaracion -> expif .)
    ELSE            shift and go to state 54


state 7

    (9) declaracion -> expelse .

    CLOSE           reduce using rule 9 (declaracion -> expelse .)
    $end            reduce using rule 9 (declaracion -> expelse .)
    RCORCHET        reduce using rule 9 (declaracion -> expelse .)


state 8

    (10) declaracion -> expresionlogica .

    CLOSE           reduce using rule 10 (declaracion -> expresionlogica .)
    $end            reduce using rule 10 (declaracion -> expresionlogica .)
    RCORCHET        reduce using rule 10 (declaracion -> expresionlogica .)


state 9

    (11) declaracion -> declararvariable .

    CLOSE           reduce using rule 11 (declaracion -> declararvariable .)
    $end            reduce using rule 11 (declaracion -> declararvariable .)
    RCORCHET        reduce using rule 11 (declaracion -> declararvariable .)


state 10

    (12) declaracion -> creacionfunciones .

    CLOSE           reduce using rule 12 (declaracion -> creacionfunciones .)
    $end            reduce using rule 12 (declaracion -> creacionfunciones .)
    RCORCHET        reduce using rule 12 (declaracion -> creacionfunciones .)


state 11

    (13) declaracion -> returnvalores .

    CLOSE           reduce using rule 13 (declaracion -> returnvalores .)
    $end            reduce using rule 13 (declaracion -> returnvalores .)
    RCORCHET        reduce using rule 13 (declaracion -> returnvalores .)


state 12

    (14) declaracion -> operador_object .

    CLOSE           reduce using rule 14 (declaracion -> operador_object .)
    $end            reduce using rule 14 (declaracion -> operador_object .)
    RCORCHET        reduce using rule 14 (declaracion -> operador_object .)


state 13

    (15) declaracion -> print .

    CLOSE           reduce using rule 15 (declaracion -> print .)
    $end            reduce using rule 15 (declaracion -> print .)
    RCORCHET        reduce using rule 15 (declaracion -> print .)


state 14

    (16) declaracion -> arreglos .

    CLOSE           reduce using rule 16 (declaracion -> arreglos .)
    $end            reduce using rule 16 (declaracion -> arreglos .)
    RCORCHET        reduce using rule 16 (declaracion -> arreglos .)


state 15

    (17) declaracion -> while .

    CLOSE           reduce using rule 17 (declaracion -> while .)
    $end            reduce using rule 17 (declaracion -> while .)
    RCORCHET        reduce using rule 17 (declaracion -> while .)


state 16

    (18) declaracion -> foreach .

    CLOSE           reduce using rule 18 (declaracion -> foreach .)
    $end            reduce using rule 18 (declaracion -> foreach .)
    RCORCHET        reduce using rule 18 (declaracion -> foreach .)


state 17

    (19) declaracion -> clase .

    CLOSE           reduce using rule 19 (declaracion -> clase .)
    $end            reduce using rule 19 (declaracion -> clase .)
    RCORCHET        reduce using rule 19 (declaracion -> clase .)


state 18

    (28) expression -> ID . EQUALS operacion_matematica END
    (58) expresionlogica -> ID . operadorlogico ID
    (63) declararvariable -> ID . EQUALS tipo END
    (73) operador_object -> ID . EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (59) operadorlogico -> . AND
    (60) operadorlogico -> . OR
    (61) operadorlogico -> . XOR
    (62) operadorlogico -> . NOT

    EQUALS          shift and go to state 55
    AND             shift and go to state 57
    OR              shift and go to state 58
    XOR             shift and go to state 59
    NOT             shift and go to state 60

    operadorlogico                 shift and go to state 56

state 19

    (39) expif -> funcion_condicion . LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET

    LPAREN          shift and go to state 61


state 20

    (21) creacionfunciones -> FUNCTION . FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET

    FNOMBRE         shift and go to state 62


state 21

    (25) returnvalores -> RETURN . termino END
    (26) returnvalores -> RETURN . creacionfunciones
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET

    NUMBER          shift and go to state 65
    ID              shift and go to state 66
    DECIMAL         shift and go to state 67
    FUNCTION        shift and go to state 20

    termino                        shift and go to state 63
    creacionfunciones              shift and go to state 64

state 22

    (27) returnvalores -> empty .

    CLOSE           reduce using rule 27 (returnvalores -> empty .)
    $end            reduce using rule 27 (returnvalores -> empty .)
    RCORCHET        reduce using rule 27 (returnvalores -> empty .)


state 23

    (84) print -> funcion_print . LPAREN argument RPAREN END
    (85) print -> funcion_print . argument END
    (88) argument -> . ID
    (89) argument -> . TEXT

    LPAREN          shift and go to state 68
    ID              shift and go to state 70
    TEXT            shift and go to state 71

    argument                       shift and go to state 69

state 24

    (86) print -> ECHO . LPAREN valores_echo RPAREN END
    (87) print -> ECHO . valores_echo END
    (93) funcion_print -> ECHO .
    (90) valores_echo -> . argument COMA valores_echo
    (91) valores_echo -> . argument
    (88) argument -> . ID
    (89) argument -> . TEXT

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
    LPAREN          shift and go to state 72
    ID              shift and go to state 70
    TEXT            shift and go to state 71

  ! LPAREN          [ reduce using rule 93 (funcion_print -> ECHO .) ]
  ! ID              [ reduce using rule 93 (funcion_print -> ECHO .) ]
  ! TEXT            [ reduce using rule 93 (funcion_print -> ECHO .) ]

    valores_echo                   shift and go to state 73
    argument                       shift and go to state 74

state 25

    (97) arreglos -> funcion_arreglo . LPAREN ID RPAREN

    LPAREN          shift and go to state 75


state 26

    (46) while -> WHILE . LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET

    LPAREN          shift and go to state 76


state 27

    (47) foreach -> FOREACH . LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET

    LPAREN          shift and go to state 77


state 28

    (126) clase -> CLASS . FNOMBRE LCORCHET declaracion RCORCHET

    FNOMBRE         shift and go to state 78


state 29

    (41) funcion_condicion -> IF .

    LPAREN          reduce using rule 41 (funcion_condicion -> IF .)


state 30

    (42) funcion_condicion -> ELSEIF .

    LPAREN          reduce using rule 42 (funcion_condicion -> ELSEIF .)


state 31

    (92) funcion_print -> VAR_EXPORT .

    LPAREN          reduce using rule 92 (funcion_print -> VAR_EXPORT .)
    ID              reduce using rule 92 (funcion_print -> VAR_EXPORT .)
    TEXT            reduce using rule 92 (funcion_print -> VAR_EXPORT .)


state 32

    (94) funcion_print -> PRINT .

    LPAREN          reduce using rule 94 (funcion_print -> PRINT .)
    ID              reduce using rule 94 (funcion_print -> PRINT .)
    TEXT            reduce using rule 94 (funcion_print -> PRINT .)


state 33

    (95) funcion_print -> PRINT_R .

    LPAREN          reduce using rule 95 (funcion_print -> PRINT_R .)
    ID              reduce using rule 95 (funcion_print -> PRINT_R .)
    TEXT            reduce using rule 95 (funcion_print -> PRINT_R .)


state 34

    (96) funcion_print -> VAR_DUMP .

    LPAREN          reduce using rule 96 (funcion_print -> VAR_DUMP .)
    ID              reduce using rule 96 (funcion_print -> VAR_DUMP .)
    TEXT            reduce using rule 96 (funcion_print -> VAR_DUMP .)


state 35

    (98) funcion_arreglo -> SUFFLE .

    LPAREN          reduce using rule 98 (funcion_arreglo -> SUFFLE .)


state 36

    (99) funcion_arreglo -> ARRAY_MERGE .

    LPAREN          reduce using rule 99 (funcion_arreglo -> ARRAY_MERGE .)


state 37

    (100) funcion_arreglo -> ARRAY_SEARCH .

    LPAREN          reduce using rule 100 (funcion_arreglo -> ARRAY_SEARCH .)


state 38

    (101) funcion_arreglo -> ARRAY_RAND .

    LPAREN          reduce using rule 101 (funcion_arreglo -> ARRAY_RAND .)


state 39

    (102) funcion_arreglo -> ARRAY_CHUNK .

    LPAREN          reduce using rule 102 (funcion_arreglo -> ARRAY_CHUNK .)


state 40

    (103) funcion_arreglo -> STR_SPLIT .

    LPAREN          reduce using rule 103 (funcion_arreglo -> STR_SPLIT .)


state 41

    (104) funcion_arreglo -> PREG_SPLIT .

    LPAREN          reduce using rule 104 (funcion_arreglo -> PREG_SPLIT .)


state 42

    (105) funcion_arreglo -> ARRAY_UNIQUE .

    LPAREN          reduce using rule 105 (funcion_arreglo -> ARRAY_UNIQUE .)


state 43

    (106) funcion_arreglo -> COUNT .

    LPAREN          reduce using rule 106 (funcion_arreglo -> COUNT .)


state 44

    (107) funcion_arreglo -> SIZEOF .

    LPAREN          reduce using rule 107 (funcion_arreglo -> SIZEOF .)


state 45

    (108) funcion_arreglo -> ARRAY_PUSH .

    LPAREN          reduce using rule 108 (funcion_arreglo -> ARRAY_PUSH .)


state 46

    (109) funcion_arreglo -> SORT .

    LPAREN          reduce using rule 109 (funcion_arreglo -> SORT .)


state 47

    (110) funcion_arreglo -> ASORT .

    LPAREN          reduce using rule 110 (funcion_arreglo -> ASORT .)


state 48

    (111) funcion_arreglo -> KSORT .

    LPAREN          reduce using rule 111 (funcion_arreglo -> KSORT .)


state 49

    (112) funcion_arreglo -> UNSET .

    LPAREN          reduce using rule 112 (funcion_arreglo -> UNSET .)


state 50

    (113) funcion_arreglo -> IMPLODE .

    LPAREN          reduce using rule 113 (funcion_arreglo -> IMPLODE .)


state 51

    (114) funcion_arreglo -> EXPLODE .

    LPAREN          reduce using rule 114 (funcion_arreglo -> EXPLODE .)


state 52

    (1) programa -> OPEN declaracion . CLOSE
    (2) programa -> OPEN declaracion .
    (20) declaracion -> declaracion .

  ! shift/reduce conflict for CLOSE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
    CLOSE           shift and go to state 79
    $end            reduce using rule 2 (programa -> OPEN declaracion .)

  ! CLOSE           [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! $end            [ reduce using rule 20 (declaracion -> declaracion .) ]


state 53

    (3) programa -> declaracion CLOSE .

    $end            reduce using rule 3 (programa -> declaracion CLOSE .)


state 54

    (40) expelse -> expif ELSE . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 80


state 55

    (28) expression -> ID EQUALS . operacion_matematica END
    (63) declararvariable -> ID EQUALS . tipo END
    (73) operador_object -> ID EQUALS . OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (29) operacion_matematica -> . termino operadores operacion_matematica
    (30) operacion_matematica -> . termino operadores termino
    (64) tipo -> . boolean
    (65) tipo -> . NUMBER
    (66) tipo -> . TEXT
    (67) tipo -> . NULL
    (68) tipo -> . archivos
    (69) tipo -> . array
    (70) tipo -> . new
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL
    (71) boolean -> . TRUE
    (72) boolean -> . FALSE
    (115) archivos -> . funcion_archivo LPAREN TEXT COMA TEXT RPAREN
    (74) array -> . ARRAY LPAREN valores_array RPAREN
    (83) new -> . NEW FNOMBRE
    (116) funcion_archivo -> . FGETS
    (117) funcion_archivo -> . FREAD
    (118) funcion_archivo -> . FSCANF
    (119) funcion_archivo -> . FPASSTHRU
    (120) funcion_archivo -> . FGETCSV
    (121) funcion_archivo -> . FGETC
    (122) funcion_archivo -> . FILE_GET_CONTENTS
    (123) funcion_archivo -> . READFILE
    (124) funcion_archivo -> . FILE
    (125) funcion_archivo -> . PARSE_INI_FILE

    OBJECT_OPERATOR shift and go to state 83
    NUMBER          shift and go to state 86
    TEXT            shift and go to state 87
    NULL            shift and go to state 88
    ID              shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    ARRAY           shift and go to state 95
    NEW             shift and go to state 96
    FGETS           shift and go to state 97
    FREAD           shift and go to state 98
    FSCANF          shift and go to state 99
    FPASSTHRU       shift and go to state 100
    FGETCSV         shift and go to state 101
    FGETC           shift and go to state 102
    FILE_GET_CONTENTS shift and go to state 103
    READFILE        shift and go to state 104
    FILE            shift and go to state 105
    PARSE_INI_FILE  shift and go to state 106

    operacion_matematica           shift and go to state 81
    tipo                           shift and go to state 82
    termino                        shift and go to state 84
    boolean                        shift and go to state 85
    archivos                       shift and go to state 89
    array                          shift and go to state 90
    new                            shift and go to state 91
    funcion_archivo                shift and go to state 94

state 56

    (58) expresionlogica -> ID operadorlogico . ID

    ID              shift and go to state 107


state 57

    (59) operadorlogico -> AND .

    ID              reduce using rule 59 (operadorlogico -> AND .)


state 58

    (60) operadorlogico -> OR .

    ID              reduce using rule 60 (operadorlogico -> OR .)


state 59

    (61) operadorlogico -> XOR .

    ID              reduce using rule 61 (operadorlogico -> XOR .)


state 60

    (62) operadorlogico -> NOT .

    ID              reduce using rule 62 (operadorlogico -> NOT .)


state 61

    (39) expif -> funcion_condicion LPAREN . comparacion RPAREN LCORCHET declaracion RCORCHET
    (48) comparacion -> . termino operadorcomparacion termino
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 65
    ID              shift and go to state 66
    DECIMAL         shift and go to state 67

    comparacion                    shift and go to state 108
    termino                        shift and go to state 109

state 62

    (21) creacionfunciones -> FUNCTION FNOMBRE . LPAREN RPAREN LCORCHET declaracion RCORCHET

    LPAREN          shift and go to state 110


state 63

    (25) returnvalores -> RETURN termino . END

    END             shift and go to state 111


state 64

    (26) returnvalores -> RETURN creacionfunciones .

    CLOSE           reduce using rule 26 (returnvalores -> RETURN creacionfunciones .)
    $end            reduce using rule 26 (returnvalores -> RETURN creacionfunciones .)
    RCORCHET        reduce using rule 26 (returnvalores -> RETURN creacionfunciones .)


state 65

    (36) termino -> NUMBER .

    END             reduce using rule 36 (termino -> NUMBER .)
    IS_EQUAL        reduce using rule 36 (termino -> NUMBER .)
    IS_IDENTICAL    reduce using rule 36 (termino -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 36 (termino -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 36 (termino -> NUMBER .)
    IS_GREATER_OR_EQUAL reduce using rule 36 (termino -> NUMBER .)
    IS_SMALLER_OR_EQUAL reduce using rule 36 (termino -> NUMBER .)
    SPACESHIP       reduce using rule 36 (termino -> NUMBER .)
    MAYORQUE        reduce using rule 36 (termino -> NUMBER .)
    MENORQUE        reduce using rule 36 (termino -> NUMBER .)
    PLUS            reduce using rule 36 (termino -> NUMBER .)
    MINUS           reduce using rule 36 (termino -> NUMBER .)
    DIVIDE          reduce using rule 36 (termino -> NUMBER .)
    TIMES           reduce using rule 36 (termino -> NUMBER .)
    MODULO          reduce using rule 36 (termino -> NUMBER .)
    RPAREN          reduce using rule 36 (termino -> NUMBER .)


state 66

    (37) termino -> ID .

    END             reduce using rule 37 (termino -> ID .)
    PLUS            reduce using rule 37 (termino -> ID .)
    MINUS           reduce using rule 37 (termino -> ID .)
    DIVIDE          reduce using rule 37 (termino -> ID .)
    TIMES           reduce using rule 37 (termino -> ID .)
    MODULO          reduce using rule 37 (termino -> ID .)
    IS_EQUAL        reduce using rule 37 (termino -> ID .)
    IS_IDENTICAL    reduce using rule 37 (termino -> ID .)
    IS_NOT_EQUAL    reduce using rule 37 (termino -> ID .)
    IS_NOT_IDENTICAL reduce using rule 37 (termino -> ID .)
    IS_GREATER_OR_EQUAL reduce using rule 37 (termino -> ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 37 (termino -> ID .)
    SPACESHIP       reduce using rule 37 (termino -> ID .)
    MAYORQUE        reduce using rule 37 (termino -> ID .)
    MENORQUE        reduce using rule 37 (termino -> ID .)
    RPAREN          reduce using rule 37 (termino -> ID .)


state 67

    (38) termino -> DECIMAL .

    END             reduce using rule 38 (termino -> DECIMAL .)
    PLUS            reduce using rule 38 (termino -> DECIMAL .)
    MINUS           reduce using rule 38 (termino -> DECIMAL .)
    DIVIDE          reduce using rule 38 (termino -> DECIMAL .)
    TIMES           reduce using rule 38 (termino -> DECIMAL .)
    MODULO          reduce using rule 38 (termino -> DECIMAL .)
    IS_EQUAL        reduce using rule 38 (termino -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 38 (termino -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 38 (termino -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 38 (termino -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 38 (termino -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 38 (termino -> DECIMAL .)
    SPACESHIP       reduce using rule 38 (termino -> DECIMAL .)
    MAYORQUE        reduce using rule 38 (termino -> DECIMAL .)
    MENORQUE        reduce using rule 38 (termino -> DECIMAL .)
    RPAREN          reduce using rule 38 (termino -> DECIMAL .)


state 68

    (84) print -> funcion_print LPAREN . argument RPAREN END
    (88) argument -> . ID
    (89) argument -> . TEXT

    ID              shift and go to state 70
    TEXT            shift and go to state 71

    argument                       shift and go to state 112

state 69

    (85) print -> funcion_print argument . END

    END             shift and go to state 113


state 70

    (88) argument -> ID .

    END             reduce using rule 88 (argument -> ID .)
    COMA            reduce using rule 88 (argument -> ID .)
    RPAREN          reduce using rule 88 (argument -> ID .)


state 71

    (89) argument -> TEXT .

    END             reduce using rule 89 (argument -> TEXT .)
    COMA            reduce using rule 89 (argument -> TEXT .)
    RPAREN          reduce using rule 89 (argument -> TEXT .)


state 72

    (86) print -> ECHO LPAREN . valores_echo RPAREN END
    (90) valores_echo -> . argument COMA valores_echo
    (91) valores_echo -> . argument
    (88) argument -> . ID
    (89) argument -> . TEXT

    ID              shift and go to state 70
    TEXT            shift and go to state 71

    valores_echo                   shift and go to state 114
    argument                       shift and go to state 74

state 73

    (87) print -> ECHO valores_echo . END

    END             shift and go to state 115


state 74

    (90) valores_echo -> argument . COMA valores_echo
    (91) valores_echo -> argument .

    COMA            shift and go to state 116
    END             reduce using rule 91 (valores_echo -> argument .)
    RPAREN          reduce using rule 91 (valores_echo -> argument .)


state 75

    (97) arreglos -> funcion_arreglo LPAREN . ID RPAREN

    ID              shift and go to state 117


state 76

    (46) while -> WHILE LPAREN . comparacion RPAREN LCORCHET control_bucle RCORCHET
    (48) comparacion -> . termino operadorcomparacion termino
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 65
    ID              shift and go to state 66
    DECIMAL         shift and go to state 67

    comparacion                    shift and go to state 118
    termino                        shift and go to state 109

state 77

    (47) foreach -> FOREACH LPAREN . ID AS ID RPAREN LCORCHET control_bucle RCORCHET

    ID              shift and go to state 119


state 78

    (126) clase -> CLASS FNOMBRE . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 120


state 79

    (1) programa -> OPEN declaracion CLOSE .

    $end            reduce using rule 1 (programa -> OPEN declaracion CLOSE .)


state 80

    (40) expelse -> expif ELSE LCORCHET . declaracion RCORCHET
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    RCORCHET        reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

    expif                          shift and go to state 6
    declaracion                    shift and go to state 121
    expression                     shift and go to state 5
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 81

    (28) expression -> ID EQUALS operacion_matematica . END

    END             shift and go to state 122


state 82

    (63) declararvariable -> ID EQUALS tipo . END

    END             shift and go to state 123


state 83

    (73) operador_object -> ID EQUALS OBJECT_OPERATOR . FNOMBRE LPAREN argumentos RPAREN END

    FNOMBRE         shift and go to state 124


state 84

    (29) operacion_matematica -> termino . operadores operacion_matematica
    (30) operacion_matematica -> termino . operadores termino
    (31) operadores -> . PLUS
    (32) operadores -> . MINUS
    (33) operadores -> . DIVIDE
    (34) operadores -> . TIMES
    (35) operadores -> . MODULO

    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    DIVIDE          shift and go to state 128
    TIMES           shift and go to state 129
    MODULO          shift and go to state 130

    operadores                     shift and go to state 125

state 85

    (64) tipo -> boolean .

    END             reduce using rule 64 (tipo -> boolean .)


state 86

    (65) tipo -> NUMBER .
    (36) termino -> NUMBER .

    END             reduce using rule 65 (tipo -> NUMBER .)
    PLUS            reduce using rule 36 (termino -> NUMBER .)
    MINUS           reduce using rule 36 (termino -> NUMBER .)
    DIVIDE          reduce using rule 36 (termino -> NUMBER .)
    TIMES           reduce using rule 36 (termino -> NUMBER .)
    MODULO          reduce using rule 36 (termino -> NUMBER .)


state 87

    (66) tipo -> TEXT .

    END             reduce using rule 66 (tipo -> TEXT .)


state 88

    (67) tipo -> NULL .

    END             reduce using rule 67 (tipo -> NULL .)


state 89

    (68) tipo -> archivos .

    END             reduce using rule 68 (tipo -> archivos .)


state 90

    (69) tipo -> array .

    END             reduce using rule 69 (tipo -> array .)


state 91

    (70) tipo -> new .

    END             reduce using rule 70 (tipo -> new .)


state 92

    (71) boolean -> TRUE .

    END             reduce using rule 71 (boolean -> TRUE .)
    COMA            reduce using rule 71 (boolean -> TRUE .)
    RPAREN          reduce using rule 71 (boolean -> TRUE .)


state 93

    (72) boolean -> FALSE .

    END             reduce using rule 72 (boolean -> FALSE .)
    COMA            reduce using rule 72 (boolean -> FALSE .)
    RPAREN          reduce using rule 72 (boolean -> FALSE .)


state 94

    (115) archivos -> funcion_archivo . LPAREN TEXT COMA TEXT RPAREN

    LPAREN          shift and go to state 131


state 95

    (74) array -> ARRAY . LPAREN valores_array RPAREN

    LPAREN          shift and go to state 132


state 96

    (83) new -> NEW . FNOMBRE

    FNOMBRE         shift and go to state 133


state 97

    (116) funcion_archivo -> FGETS .

    LPAREN          reduce using rule 116 (funcion_archivo -> FGETS .)


state 98

    (117) funcion_archivo -> FREAD .

    LPAREN          reduce using rule 117 (funcion_archivo -> FREAD .)


state 99

    (118) funcion_archivo -> FSCANF .

    LPAREN          reduce using rule 118 (funcion_archivo -> FSCANF .)


state 100

    (119) funcion_archivo -> FPASSTHRU .

    LPAREN          reduce using rule 119 (funcion_archivo -> FPASSTHRU .)


state 101

    (120) funcion_archivo -> FGETCSV .

    LPAREN          reduce using rule 120 (funcion_archivo -> FGETCSV .)


state 102

    (121) funcion_archivo -> FGETC .

    LPAREN          reduce using rule 121 (funcion_archivo -> FGETC .)


state 103

    (122) funcion_archivo -> FILE_GET_CONTENTS .

    LPAREN          reduce using rule 122 (funcion_archivo -> FILE_GET_CONTENTS .)


state 104

    (123) funcion_archivo -> READFILE .

    LPAREN          reduce using rule 123 (funcion_archivo -> READFILE .)


state 105

    (124) funcion_archivo -> FILE .

    LPAREN          reduce using rule 124 (funcion_archivo -> FILE .)


state 106

    (125) funcion_archivo -> PARSE_INI_FILE .

    LPAREN          reduce using rule 125 (funcion_archivo -> PARSE_INI_FILE .)


state 107

    (58) expresionlogica -> ID operadorlogico ID .

    CLOSE           reduce using rule 58 (expresionlogica -> ID operadorlogico ID .)
    $end            reduce using rule 58 (expresionlogica -> ID operadorlogico ID .)
    RCORCHET        reduce using rule 58 (expresionlogica -> ID operadorlogico ID .)


state 108

    (39) expif -> funcion_condicion LPAREN comparacion . RPAREN LCORCHET declaracion RCORCHET

    RPAREN          shift and go to state 134


state 109

    (48) comparacion -> termino . operadorcomparacion termino
    (49) operadorcomparacion -> . IS_EQUAL
    (50) operadorcomparacion -> . IS_IDENTICAL
    (51) operadorcomparacion -> . IS_NOT_EQUAL
    (52) operadorcomparacion -> . IS_NOT_IDENTICAL
    (53) operadorcomparacion -> . IS_GREATER_OR_EQUAL
    (54) operadorcomparacion -> . IS_SMALLER_OR_EQUAL
    (55) operadorcomparacion -> . SPACESHIP
    (56) operadorcomparacion -> . MAYORQUE
    (57) operadorcomparacion -> . MENORQUE

    IS_EQUAL        shift and go to state 136
    IS_IDENTICAL    shift and go to state 137
    IS_NOT_EQUAL    shift and go to state 138
    IS_NOT_IDENTICAL shift and go to state 139
    IS_GREATER_OR_EQUAL shift and go to state 140
    IS_SMALLER_OR_EQUAL shift and go to state 141
    SPACESHIP       shift and go to state 142
    MAYORQUE        shift and go to state 143
    MENORQUE        shift and go to state 144

    operadorcomparacion            shift and go to state 135

state 110

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN . RPAREN LCORCHET declaracion RCORCHET

    RPAREN          shift and go to state 145


state 111

    (25) returnvalores -> RETURN termino END .

    CLOSE           reduce using rule 25 (returnvalores -> RETURN termino END .)
    $end            reduce using rule 25 (returnvalores -> RETURN termino END .)
    RCORCHET        reduce using rule 25 (returnvalores -> RETURN termino END .)


state 112

    (84) print -> funcion_print LPAREN argument . RPAREN END

    RPAREN          shift and go to state 146


state 113

    (85) print -> funcion_print argument END .

    CLOSE           reduce using rule 85 (print -> funcion_print argument END .)
    $end            reduce using rule 85 (print -> funcion_print argument END .)
    RCORCHET        reduce using rule 85 (print -> funcion_print argument END .)


state 114

    (86) print -> ECHO LPAREN valores_echo . RPAREN END

    RPAREN          shift and go to state 147


state 115

    (87) print -> ECHO valores_echo END .

    CLOSE           reduce using rule 87 (print -> ECHO valores_echo END .)
    $end            reduce using rule 87 (print -> ECHO valores_echo END .)
    RCORCHET        reduce using rule 87 (print -> ECHO valores_echo END .)


state 116

    (90) valores_echo -> argument COMA . valores_echo
    (90) valores_echo -> . argument COMA valores_echo
    (91) valores_echo -> . argument
    (88) argument -> . ID
    (89) argument -> . TEXT

    ID              shift and go to state 70
    TEXT            shift and go to state 71

    argument                       shift and go to state 74
    valores_echo                   shift and go to state 148

state 117

    (97) arreglos -> funcion_arreglo LPAREN ID . RPAREN

    RPAREN          shift and go to state 149


state 118

    (46) while -> WHILE LPAREN comparacion . RPAREN LCORCHET control_bucle RCORCHET

    RPAREN          shift and go to state 150


state 119

    (47) foreach -> FOREACH LPAREN ID . AS ID RPAREN LCORCHET control_bucle RCORCHET

    AS              shift and go to state 151


state 120

    (126) clase -> CLASS FNOMBRE LCORCHET . declaracion RCORCHET
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    RCORCHET        reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

    declaracion                    shift and go to state 152
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 121

    (40) expelse -> expif ELSE LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
    RCORCHET        shift and go to state 153

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]


state 122

    (28) expression -> ID EQUALS operacion_matematica END .

    CLOSE           reduce using rule 28 (expression -> ID EQUALS operacion_matematica END .)
    $end            reduce using rule 28 (expression -> ID EQUALS operacion_matematica END .)
    RCORCHET        reduce using rule 28 (expression -> ID EQUALS operacion_matematica END .)


state 123

    (63) declararvariable -> ID EQUALS tipo END .

    CLOSE           reduce using rule 63 (declararvariable -> ID EQUALS tipo END .)
    $end            reduce using rule 63 (declararvariable -> ID EQUALS tipo END .)
    RCORCHET        reduce using rule 63 (declararvariable -> ID EQUALS tipo END .)


state 124

    (73) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE . LPAREN argumentos RPAREN END

    LPAREN          shift and go to state 154


state 125

    (29) operacion_matematica -> termino operadores . operacion_matematica
    (30) operacion_matematica -> termino operadores . termino
    (29) operacion_matematica -> . termino operadores operacion_matematica
    (30) operacion_matematica -> . termino operadores termino
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 65
    ID              shift and go to state 66
    DECIMAL         shift and go to state 67

    termino                        shift and go to state 155
    operacion_matematica           shift and go to state 156

state 126

    (31) operadores -> PLUS .

    NUMBER          reduce using rule 31 (operadores -> PLUS .)
    ID              reduce using rule 31 (operadores -> PLUS .)
    DECIMAL         reduce using rule 31 (operadores -> PLUS .)


state 127

    (32) operadores -> MINUS .

    NUMBER          reduce using rule 32 (operadores -> MINUS .)
    ID              reduce using rule 32 (operadores -> MINUS .)
    DECIMAL         reduce using rule 32 (operadores -> MINUS .)


state 128

    (33) operadores -> DIVIDE .

    NUMBER          reduce using rule 33 (operadores -> DIVIDE .)
    ID              reduce using rule 33 (operadores -> DIVIDE .)
    DECIMAL         reduce using rule 33 (operadores -> DIVIDE .)


state 129

    (34) operadores -> TIMES .

    NUMBER          reduce using rule 34 (operadores -> TIMES .)
    ID              reduce using rule 34 (operadores -> TIMES .)
    DECIMAL         reduce using rule 34 (operadores -> TIMES .)


state 130

    (35) operadores -> MODULO .

    NUMBER          reduce using rule 35 (operadores -> MODULO .)
    ID              reduce using rule 35 (operadores -> MODULO .)
    DECIMAL         reduce using rule 35 (operadores -> MODULO .)


state 131

    (115) archivos -> funcion_archivo LPAREN . TEXT COMA TEXT RPAREN

    TEXT            shift and go to state 157


state 132

    (74) array -> ARRAY LPAREN . valores_array RPAREN
    (75) valores_array -> . elementos_array COMA valores_array
    (76) valores_array -> . elementos_array
    (77) valores_array -> . empty
    (78) elementos_array -> . NUMBER
    (79) elementos_array -> . TEXT
    (80) elementos_array -> . empty
    (81) elementos_array -> . boolean
    (82) elementos_array -> . array
    (22) empty -> .
    (71) boolean -> . TRUE
    (72) boolean -> . FALSE
    (74) array -> . ARRAY LPAREN valores_array RPAREN

    NUMBER          shift and go to state 161
    TEXT            shift and go to state 162
    RPAREN          reduce using rule 22 (empty -> .)
    COMA            reduce using rule 22 (empty -> .)
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    ARRAY           shift and go to state 95

    valores_array                  shift and go to state 158
    elementos_array                shift and go to state 159
    empty                          shift and go to state 160
    boolean                        shift and go to state 163
    array                          shift and go to state 164

state 133

    (83) new -> NEW FNOMBRE .

    END             reduce using rule 83 (new -> NEW FNOMBRE .)


state 134

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 165


state 135

    (48) comparacion -> termino operadorcomparacion . termino
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 65
    ID              shift and go to state 66
    DECIMAL         shift and go to state 67

    termino                        shift and go to state 166

state 136

    (49) operadorcomparacion -> IS_EQUAL .

    NUMBER          reduce using rule 49 (operadorcomparacion -> IS_EQUAL .)
    ID              reduce using rule 49 (operadorcomparacion -> IS_EQUAL .)
    DECIMAL         reduce using rule 49 (operadorcomparacion -> IS_EQUAL .)


state 137

    (50) operadorcomparacion -> IS_IDENTICAL .

    NUMBER          reduce using rule 50 (operadorcomparacion -> IS_IDENTICAL .)
    ID              reduce using rule 50 (operadorcomparacion -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 50 (operadorcomparacion -> IS_IDENTICAL .)


state 138

    (51) operadorcomparacion -> IS_NOT_EQUAL .

    NUMBER          reduce using rule 51 (operadorcomparacion -> IS_NOT_EQUAL .)
    ID              reduce using rule 51 (operadorcomparacion -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 51 (operadorcomparacion -> IS_NOT_EQUAL .)


state 139

    (52) operadorcomparacion -> IS_NOT_IDENTICAL .

    NUMBER          reduce using rule 52 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    ID              reduce using rule 52 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 52 (operadorcomparacion -> IS_NOT_IDENTICAL .)


state 140

    (53) operadorcomparacion -> IS_GREATER_OR_EQUAL .

    NUMBER          reduce using rule 53 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    ID              reduce using rule 53 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 53 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)


state 141

    (54) operadorcomparacion -> IS_SMALLER_OR_EQUAL .

    NUMBER          reduce using rule 54 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    ID              reduce using rule 54 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 54 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)


state 142

    (55) operadorcomparacion -> SPACESHIP .

    NUMBER          reduce using rule 55 (operadorcomparacion -> SPACESHIP .)
    ID              reduce using rule 55 (operadorcomparacion -> SPACESHIP .)
    DECIMAL         reduce using rule 55 (operadorcomparacion -> SPACESHIP .)


state 143

    (56) operadorcomparacion -> MAYORQUE .

    NUMBER          reduce using rule 56 (operadorcomparacion -> MAYORQUE .)
    ID              reduce using rule 56 (operadorcomparacion -> MAYORQUE .)
    DECIMAL         reduce using rule 56 (operadorcomparacion -> MAYORQUE .)


state 144

    (57) operadorcomparacion -> MENORQUE .

    NUMBER          reduce using rule 57 (operadorcomparacion -> MENORQUE .)
    ID              reduce using rule 57 (operadorcomparacion -> MENORQUE .)
    DECIMAL         reduce using rule 57 (operadorcomparacion -> MENORQUE .)


state 145

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 167


state 146

    (84) print -> funcion_print LPAREN argument RPAREN . END

    END             shift and go to state 168


state 147

    (86) print -> ECHO LPAREN valores_echo RPAREN . END

    END             shift and go to state 169


state 148

    (90) valores_echo -> argument COMA valores_echo .

    END             reduce using rule 90 (valores_echo -> argument COMA valores_echo .)
    RPAREN          reduce using rule 90 (valores_echo -> argument COMA valores_echo .)


state 149

    (97) arreglos -> funcion_arreglo LPAREN ID RPAREN .

    CLOSE           reduce using rule 97 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    $end            reduce using rule 97 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    RCORCHET        reduce using rule 97 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)


state 150

    (46) while -> WHILE LPAREN comparacion RPAREN . LCORCHET control_bucle RCORCHET

    LCORCHET        shift and go to state 170


state 151

    (47) foreach -> FOREACH LPAREN ID AS . ID RPAREN LCORCHET control_bucle RCORCHET

    ID              shift and go to state 171


state 152

    (126) clase -> CLASS FNOMBRE LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
    RCORCHET        shift and go to state 172

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]


state 153

    (40) expelse -> expif ELSE LCORCHET declaracion RCORCHET .

    CLOSE           reduce using rule 40 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 40 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 40 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .)


state 154

    (73) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN . argumentos RPAREN END
    (23) argumentos -> . ID
    (24) argumentos -> . empty
    (22) empty -> .

    ID              shift and go to state 173
    RPAREN          reduce using rule 22 (empty -> .)

    argumentos                     shift and go to state 174
    empty                          shift and go to state 175

state 155

    (30) operacion_matematica -> termino operadores termino .
    (29) operacion_matematica -> termino . operadores operacion_matematica
    (30) operacion_matematica -> termino . operadores termino
    (31) operadores -> . PLUS
    (32) operadores -> . MINUS
    (33) operadores -> . DIVIDE
    (34) operadores -> . TIMES
    (35) operadores -> . MODULO

    END             reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    DIVIDE          shift and go to state 128
    TIMES           shift and go to state 129
    MODULO          shift and go to state 130

    operadores                     shift and go to state 125

state 156

    (29) operacion_matematica -> termino operadores operacion_matematica .

    END             reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)


state 157

    (115) archivos -> funcion_archivo LPAREN TEXT . COMA TEXT RPAREN

    COMA            shift and go to state 176


state 158

    (74) array -> ARRAY LPAREN valores_array . RPAREN

    RPAREN          shift and go to state 177


state 159

    (75) valores_array -> elementos_array . COMA valores_array
    (76) valores_array -> elementos_array .

    COMA            shift and go to state 178
    RPAREN          reduce using rule 76 (valores_array -> elementos_array .)


state 160

    (77) valores_array -> empty .
    (80) elementos_array -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 77 (valores_array -> empty .)
    RPAREN          reduce using rule 77 (valores_array -> empty .)
    COMA            reduce using rule 80 (elementos_array -> empty .)

  ! RPAREN          [ reduce using rule 80 (elementos_array -> empty .) ]


state 161

    (78) elementos_array -> NUMBER .

    COMA            reduce using rule 78 (elementos_array -> NUMBER .)
    RPAREN          reduce using rule 78 (elementos_array -> NUMBER .)


state 162

    (79) elementos_array -> TEXT .

    COMA            reduce using rule 79 (elementos_array -> TEXT .)
    RPAREN          reduce using rule 79 (elementos_array -> TEXT .)


state 163

    (81) elementos_array -> boolean .

    COMA            reduce using rule 81 (elementos_array -> boolean .)
    RPAREN          reduce using rule 81 (elementos_array -> boolean .)


state 164

    (82) elementos_array -> array .

    COMA            reduce using rule 82 (elementos_array -> array .)
    RPAREN          reduce using rule 82 (elementos_array -> array .)


state 165

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET . declaracion RCORCHET
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    RCORCHET        reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

    funcion_condicion              shift and go to state 19
    declaracion                    shift and go to state 179
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 166

    (48) comparacion -> termino operadorcomparacion termino .

    RPAREN          reduce using rule 48 (comparacion -> termino operadorcomparacion termino .)


state 167

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET . declaracion RCORCHET
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    RCORCHET        reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

    declaracion                    shift and go to state 180
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 168

    (84) print -> funcion_print LPAREN argument RPAREN END .

    CLOSE           reduce using rule 84 (print -> funcion_print LPAREN argument RPAREN END .)
    $end            reduce using rule 84 (print -> funcion_print LPAREN argument RPAREN END .)
    RCORCHET        reduce using rule 84 (print -> funcion_print LPAREN argument RPAREN END .)


state 169

    (86) print -> ECHO LPAREN valores_echo RPAREN END .

    CLOSE           reduce using rule 86 (print -> ECHO LPAREN valores_echo RPAREN END .)
    $end            reduce using rule 86 (print -> ECHO LPAREN valores_echo RPAREN END .)
    RCORCHET        reduce using rule 86 (print -> ECHO LPAREN valores_echo RPAREN END .)


state 170

    (46) while -> WHILE LPAREN comparacion RPAREN LCORCHET . control_bucle RCORCHET
    (43) control_bucle -> . BREAK
    (44) control_bucle -> . CONTINUE
    (45) control_bucle -> . declaracion
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

    BREAK           shift and go to state 182
    CONTINUE        shift and go to state 183
    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    RCORCHET        reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

    control_bucle                  shift and go to state 181
    declaracion                    shift and go to state 184
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 171

    (47) foreach -> FOREACH LPAREN ID AS ID . RPAREN LCORCHET control_bucle RCORCHET

    RPAREN          shift and go to state 185


state 172

    (126) clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .

    CLOSE           reduce using rule 126 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 126 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 126 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)


state 173

    (23) argumentos -> ID .

    RPAREN          reduce using rule 23 (argumentos -> ID .)


state 174

    (73) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos . RPAREN END

    RPAREN          shift and go to state 186


state 175

    (24) argumentos -> empty .

    RPAREN          reduce using rule 24 (argumentos -> empty .)


state 176

    (115) archivos -> funcion_archivo LPAREN TEXT COMA . TEXT RPAREN

    TEXT            shift and go to state 187


state 177

    (74) array -> ARRAY LPAREN valores_array RPAREN .

    END             reduce using rule 74 (array -> ARRAY LPAREN valores_array RPAREN .)
    COMA            reduce using rule 74 (array -> ARRAY LPAREN valores_array RPAREN .)
    RPAREN          reduce using rule 74 (array -> ARRAY LPAREN valores_array RPAREN .)


state 178

    (75) valores_array -> elementos_array COMA . valores_array
    (75) valores_array -> . elementos_array COMA valores_array
    (76) valores_array -> . elementos_array
    (77) valores_array -> . empty
    (78) elementos_array -> . NUMBER
    (79) elementos_array -> . TEXT
    (80) elementos_array -> . empty
    (81) elementos_array -> . boolean
    (82) elementos_array -> . array
    (22) empty -> .
    (71) boolean -> . TRUE
    (72) boolean -> . FALSE
    (74) array -> . ARRAY LPAREN valores_array RPAREN

    NUMBER          shift and go to state 161
    TEXT            shift and go to state 162
    RPAREN          reduce using rule 22 (empty -> .)
    COMA            reduce using rule 22 (empty -> .)
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    ARRAY           shift and go to state 95

    elementos_array                shift and go to state 159
    valores_array                  shift and go to state 188
    empty                          shift and go to state 160
    boolean                        shift and go to state 163
    array                          shift and go to state 164

state 179

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
    RCORCHET        shift and go to state 189

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]


state 180

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
    RCORCHET        shift and go to state 190

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]


state 181

    (46) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle . RCORCHET

    RCORCHET        shift and go to state 191


state 182

    (43) control_bucle -> BREAK .

    RCORCHET        reduce using rule 43 (control_bucle -> BREAK .)


state 183

    (44) control_bucle -> CONTINUE .

    RCORCHET        reduce using rule 44 (control_bucle -> CONTINUE .)


state 184

    (45) control_bucle -> declaracion .
    (20) declaracion -> declaracion .

  ! reduce/reduce conflict for RCORCHET resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 45 (control_bucle -> declaracion .) ]


state 185

    (47) foreach -> FOREACH LPAREN ID AS ID RPAREN . LCORCHET control_bucle RCORCHET

    LCORCHET        shift and go to state 192


state 186

    (73) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN . END

    END             shift and go to state 193


state 187

    (115) archivos -> funcion_archivo LPAREN TEXT COMA TEXT . RPAREN

    RPAREN          shift and go to state 194


state 188

    (75) valores_array -> elementos_array COMA valores_array .

    RPAREN          reduce using rule 75 (valores_array -> elementos_array COMA valores_array .)


state 189

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .

    ELSE            reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    CLOSE           reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)


state 190

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .

    CLOSE           reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)


state 191

    (46) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .

    CLOSE           reduce using rule 46 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    $end            reduce using rule 46 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    RCORCHET        reduce using rule 46 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)


state 192

    (47) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET . control_bucle RCORCHET
    (43) control_bucle -> . BREAK
    (44) control_bucle -> . CONTINUE
    (45) control_bucle -> . declaracion
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (58) expresionlogica -> . ID operadorlogico ID
    (63) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (73) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (84) print -> . funcion_print LPAREN argument RPAREN END
    (85) print -> . funcion_print argument END
    (86) print -> . ECHO LPAREN valores_echo RPAREN END
    (87) print -> . ECHO valores_echo END
    (97) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (46) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (47) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (126) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (41) funcion_condicion -> . IF
    (42) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (92) funcion_print -> . VAR_EXPORT
    (93) funcion_print -> . ECHO
    (94) funcion_print -> . PRINT
    (95) funcion_print -> . PRINT_R
    (96) funcion_print -> . VAR_DUMP
    (98) funcion_arreglo -> . SUFFLE
    (99) funcion_arreglo -> . ARRAY_MERGE
    (100) funcion_arreglo -> . ARRAY_SEARCH
    (101) funcion_arreglo -> . ARRAY_RAND
    (102) funcion_arreglo -> . ARRAY_CHUNK
    (103) funcion_arreglo -> . STR_SPLIT
    (104) funcion_arreglo -> . PREG_SPLIT
    (105) funcion_arreglo -> . ARRAY_UNIQUE
    (106) funcion_arreglo -> . COUNT
    (107) funcion_arreglo -> . SIZEOF
    (108) funcion_arreglo -> . ARRAY_PUSH
    (109) funcion_arreglo -> . SORT
    (110) funcion_arreglo -> . ASORT
    (111) funcion_arreglo -> . KSORT
    (112) funcion_arreglo -> . UNSET
    (113) funcion_arreglo -> . IMPLODE
    (114) funcion_arreglo -> . EXPLODE

    BREAK           shift and go to state 182
    CONTINUE        shift and go to state 183
    ID              shift and go to state 18
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    ECHO            shift and go to state 24
    WHILE           shift and go to state 26
    FOREACH         shift and go to state 27
    CLASS           shift and go to state 28
    IF              shift and go to state 29
    ELSEIF          shift and go to state 30
    RCORCHET        reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 31
    PRINT           shift and go to state 32
    PRINT_R         shift and go to state 33
    VAR_DUMP        shift and go to state 34
    SUFFLE          shift and go to state 35
    ARRAY_MERGE     shift and go to state 36
    ARRAY_SEARCH    shift and go to state 37
    ARRAY_RAND      shift and go to state 38
    ARRAY_CHUNK     shift and go to state 39
    STR_SPLIT       shift and go to state 40
    PREG_SPLIT      shift and go to state 41
    ARRAY_UNIQUE    shift and go to state 42
    COUNT           shift and go to state 43
    SIZEOF          shift and go to state 44
    ARRAY_PUSH      shift and go to state 45
    SORT            shift and go to state 46
    ASORT           shift and go to state 47
    KSORT           shift and go to state 48
    UNSET           shift and go to state 49
    IMPLODE         shift and go to state 50
    EXPLODE         shift and go to state 51

    control_bucle                  shift and go to state 195
    declaracion                    shift and go to state 184
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 22
    funcion_print                  shift and go to state 23
    funcion_arreglo                shift and go to state 25

state 193

    (73) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .

    CLOSE           reduce using rule 73 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    $end            reduce using rule 73 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    RCORCHET        reduce using rule 73 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)


state 194

    (115) archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN .

    END             reduce using rule 115 (archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN .)


state 195

    (47) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle . RCORCHET

    RCORCHET        shift and go to state 196


state 196

    (47) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET .

    CLOSE           reduce using rule 47 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET .)
    $end            reduce using rule 47 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET .)
    RCORCHET        reduce using rule 47 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSE in state 0 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 24 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 52 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 121 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 152 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 179 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 180 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (programa -> OPEN)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (declaracion -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 52 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (declaracion -> declaracion) in state 52
WARNING: reduce/reduce conflict in state 160 resolved using rule (valores_array -> empty)
WARNING: rejected rule (elementos_array -> empty) in state 160
WARNING: reduce/reduce conflict in state 184 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 184
WARNING: Rule (control_bucle -> declaracion) is never reduced

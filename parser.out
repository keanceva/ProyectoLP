Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> OPEN declaracion CLOSE
Rule 2     programa -> OPEN declaracion
Rule 3     programa -> declaracion CLOSE
Rule 4     programa -> declaracion
Rule 5     programa -> CLOSE
Rule 6     programa -> OPEN
Rule 7     declaracion -> expression
Rule 8     declaracion -> expif
Rule 9     declaracion -> expelse
Rule 10    declaracion -> expresionlogica
Rule 11    declaracion -> declararvariable
Rule 12    declaracion -> creacionfunciones
Rule 13    declaracion -> returnvalores
Rule 14    declaracion -> operador_object
Rule 15    declaracion -> print
Rule 16    declaracion -> arreglos
Rule 17    declaracion -> while
Rule 18    declaracion -> foreach
Rule 19    declaracion -> clase
Rule 20    declaracion -> declaracion
Rule 21    creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
Rule 22    empty -> <empty>
Rule 23    argumentos -> ID
Rule 24    argumentos -> empty
Rule 25    returnvalores -> RETURN termino END
Rule 26    returnvalores -> RETURN creacionfunciones
Rule 27    returnvalores -> empty
Rule 28    expression -> ID EQUALS operacion_matematica END
Rule 29    operacion_matematica -> termino operadores operacion_matematica
Rule 30    operacion_matematica -> termino operadores termino
Rule 31    operadores -> PLUS
Rule 32    operadores -> MINUS
Rule 33    operadores -> DIVIDE
Rule 34    operadores -> TIMES
Rule 35    operadores -> MODULO
Rule 36    termino -> NUMBER
Rule 37    termino -> ID
Rule 38    termino -> DECIMAL
Rule 39    expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
Rule 40    expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET
Rule 41    expif -> declaracion RCORCHET
Rule 42    expif -> declaracion
Rule 43    expif -> RCORCHET
Rule 44    expelse -> expif ELSE LCORCHET declaracion RCORCHET
Rule 45    expelse -> expif ELSE LCORCHET declaracion
Rule 46    expelse -> expif ELSE LCORCHET
Rule 47    expelse -> declaracion
Rule 48    expelse -> declaracion RCORCHET
Rule 49    expelse -> RCORCHET
Rule 50    funcion_condicion -> IF
Rule 51    funcion_condicion -> ELSEIF
Rule 52    control_bucle -> declaracion
Rule 53    control_bucle -> BREAK
Rule 54    control_bucle -> CONTINUE
Rule 55    while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
Rule 56    while -> WHILE LPAREN comparacion RPAREN LCORCHET
Rule 57    while -> control_bucle RCORCHET
Rule 58    while -> control_bucle
Rule 59    while -> RCORCHET
Rule 60    foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
Rule 61    foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET
Rule 62    foreach -> control_bucle RCORCHET
Rule 63    foreach -> control_bucle
Rule 64    foreach -> RCORCHET
Rule 65    comparacion -> valor_comparado operadorcomparacion valor_comparado
Rule 66    valor_comparado -> NUMBER
Rule 67    valor_comparado -> boolean
Rule 68    valor_comparado -> operacion_matematica
Rule 69    valor_comparado -> ID
Rule 70    operadorcomparacion -> IS_EQUAL
Rule 71    operadorcomparacion -> IS_IDENTICAL
Rule 72    operadorcomparacion -> IS_NOT_EQUAL
Rule 73    operadorcomparacion -> IS_NOT_IDENTICAL
Rule 74    operadorcomparacion -> IS_GREATER_OR_EQUAL
Rule 75    operadorcomparacion -> IS_SMALLER_OR_EQUAL
Rule 76    operadorcomparacion -> SPACESHIP
Rule 77    operadorcomparacion -> MAYORQUE
Rule 78    operadorcomparacion -> MENORQUE
Rule 79    expresionlogica -> ID operadorlogico ID
Rule 80    operadorlogico -> AND
Rule 81    operadorlogico -> OR
Rule 82    operadorlogico -> XOR
Rule 83    operadorlogico -> NOT
Rule 84    declararvariable -> ID EQUALS tipo END
Rule 85    tipo -> boolean
Rule 86    tipo -> NUMBER
Rule 87    tipo -> TEXT
Rule 88    tipo -> NULL
Rule 89    tipo -> archivos
Rule 90    tipo -> array
Rule 91    tipo -> new
Rule 92    boolean -> TRUE
Rule 93    boolean -> FALSE
Rule 94    boolean -> expresionlogica
Rule 95    operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
Rule 96    array -> ARRAY LPAREN valores_array RPAREN
Rule 97    valores_array -> elementos_array COMA valores_array
Rule 98    valores_array -> elementos_array
Rule 99    valores_array -> empty
Rule 100   elementos_array -> NUMBER
Rule 101   elementos_array -> TEXT
Rule 102   elementos_array -> empty
Rule 103   elementos_array -> boolean
Rule 104   elementos_array -> array
Rule 105   new -> NEW FNOMBRE
Rule 106   print -> funcion_print LPAREN argument RPAREN END
Rule 107   print -> funcion_print argument END
Rule 108   print -> ECHO LPAREN valores_echo RPAREN END
Rule 109   print -> ECHO valores_echo END
Rule 110   argument -> ID
Rule 111   argument -> TEXT
Rule 112   valores_echo -> argument COMA valores_echo
Rule 113   valores_echo -> argument
Rule 114   funcion_print -> VAR_EXPORT
Rule 115   funcion_print -> ECHO
Rule 116   funcion_print -> PRINT
Rule 117   funcion_print -> PRINT_R
Rule 118   funcion_print -> VAR_DUMP
Rule 119   arreglos -> funcion_arreglo LPAREN ID RPAREN
Rule 120   argumento_doble -> LPAREN ID COMA ID RPAREN
Rule 121   funcion_argumento_doble -> ARRAY_MERGE
Rule 122   funcion_argumento_doble -> ARRAY_SEARCH
Rule 123   funcion_argumento_doble -> ARRAY_RAND
Rule 124   funcion_argumento_doble -> ARRAY_CHUNK
Rule 125   funcion_argumento_doble -> STR_SPLIT
Rule 126   funcion_argumento_doble -> PREG_SPLIT
Rule 127   funcion_argumento_doble -> COUNT
Rule 128   funcion_argumento_doble -> ARRAY_PUSH
Rule 129   funcion_argumento_doble -> SORT
Rule 130   funcion_argumento_doble -> ASORT
Rule 131   funcion_argumento_doble -> KSORT
Rule 132   funcion_argumento_doble -> UNSET
Rule 133   funcion_argumento_doble -> IMPLODE
Rule 134   funcion_argumento_doble -> EXPLODE
Rule 135   funcion_arreglo -> SUFFLE
Rule 136   funcion_arreglo -> ARRAY_UNIQUE
Rule 137   funcion_arreglo -> SIZEOF
Rule 138   archivos -> funcion_corta
Rule 139   archivos -> estructura_funcion
Rule 140   funcion_corta -> FGETS LPAREN ID COMA NUMBER RPAREN
Rule 141   estructura_funcion -> funcion_archivo LPAREN opcion RPAREN
Rule 142   opcion -> ID
Rule 143   opcion -> TEXT
Rule 144   funcion_archivo -> FREAD
Rule 145   funcion_archivo -> FSCANF
Rule 146   funcion_archivo -> FPASSTHRU
Rule 147   funcion_archivo -> FGETCSV
Rule 148   funcion_archivo -> FGETC
Rule 149   funcion_archivo -> FILE_GET_CONTENTS
Rule 150   funcion_archivo -> READFILE
Rule 151   funcion_archivo -> FILE
Rule 152   funcion_archivo -> PARSE_INI_FILE
Rule 153   clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET
Rule 154   clase -> CLASS FNOMBRE LCORCHET
Rule 155   clase -> declaracion RCORCHET
Rule 156   clase -> declaracion
Rule 157   clase -> RCORCHET

Terminals, with rules where they appear

AND                  : 80
ARRAY                : 96
ARRAY_CHUNK          : 124
ARRAY_MERGE          : 121
ARRAY_PUSH           : 128
ARRAY_RAND           : 123
ARRAY_SEARCH         : 122
ARRAY_UNIQUE         : 136
AS                   : 60 61
ASORT                : 130
BREAK                : 53
CLASS                : 153 154
CLOSE                : 1 3 5
COMA                 : 97 112 120 140
CONTINUE             : 54
COUNT                : 127
DECIMAL              : 38
DIVIDE               : 33
ECHO                 : 108 109 115
ELSE                 : 44 45 46
ELSEIF               : 51
END                  : 25 28 84 95 106 107 108 109
EQUALS               : 28 84 95
EXPLODE              : 134
FALSE                : 93
FGETC                : 148
FGETCSV              : 147
FGETS                : 140
FILE                 : 151
FILE_GET_CONTENTS    : 149
FNOMBRE              : 21 95 105 153 154
FOREACH              : 60 61
FPASSTHRU            : 146
FREAD                : 144
FSCANF               : 145
FUNCTION             : 21
ID                   : 23 28 37 60 60 61 61 69 79 79 84 95 110 119 120 120 140 142
IF                   : 50
IMPLODE              : 133
IS_EQUAL             : 70
IS_GREATER_OR_EQUAL  : 74
IS_IDENTICAL         : 71
IS_NOT_EQUAL         : 72
IS_NOT_IDENTICAL     : 73
IS_SMALLER_OR_EQUAL  : 75
KSORT                : 131
LCORCHET             : 21 39 40 44 45 46 55 56 60 61 153 154
LPAREN               : 21 39 40 55 56 60 61 95 96 106 108 119 120 140 141
MAYORQUE             : 77
MENORQUE             : 78
MINUS                : 32
MODULO               : 35
NEW                  : 105
NOT                  : 83
NULL                 : 88
NUMBER               : 36 66 86 100 140
OBJECT_OPERATOR      : 95
OPEN                 : 1 2 6
OR                   : 81
PARSE_INI_FILE       : 152
PLUS                 : 31
PREG_SPLIT           : 126
PRINT                : 116
PRINT_R              : 117
RCORCHET             : 21 39 41 43 44 48 49 55 57 59 60 62 64 153 155 157
READFILE             : 150
RETURN               : 25 26
RPAREN               : 21 39 40 55 56 60 61 95 96 106 108 119 120 140 141
SIZEOF               : 137
SORT                 : 129
SPACESHIP            : 76
STR_SPLIT            : 125
SUFFLE               : 135
TEXT                 : 87 101 111 143
TIMES                : 34
TRUE                 : 92
UNSET                : 132
VAR_DUMP             : 118
VAR_EXPORT           : 114
WHILE                : 55 56
XOR                  : 82
error                : 

Nonterminals, with rules where they appear

archivos             : 89
argument             : 106 107 112 113
argumento_doble      : 
argumentos           : 95
array                : 90 104
arreglos             : 16
boolean              : 67 85 103
clase                : 19
comparacion          : 39 40 55 56
control_bucle        : 55 57 58 62 63
creacionfunciones    : 12 26
declaracion          : 1 2 3 4 20 21 39 41 42 44 45 47 48 52 60 153 155 156
declararvariable     : 11
elementos_array      : 97 98
empty                : 24 27 99 102
estructura_funcion   : 139
expelse              : 9
expif                : 8 44 45 46
expresionlogica      : 10 94
expression           : 7
foreach              : 18
funcion_archivo      : 141
funcion_argumento_doble : 
funcion_arreglo      : 119
funcion_condicion    : 39 40
funcion_corta        : 138
funcion_print        : 106 107
new                  : 91
opcion               : 141
operacion_matematica : 28 29 68
operador_object      : 14
operadorcomparacion  : 65
operadores           : 29 30
operadorlogico       : 79
print                : 15
programa             : 0
returnvalores        : 13
termino              : 25 29 30 30
tipo                 : 84
valor_comparado      : 65 65
valores_array        : 96 97
valores_echo         : 108 109 112
while                : 17

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . OPEN declaracion CLOSE
    (2) programa -> . OPEN declaracion
    (3) programa -> . declaracion CLOSE
    (4) programa -> . declaracion
    (5) programa -> . CLOSE
    (6) programa -> . OPEN
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE

  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
    OPEN            shift and go to state 2
    CLOSE           shift and go to state 4
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    $end            reduce using rule 22 (empty -> .)
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! CLOSE           [ reduce using rule 22 (empty -> .) ]
  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]

    programa                       shift and go to state 1
    declaracion                    shift and go to state 3
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 1

    (0) S' -> programa .



state 2

    (1) programa -> OPEN . declaracion CLOSE
    (2) programa -> OPEN . declaracion
    (6) programa -> OPEN .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 6 (programa -> OPEN .)
    $end            reduce using rule 6 (programa -> OPEN .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    CLOSE           reduce using rule 22 (empty -> .)
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]
  ! $end            [ reduce using rule 22 (empty -> .) ]

    declaracion                    shift and go to state 42
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 3

    (3) programa -> declaracion . CLOSE
    (4) programa -> declaracion .
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .
    (52) control_bucle -> declaracion .

  ! shift/reduce conflict for CLOSE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 4 (programa -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    CLOSE           shift and go to state 43
    $end            reduce using rule 4 (programa -> declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 44

  ! CLOSE           [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! $end            [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! CLOSE           [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! $end            [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! CLOSE           [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! $end            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! CLOSE           [ reduce using rule 156 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! $end            [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]
  ! CLOSE           [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! $end            [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]


state 4

    (5) programa -> CLOSE .

    $end            reduce using rule 5 (programa -> CLOSE .)


state 5

    (7) declaracion -> expression .

    CLOSE           reduce using rule 7 (declaracion -> expression .)
    RCORCHET        reduce using rule 7 (declaracion -> expression .)
    $end            reduce using rule 7 (declaracion -> expression .)
    ELSE            reduce using rule 7 (declaracion -> expression .)


state 6

    (8) declaracion -> expif .
    (44) expelse -> expif . ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> expif . ELSE LCORCHET declaracion
    (46) expelse -> expif . ELSE LCORCHET

  ! shift/reduce conflict for ELSE resolved as shift
    CLOSE           reduce using rule 8 (declaracion -> expif .)
    RCORCHET        reduce using rule 8 (declaracion -> expif .)
    $end            reduce using rule 8 (declaracion -> expif .)
    ELSE            shift and go to state 45

  ! ELSE            [ reduce using rule 8 (declaracion -> expif .) ]


state 7

    (9) declaracion -> expelse .

    CLOSE           reduce using rule 9 (declaracion -> expelse .)
    RCORCHET        reduce using rule 9 (declaracion -> expelse .)
    $end            reduce using rule 9 (declaracion -> expelse .)
    ELSE            reduce using rule 9 (declaracion -> expelse .)


state 8

    (10) declaracion -> expresionlogica .

    CLOSE           reduce using rule 10 (declaracion -> expresionlogica .)
    RCORCHET        reduce using rule 10 (declaracion -> expresionlogica .)
    $end            reduce using rule 10 (declaracion -> expresionlogica .)
    ELSE            reduce using rule 10 (declaracion -> expresionlogica .)


state 9

    (11) declaracion -> declararvariable .

    CLOSE           reduce using rule 11 (declaracion -> declararvariable .)
    RCORCHET        reduce using rule 11 (declaracion -> declararvariable .)
    $end            reduce using rule 11 (declaracion -> declararvariable .)
    ELSE            reduce using rule 11 (declaracion -> declararvariable .)


state 10

    (12) declaracion -> creacionfunciones .

    CLOSE           reduce using rule 12 (declaracion -> creacionfunciones .)
    RCORCHET        reduce using rule 12 (declaracion -> creacionfunciones .)
    $end            reduce using rule 12 (declaracion -> creacionfunciones .)
    ELSE            reduce using rule 12 (declaracion -> creacionfunciones .)


state 11

    (13) declaracion -> returnvalores .

    CLOSE           reduce using rule 13 (declaracion -> returnvalores .)
    RCORCHET        reduce using rule 13 (declaracion -> returnvalores .)
    $end            reduce using rule 13 (declaracion -> returnvalores .)
    ELSE            reduce using rule 13 (declaracion -> returnvalores .)


state 12

    (14) declaracion -> operador_object .

    CLOSE           reduce using rule 14 (declaracion -> operador_object .)
    RCORCHET        reduce using rule 14 (declaracion -> operador_object .)
    $end            reduce using rule 14 (declaracion -> operador_object .)
    ELSE            reduce using rule 14 (declaracion -> operador_object .)


state 13

    (15) declaracion -> print .

    CLOSE           reduce using rule 15 (declaracion -> print .)
    RCORCHET        reduce using rule 15 (declaracion -> print .)
    $end            reduce using rule 15 (declaracion -> print .)
    ELSE            reduce using rule 15 (declaracion -> print .)


state 14

    (16) declaracion -> arreglos .

    CLOSE           reduce using rule 16 (declaracion -> arreglos .)
    RCORCHET        reduce using rule 16 (declaracion -> arreglos .)
    $end            reduce using rule 16 (declaracion -> arreglos .)
    ELSE            reduce using rule 16 (declaracion -> arreglos .)


state 15

    (17) declaracion -> while .

    CLOSE           reduce using rule 17 (declaracion -> while .)
    RCORCHET        reduce using rule 17 (declaracion -> while .)
    $end            reduce using rule 17 (declaracion -> while .)
    ELSE            reduce using rule 17 (declaracion -> while .)


state 16

    (18) declaracion -> foreach .

    CLOSE           reduce using rule 18 (declaracion -> foreach .)
    RCORCHET        reduce using rule 18 (declaracion -> foreach .)
    $end            reduce using rule 18 (declaracion -> foreach .)
    ELSE            reduce using rule 18 (declaracion -> foreach .)


state 17

    (19) declaracion -> clase .

    CLOSE           reduce using rule 19 (declaracion -> clase .)
    RCORCHET        reduce using rule 19 (declaracion -> clase .)
    $end            reduce using rule 19 (declaracion -> clase .)
    ELSE            reduce using rule 19 (declaracion -> clase .)


state 18

    (28) expression -> ID . EQUALS operacion_matematica END
    (79) expresionlogica -> ID . operadorlogico ID
    (84) declararvariable -> ID . EQUALS tipo END
    (95) operador_object -> ID . EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (80) operadorlogico -> . AND
    (81) operadorlogico -> . OR
    (82) operadorlogico -> . XOR
    (83) operadorlogico -> . NOT

    EQUALS          shift and go to state 46
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 19

    (39) expif -> funcion_condicion . LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> funcion_condicion . LPAREN comparacion RPAREN LCORCHET

    LPAREN          shift and go to state 52


state 20

    (43) expif -> RCORCHET .
    (49) expelse -> RCORCHET .
    (59) while -> RCORCHET .
    (64) foreach -> RCORCHET .
    (157) clase -> RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 43 (expif -> RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (expif -> RCORCHET .)
    CLOSE           reduce using rule 43 (expif -> RCORCHET .)
    RCORCHET        reduce using rule 43 (expif -> RCORCHET .)
    $end            reduce using rule 43 (expif -> RCORCHET .)
    ELSE            reduce using rule 43 (expif -> RCORCHET .)

  ! CLOSE           [ reduce using rule 49 (expelse -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 49 (expelse -> RCORCHET .) ]
  ! $end            [ reduce using rule 49 (expelse -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 49 (expelse -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 59 (while -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 59 (while -> RCORCHET .) ]
  ! $end            [ reduce using rule 59 (while -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 59 (while -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 64 (foreach -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 64 (foreach -> RCORCHET .) ]
  ! $end            [ reduce using rule 64 (foreach -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 64 (foreach -> RCORCHET .) ]
  ! CLOSE           [ reduce using rule 157 (clase -> RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 157 (clase -> RCORCHET .) ]
  ! $end            [ reduce using rule 157 (clase -> RCORCHET .) ]
  ! ELSE            [ reduce using rule 157 (clase -> RCORCHET .) ]


state 21

    (21) creacionfunciones -> FUNCTION . FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET

    FNOMBRE         shift and go to state 53


state 22

    (25) returnvalores -> RETURN . termino END
    (26) returnvalores -> RETURN . creacionfunciones
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET

    NUMBER          shift and go to state 56
    ID              shift and go to state 57
    DECIMAL         shift and go to state 58
    FUNCTION        shift and go to state 21

    termino                        shift and go to state 54
    creacionfunciones              shift and go to state 55

state 23

    (27) returnvalores -> empty .

    CLOSE           reduce using rule 27 (returnvalores -> empty .)
    RCORCHET        reduce using rule 27 (returnvalores -> empty .)
    $end            reduce using rule 27 (returnvalores -> empty .)
    ELSE            reduce using rule 27 (returnvalores -> empty .)


state 24

    (106) print -> funcion_print . LPAREN argument RPAREN END
    (107) print -> funcion_print . argument END
    (110) argument -> . ID
    (111) argument -> . TEXT

    LPAREN          shift and go to state 59
    ID              shift and go to state 61
    TEXT            shift and go to state 62

    argument                       shift and go to state 60

state 25

    (108) print -> ECHO . LPAREN valores_echo RPAREN END
    (109) print -> ECHO . valores_echo END
    (115) funcion_print -> ECHO .
    (112) valores_echo -> . argument COMA valores_echo
    (113) valores_echo -> . argument
    (110) argument -> . ID
    (111) argument -> . TEXT

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
    LPAREN          shift and go to state 63
    ID              shift and go to state 61
    TEXT            shift and go to state 62

  ! LPAREN          [ reduce using rule 115 (funcion_print -> ECHO .) ]
  ! ID              [ reduce using rule 115 (funcion_print -> ECHO .) ]
  ! TEXT            [ reduce using rule 115 (funcion_print -> ECHO .) ]

    valores_echo                   shift and go to state 64
    argument                       shift and go to state 65

state 26

    (119) arreglos -> funcion_arreglo . LPAREN ID RPAREN

    LPAREN          shift and go to state 66


state 27

    (55) while -> WHILE . LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> WHILE . LPAREN comparacion RPAREN LCORCHET

    LPAREN          shift and go to state 67


state 28

    (57) while -> control_bucle . RCORCHET
    (58) while -> control_bucle .
    (62) foreach -> control_bucle . RCORCHET
    (63) foreach -> control_bucle .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 58 (while -> control_bucle .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 58 (while -> control_bucle .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (while -> control_bucle .)
    RCORCHET        shift and go to state 68
    CLOSE           reduce using rule 58 (while -> control_bucle .)
    $end            reduce using rule 58 (while -> control_bucle .)
    ELSE            reduce using rule 58 (while -> control_bucle .)

  ! RCORCHET        [ reduce using rule 58 (while -> control_bucle .) ]
  ! CLOSE           [ reduce using rule 63 (foreach -> control_bucle .) ]
  ! RCORCHET        [ reduce using rule 63 (foreach -> control_bucle .) ]
  ! $end            [ reduce using rule 63 (foreach -> control_bucle .) ]
  ! ELSE            [ reduce using rule 63 (foreach -> control_bucle .) ]


state 29

    (60) foreach -> FOREACH . LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> FOREACH . LPAREN ID AS ID RPAREN LCORCHET

    LPAREN          shift and go to state 69


state 30

    (153) clase -> CLASS . FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> CLASS . FNOMBRE LCORCHET

    FNOMBRE         shift and go to state 70


state 31

    (50) funcion_condicion -> IF .

    LPAREN          reduce using rule 50 (funcion_condicion -> IF .)


state 32

    (51) funcion_condicion -> ELSEIF .

    LPAREN          reduce using rule 51 (funcion_condicion -> ELSEIF .)


state 33

    (114) funcion_print -> VAR_EXPORT .

    LPAREN          reduce using rule 114 (funcion_print -> VAR_EXPORT .)
    ID              reduce using rule 114 (funcion_print -> VAR_EXPORT .)
    TEXT            reduce using rule 114 (funcion_print -> VAR_EXPORT .)


state 34

    (116) funcion_print -> PRINT .

    LPAREN          reduce using rule 116 (funcion_print -> PRINT .)
    ID              reduce using rule 116 (funcion_print -> PRINT .)
    TEXT            reduce using rule 116 (funcion_print -> PRINT .)


state 35

    (117) funcion_print -> PRINT_R .

    LPAREN          reduce using rule 117 (funcion_print -> PRINT_R .)
    ID              reduce using rule 117 (funcion_print -> PRINT_R .)
    TEXT            reduce using rule 117 (funcion_print -> PRINT_R .)


state 36

    (118) funcion_print -> VAR_DUMP .

    LPAREN          reduce using rule 118 (funcion_print -> VAR_DUMP .)
    ID              reduce using rule 118 (funcion_print -> VAR_DUMP .)
    TEXT            reduce using rule 118 (funcion_print -> VAR_DUMP .)


state 37

    (135) funcion_arreglo -> SUFFLE .

    LPAREN          reduce using rule 135 (funcion_arreglo -> SUFFLE .)


state 38

    (136) funcion_arreglo -> ARRAY_UNIQUE .

    LPAREN          reduce using rule 136 (funcion_arreglo -> ARRAY_UNIQUE .)


state 39

    (137) funcion_arreglo -> SIZEOF .

    LPAREN          reduce using rule 137 (funcion_arreglo -> SIZEOF .)


state 40

    (53) control_bucle -> BREAK .

    CLOSE           reduce using rule 53 (control_bucle -> BREAK .)
    RCORCHET        reduce using rule 53 (control_bucle -> BREAK .)
    $end            reduce using rule 53 (control_bucle -> BREAK .)
    ELSE            reduce using rule 53 (control_bucle -> BREAK .)


state 41

    (54) control_bucle -> CONTINUE .

    CLOSE           reduce using rule 54 (control_bucle -> CONTINUE .)
    RCORCHET        reduce using rule 54 (control_bucle -> CONTINUE .)
    $end            reduce using rule 54 (control_bucle -> CONTINUE .)
    ELSE            reduce using rule 54 (control_bucle -> CONTINUE .)


state 42

    (1) programa -> OPEN declaracion . CLOSE
    (2) programa -> OPEN declaracion .
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .
    (52) control_bucle -> declaracion .

  ! shift/reduce conflict for CLOSE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for CLOSE resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 2 (programa -> OPEN declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    CLOSE           shift and go to state 71
    $end            reduce using rule 2 (programa -> OPEN declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 44

  ! CLOSE           [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! $end            [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! CLOSE           [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! $end            [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! CLOSE           [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! $end            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! CLOSE           [ reduce using rule 156 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! $end            [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]
  ! CLOSE           [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! $end            [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]


state 43

    (3) programa -> declaracion CLOSE .

    $end            reduce using rule 3 (programa -> declaracion CLOSE .)


state 44

    (41) expif -> declaracion RCORCHET .
    (48) expelse -> declaracion RCORCHET .
    (155) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
    CLOSE           reduce using rule 41 (expif -> declaracion RCORCHET .)
    RCORCHET        reduce using rule 41 (expif -> declaracion RCORCHET .)
    $end            reduce using rule 41 (expif -> declaracion RCORCHET .)
    ELSE            reduce using rule 41 (expif -> declaracion RCORCHET .)

  ! CLOSE           [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]


state 45

    (44) expelse -> expif ELSE . LCORCHET declaracion RCORCHET
    (45) expelse -> expif ELSE . LCORCHET declaracion
    (46) expelse -> expif ELSE . LCORCHET

    LCORCHET        shift and go to state 72


state 46

    (28) expression -> ID EQUALS . operacion_matematica END
    (84) declararvariable -> ID EQUALS . tipo END
    (95) operador_object -> ID EQUALS . OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (29) operacion_matematica -> . termino operadores operacion_matematica
    (30) operacion_matematica -> . termino operadores termino
    (85) tipo -> . boolean
    (86) tipo -> . NUMBER
    (87) tipo -> . TEXT
    (88) tipo -> . NULL
    (89) tipo -> . archivos
    (90) tipo -> . array
    (91) tipo -> . new
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL
    (92) boolean -> . TRUE
    (93) boolean -> . FALSE
    (94) boolean -> . expresionlogica
    (138) archivos -> . funcion_corta
    (139) archivos -> . estructura_funcion
    (96) array -> . ARRAY LPAREN valores_array RPAREN
    (105) new -> . NEW FNOMBRE
    (79) expresionlogica -> . ID operadorlogico ID
    (140) funcion_corta -> . FGETS LPAREN ID COMA NUMBER RPAREN
    (141) estructura_funcion -> . funcion_archivo LPAREN opcion RPAREN
    (144) funcion_archivo -> . FREAD
    (145) funcion_archivo -> . FSCANF
    (146) funcion_archivo -> . FPASSTHRU
    (147) funcion_archivo -> . FGETCSV
    (148) funcion_archivo -> . FGETC
    (149) funcion_archivo -> . FILE_GET_CONTENTS
    (150) funcion_archivo -> . READFILE
    (151) funcion_archivo -> . FILE
    (152) funcion_archivo -> . PARSE_INI_FILE

    OBJECT_OPERATOR shift and go to state 76
    NUMBER          shift and go to state 79
    TEXT            shift and go to state 80
    NULL            shift and go to state 81
    ID              shift and go to state 73
    DECIMAL         shift and go to state 58
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    ARRAY           shift and go to state 90
    NEW             shift and go to state 91
    FGETS           shift and go to state 92
    FREAD           shift and go to state 94
    FSCANF          shift and go to state 95
    FPASSTHRU       shift and go to state 96
    FGETCSV         shift and go to state 97
    FGETC           shift and go to state 98
    FILE_GET_CONTENTS shift and go to state 99
    READFILE        shift and go to state 100
    FILE            shift and go to state 101
    PARSE_INI_FILE  shift and go to state 102

    operacion_matematica           shift and go to state 74
    tipo                           shift and go to state 75
    termino                        shift and go to state 77
    boolean                        shift and go to state 78
    archivos                       shift and go to state 82
    array                          shift and go to state 83
    new                            shift and go to state 84
    expresionlogica                shift and go to state 87
    funcion_corta                  shift and go to state 88
    estructura_funcion             shift and go to state 89
    funcion_archivo                shift and go to state 93

state 47

    (79) expresionlogica -> ID operadorlogico . ID

    ID              shift and go to state 103


state 48

    (80) operadorlogico -> AND .

    ID              reduce using rule 80 (operadorlogico -> AND .)


state 49

    (81) operadorlogico -> OR .

    ID              reduce using rule 81 (operadorlogico -> OR .)


state 50

    (82) operadorlogico -> XOR .

    ID              reduce using rule 82 (operadorlogico -> XOR .)


state 51

    (83) operadorlogico -> NOT .

    ID              reduce using rule 83 (operadorlogico -> NOT .)


state 52

    (39) expif -> funcion_condicion LPAREN . comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> funcion_condicion LPAREN . comparacion RPAREN LCORCHET
    (65) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (66) valor_comparado -> . NUMBER
    (67) valor_comparado -> . boolean
    (68) valor_comparado -> . operacion_matematica
    (69) valor_comparado -> . ID
    (92) boolean -> . TRUE
    (93) boolean -> . FALSE
    (94) boolean -> . expresionlogica
    (29) operacion_matematica -> . termino operadores operacion_matematica
    (30) operacion_matematica -> . termino operadores termino
    (79) expresionlogica -> . ID operadorlogico ID
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 106
    ID              shift and go to state 109
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    DECIMAL         shift and go to state 58

    comparacion                    shift and go to state 104
    valor_comparado                shift and go to state 105
    boolean                        shift and go to state 107
    operacion_matematica           shift and go to state 108
    expresionlogica                shift and go to state 87
    termino                        shift and go to state 77

state 53

    (21) creacionfunciones -> FUNCTION FNOMBRE . LPAREN RPAREN LCORCHET declaracion RCORCHET

    LPAREN          shift and go to state 110


state 54

    (25) returnvalores -> RETURN termino . END

    END             shift and go to state 111


state 55

    (26) returnvalores -> RETURN creacionfunciones .

    CLOSE           reduce using rule 26 (returnvalores -> RETURN creacionfunciones .)
    RCORCHET        reduce using rule 26 (returnvalores -> RETURN creacionfunciones .)
    $end            reduce using rule 26 (returnvalores -> RETURN creacionfunciones .)
    ELSE            reduce using rule 26 (returnvalores -> RETURN creacionfunciones .)


state 56

    (36) termino -> NUMBER .

    END             reduce using rule 36 (termino -> NUMBER .)
    PLUS            reduce using rule 36 (termino -> NUMBER .)
    MINUS           reduce using rule 36 (termino -> NUMBER .)
    DIVIDE          reduce using rule 36 (termino -> NUMBER .)
    TIMES           reduce using rule 36 (termino -> NUMBER .)
    MODULO          reduce using rule 36 (termino -> NUMBER .)
    IS_EQUAL        reduce using rule 36 (termino -> NUMBER .)
    IS_IDENTICAL    reduce using rule 36 (termino -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 36 (termino -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 36 (termino -> NUMBER .)
    IS_GREATER_OR_EQUAL reduce using rule 36 (termino -> NUMBER .)
    IS_SMALLER_OR_EQUAL reduce using rule 36 (termino -> NUMBER .)
    SPACESHIP       reduce using rule 36 (termino -> NUMBER .)
    MAYORQUE        reduce using rule 36 (termino -> NUMBER .)
    MENORQUE        reduce using rule 36 (termino -> NUMBER .)
    RPAREN          reduce using rule 36 (termino -> NUMBER .)


state 57

    (37) termino -> ID .

    END             reduce using rule 37 (termino -> ID .)
    PLUS            reduce using rule 37 (termino -> ID .)
    MINUS           reduce using rule 37 (termino -> ID .)
    DIVIDE          reduce using rule 37 (termino -> ID .)
    TIMES           reduce using rule 37 (termino -> ID .)
    MODULO          reduce using rule 37 (termino -> ID .)
    IS_EQUAL        reduce using rule 37 (termino -> ID .)
    IS_IDENTICAL    reduce using rule 37 (termino -> ID .)
    IS_NOT_EQUAL    reduce using rule 37 (termino -> ID .)
    IS_NOT_IDENTICAL reduce using rule 37 (termino -> ID .)
    IS_GREATER_OR_EQUAL reduce using rule 37 (termino -> ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 37 (termino -> ID .)
    SPACESHIP       reduce using rule 37 (termino -> ID .)
    MAYORQUE        reduce using rule 37 (termino -> ID .)
    MENORQUE        reduce using rule 37 (termino -> ID .)
    RPAREN          reduce using rule 37 (termino -> ID .)


state 58

    (38) termino -> DECIMAL .

    END             reduce using rule 38 (termino -> DECIMAL .)
    PLUS            reduce using rule 38 (termino -> DECIMAL .)
    MINUS           reduce using rule 38 (termino -> DECIMAL .)
    DIVIDE          reduce using rule 38 (termino -> DECIMAL .)
    TIMES           reduce using rule 38 (termino -> DECIMAL .)
    MODULO          reduce using rule 38 (termino -> DECIMAL .)
    IS_EQUAL        reduce using rule 38 (termino -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 38 (termino -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 38 (termino -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 38 (termino -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 38 (termino -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 38 (termino -> DECIMAL .)
    SPACESHIP       reduce using rule 38 (termino -> DECIMAL .)
    MAYORQUE        reduce using rule 38 (termino -> DECIMAL .)
    MENORQUE        reduce using rule 38 (termino -> DECIMAL .)
    RPAREN          reduce using rule 38 (termino -> DECIMAL .)


state 59

    (106) print -> funcion_print LPAREN . argument RPAREN END
    (110) argument -> . ID
    (111) argument -> . TEXT

    ID              shift and go to state 61
    TEXT            shift and go to state 62

    argument                       shift and go to state 112

state 60

    (107) print -> funcion_print argument . END

    END             shift and go to state 113


state 61

    (110) argument -> ID .

    END             reduce using rule 110 (argument -> ID .)
    COMA            reduce using rule 110 (argument -> ID .)
    RPAREN          reduce using rule 110 (argument -> ID .)


state 62

    (111) argument -> TEXT .

    END             reduce using rule 111 (argument -> TEXT .)
    COMA            reduce using rule 111 (argument -> TEXT .)
    RPAREN          reduce using rule 111 (argument -> TEXT .)


state 63

    (108) print -> ECHO LPAREN . valores_echo RPAREN END
    (112) valores_echo -> . argument COMA valores_echo
    (113) valores_echo -> . argument
    (110) argument -> . ID
    (111) argument -> . TEXT

    ID              shift and go to state 61
    TEXT            shift and go to state 62

    valores_echo                   shift and go to state 114
    argument                       shift and go to state 65

state 64

    (109) print -> ECHO valores_echo . END

    END             shift and go to state 115


state 65

    (112) valores_echo -> argument . COMA valores_echo
    (113) valores_echo -> argument .

    COMA            shift and go to state 116
    END             reduce using rule 113 (valores_echo -> argument .)
    RPAREN          reduce using rule 113 (valores_echo -> argument .)


state 66

    (119) arreglos -> funcion_arreglo LPAREN . ID RPAREN

    ID              shift and go to state 117


state 67

    (55) while -> WHILE LPAREN . comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> WHILE LPAREN . comparacion RPAREN LCORCHET
    (65) comparacion -> . valor_comparado operadorcomparacion valor_comparado
    (66) valor_comparado -> . NUMBER
    (67) valor_comparado -> . boolean
    (68) valor_comparado -> . operacion_matematica
    (69) valor_comparado -> . ID
    (92) boolean -> . TRUE
    (93) boolean -> . FALSE
    (94) boolean -> . expresionlogica
    (29) operacion_matematica -> . termino operadores operacion_matematica
    (30) operacion_matematica -> . termino operadores termino
    (79) expresionlogica -> . ID operadorlogico ID
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 106
    ID              shift and go to state 109
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    DECIMAL         shift and go to state 58

    comparacion                    shift and go to state 118
    valor_comparado                shift and go to state 105
    boolean                        shift and go to state 107
    operacion_matematica           shift and go to state 108
    expresionlogica                shift and go to state 87
    termino                        shift and go to state 77

state 68

    (57) while -> control_bucle RCORCHET .
    (62) foreach -> control_bucle RCORCHET .

  ! reduce/reduce conflict for CLOSE resolved using rule 57 (while -> control_bucle RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 57 (while -> control_bucle RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 57 (while -> control_bucle RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (while -> control_bucle RCORCHET .)
    CLOSE           reduce using rule 57 (while -> control_bucle RCORCHET .)
    RCORCHET        reduce using rule 57 (while -> control_bucle RCORCHET .)
    $end            reduce using rule 57 (while -> control_bucle RCORCHET .)
    ELSE            reduce using rule 57 (while -> control_bucle RCORCHET .)

  ! CLOSE           [ reduce using rule 62 (foreach -> control_bucle RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 62 (foreach -> control_bucle RCORCHET .) ]
  ! $end            [ reduce using rule 62 (foreach -> control_bucle RCORCHET .) ]
  ! ELSE            [ reduce using rule 62 (foreach -> control_bucle RCORCHET .) ]


state 69

    (60) foreach -> FOREACH LPAREN . ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> FOREACH LPAREN . ID AS ID RPAREN LCORCHET

    ID              shift and go to state 119


state 70

    (153) clase -> CLASS FNOMBRE . LCORCHET declaracion RCORCHET
    (154) clase -> CLASS FNOMBRE . LCORCHET

    LCORCHET        shift and go to state 120


state 71

    (1) programa -> OPEN declaracion CLOSE .

    $end            reduce using rule 1 (programa -> OPEN declaracion CLOSE .)


state 72

    (44) expelse -> expif ELSE LCORCHET . declaracion RCORCHET
    (45) expelse -> expif ELSE LCORCHET . declaracion
    (46) expelse -> expif ELSE LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 22 (empty -> .)
  ! reduce/reduce conflict for $end resolved using rule 22 (empty -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 22 (empty -> .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    CLOSE           reduce using rule 22 (empty -> .)
    $end            reduce using rule 22 (empty -> .)
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! CLOSE           [ reduce using rule 46 (expelse -> expif ELSE LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 46 (expelse -> expif ELSE LCORCHET .) ]
  ! $end            [ reduce using rule 46 (expelse -> expif ELSE LCORCHET .) ]
  ! ELSE            [ reduce using rule 46 (expelse -> expif ELSE LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]

    expif                          shift and go to state 6
    declaracion                    shift and go to state 121
    expression                     shift and go to state 5
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 73

    (37) termino -> ID .
    (79) expresionlogica -> ID . operadorlogico ID
    (80) operadorlogico -> . AND
    (81) operadorlogico -> . OR
    (82) operadorlogico -> . XOR
    (83) operadorlogico -> . NOT

    PLUS            reduce using rule 37 (termino -> ID .)
    MINUS           reduce using rule 37 (termino -> ID .)
    DIVIDE          reduce using rule 37 (termino -> ID .)
    TIMES           reduce using rule 37 (termino -> ID .)
    MODULO          reduce using rule 37 (termino -> ID .)
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 74

    (28) expression -> ID EQUALS operacion_matematica . END

    END             shift and go to state 122


state 75

    (84) declararvariable -> ID EQUALS tipo . END

    END             shift and go to state 123


state 76

    (95) operador_object -> ID EQUALS OBJECT_OPERATOR . FNOMBRE LPAREN argumentos RPAREN END

    FNOMBRE         shift and go to state 124


state 77

    (29) operacion_matematica -> termino . operadores operacion_matematica
    (30) operacion_matematica -> termino . operadores termino
    (31) operadores -> . PLUS
    (32) operadores -> . MINUS
    (33) operadores -> . DIVIDE
    (34) operadores -> . TIMES
    (35) operadores -> . MODULO

    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    DIVIDE          shift and go to state 128
    TIMES           shift and go to state 129
    MODULO          shift and go to state 130

    operadores                     shift and go to state 125

state 78

    (85) tipo -> boolean .

    END             reduce using rule 85 (tipo -> boolean .)


state 79

    (86) tipo -> NUMBER .
    (36) termino -> NUMBER .

    END             reduce using rule 86 (tipo -> NUMBER .)
    PLUS            reduce using rule 36 (termino -> NUMBER .)
    MINUS           reduce using rule 36 (termino -> NUMBER .)
    DIVIDE          reduce using rule 36 (termino -> NUMBER .)
    TIMES           reduce using rule 36 (termino -> NUMBER .)
    MODULO          reduce using rule 36 (termino -> NUMBER .)


state 80

    (87) tipo -> TEXT .

    END             reduce using rule 87 (tipo -> TEXT .)


state 81

    (88) tipo -> NULL .

    END             reduce using rule 88 (tipo -> NULL .)


state 82

    (89) tipo -> archivos .

    END             reduce using rule 89 (tipo -> archivos .)


state 83

    (90) tipo -> array .

    END             reduce using rule 90 (tipo -> array .)


state 84

    (91) tipo -> new .

    END             reduce using rule 91 (tipo -> new .)


state 85

    (92) boolean -> TRUE .

    END             reduce using rule 92 (boolean -> TRUE .)
    IS_EQUAL        reduce using rule 92 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 92 (boolean -> TRUE .)
    IS_NOT_EQUAL    reduce using rule 92 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 92 (boolean -> TRUE .)
    IS_GREATER_OR_EQUAL reduce using rule 92 (boolean -> TRUE .)
    IS_SMALLER_OR_EQUAL reduce using rule 92 (boolean -> TRUE .)
    SPACESHIP       reduce using rule 92 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 92 (boolean -> TRUE .)
    MENORQUE        reduce using rule 92 (boolean -> TRUE .)
    COMA            reduce using rule 92 (boolean -> TRUE .)
    RPAREN          reduce using rule 92 (boolean -> TRUE .)


state 86

    (93) boolean -> FALSE .

    END             reduce using rule 93 (boolean -> FALSE .)
    IS_EQUAL        reduce using rule 93 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 93 (boolean -> FALSE .)
    IS_NOT_EQUAL    reduce using rule 93 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 93 (boolean -> FALSE .)
    IS_GREATER_OR_EQUAL reduce using rule 93 (boolean -> FALSE .)
    IS_SMALLER_OR_EQUAL reduce using rule 93 (boolean -> FALSE .)
    SPACESHIP       reduce using rule 93 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 93 (boolean -> FALSE .)
    MENORQUE        reduce using rule 93 (boolean -> FALSE .)
    COMA            reduce using rule 93 (boolean -> FALSE .)
    RPAREN          reduce using rule 93 (boolean -> FALSE .)


state 87

    (94) boolean -> expresionlogica .

    END             reduce using rule 94 (boolean -> expresionlogica .)
    IS_EQUAL        reduce using rule 94 (boolean -> expresionlogica .)
    IS_IDENTICAL    reduce using rule 94 (boolean -> expresionlogica .)
    IS_NOT_EQUAL    reduce using rule 94 (boolean -> expresionlogica .)
    IS_NOT_IDENTICAL reduce using rule 94 (boolean -> expresionlogica .)
    IS_GREATER_OR_EQUAL reduce using rule 94 (boolean -> expresionlogica .)
    IS_SMALLER_OR_EQUAL reduce using rule 94 (boolean -> expresionlogica .)
    SPACESHIP       reduce using rule 94 (boolean -> expresionlogica .)
    MAYORQUE        reduce using rule 94 (boolean -> expresionlogica .)
    MENORQUE        reduce using rule 94 (boolean -> expresionlogica .)
    COMA            reduce using rule 94 (boolean -> expresionlogica .)
    RPAREN          reduce using rule 94 (boolean -> expresionlogica .)


state 88

    (138) archivos -> funcion_corta .

    END             reduce using rule 138 (archivos -> funcion_corta .)


state 89

    (139) archivos -> estructura_funcion .

    END             reduce using rule 139 (archivos -> estructura_funcion .)


state 90

    (96) array -> ARRAY . LPAREN valores_array RPAREN

    LPAREN          shift and go to state 131


state 91

    (105) new -> NEW . FNOMBRE

    FNOMBRE         shift and go to state 132


state 92

    (140) funcion_corta -> FGETS . LPAREN ID COMA NUMBER RPAREN

    LPAREN          shift and go to state 133


state 93

    (141) estructura_funcion -> funcion_archivo . LPAREN opcion RPAREN

    LPAREN          shift and go to state 134


state 94

    (144) funcion_archivo -> FREAD .

    LPAREN          reduce using rule 144 (funcion_archivo -> FREAD .)


state 95

    (145) funcion_archivo -> FSCANF .

    LPAREN          reduce using rule 145 (funcion_archivo -> FSCANF .)


state 96

    (146) funcion_archivo -> FPASSTHRU .

    LPAREN          reduce using rule 146 (funcion_archivo -> FPASSTHRU .)


state 97

    (147) funcion_archivo -> FGETCSV .

    LPAREN          reduce using rule 147 (funcion_archivo -> FGETCSV .)


state 98

    (148) funcion_archivo -> FGETC .

    LPAREN          reduce using rule 148 (funcion_archivo -> FGETC .)


state 99

    (149) funcion_archivo -> FILE_GET_CONTENTS .

    LPAREN          reduce using rule 149 (funcion_archivo -> FILE_GET_CONTENTS .)


state 100

    (150) funcion_archivo -> READFILE .

    LPAREN          reduce using rule 150 (funcion_archivo -> READFILE .)


state 101

    (151) funcion_archivo -> FILE .

    LPAREN          reduce using rule 151 (funcion_archivo -> FILE .)


state 102

    (152) funcion_archivo -> PARSE_INI_FILE .

    LPAREN          reduce using rule 152 (funcion_archivo -> PARSE_INI_FILE .)


state 103

    (79) expresionlogica -> ID operadorlogico ID .

    CLOSE           reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    RCORCHET        reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    $end            reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    ELSE            reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    END             reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    IS_EQUAL        reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    IS_IDENTICAL    reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    IS_NOT_EQUAL    reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    IS_NOT_IDENTICAL reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    IS_GREATER_OR_EQUAL reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    SPACESHIP       reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    MAYORQUE        reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    MENORQUE        reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    COMA            reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)
    RPAREN          reduce using rule 79 (expresionlogica -> ID operadorlogico ID .)


state 104

    (39) expif -> funcion_condicion LPAREN comparacion . RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> funcion_condicion LPAREN comparacion . RPAREN LCORCHET

    RPAREN          shift and go to state 135


state 105

    (65) comparacion -> valor_comparado . operadorcomparacion valor_comparado
    (70) operadorcomparacion -> . IS_EQUAL
    (71) operadorcomparacion -> . IS_IDENTICAL
    (72) operadorcomparacion -> . IS_NOT_EQUAL
    (73) operadorcomparacion -> . IS_NOT_IDENTICAL
    (74) operadorcomparacion -> . IS_GREATER_OR_EQUAL
    (75) operadorcomparacion -> . IS_SMALLER_OR_EQUAL
    (76) operadorcomparacion -> . SPACESHIP
    (77) operadorcomparacion -> . MAYORQUE
    (78) operadorcomparacion -> . MENORQUE

    IS_EQUAL        shift and go to state 137
    IS_IDENTICAL    shift and go to state 138
    IS_NOT_EQUAL    shift and go to state 139
    IS_NOT_IDENTICAL shift and go to state 140
    IS_GREATER_OR_EQUAL shift and go to state 141
    IS_SMALLER_OR_EQUAL shift and go to state 142
    SPACESHIP       shift and go to state 143
    MAYORQUE        shift and go to state 144
    MENORQUE        shift and go to state 145

    operadorcomparacion            shift and go to state 136

state 106

    (66) valor_comparado -> NUMBER .
    (36) termino -> NUMBER .

    IS_EQUAL        reduce using rule 66 (valor_comparado -> NUMBER .)
    IS_IDENTICAL    reduce using rule 66 (valor_comparado -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 66 (valor_comparado -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 66 (valor_comparado -> NUMBER .)
    IS_GREATER_OR_EQUAL reduce using rule 66 (valor_comparado -> NUMBER .)
    IS_SMALLER_OR_EQUAL reduce using rule 66 (valor_comparado -> NUMBER .)
    SPACESHIP       reduce using rule 66 (valor_comparado -> NUMBER .)
    MAYORQUE        reduce using rule 66 (valor_comparado -> NUMBER .)
    MENORQUE        reduce using rule 66 (valor_comparado -> NUMBER .)
    RPAREN          reduce using rule 66 (valor_comparado -> NUMBER .)
    PLUS            reduce using rule 36 (termino -> NUMBER .)
    MINUS           reduce using rule 36 (termino -> NUMBER .)
    DIVIDE          reduce using rule 36 (termino -> NUMBER .)
    TIMES           reduce using rule 36 (termino -> NUMBER .)
    MODULO          reduce using rule 36 (termino -> NUMBER .)


state 107

    (67) valor_comparado -> boolean .

    IS_EQUAL        reduce using rule 67 (valor_comparado -> boolean .)
    IS_IDENTICAL    reduce using rule 67 (valor_comparado -> boolean .)
    IS_NOT_EQUAL    reduce using rule 67 (valor_comparado -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 67 (valor_comparado -> boolean .)
    IS_GREATER_OR_EQUAL reduce using rule 67 (valor_comparado -> boolean .)
    IS_SMALLER_OR_EQUAL reduce using rule 67 (valor_comparado -> boolean .)
    SPACESHIP       reduce using rule 67 (valor_comparado -> boolean .)
    MAYORQUE        reduce using rule 67 (valor_comparado -> boolean .)
    MENORQUE        reduce using rule 67 (valor_comparado -> boolean .)
    RPAREN          reduce using rule 67 (valor_comparado -> boolean .)


state 108

    (68) valor_comparado -> operacion_matematica .

    IS_EQUAL        reduce using rule 68 (valor_comparado -> operacion_matematica .)
    IS_IDENTICAL    reduce using rule 68 (valor_comparado -> operacion_matematica .)
    IS_NOT_EQUAL    reduce using rule 68 (valor_comparado -> operacion_matematica .)
    IS_NOT_IDENTICAL reduce using rule 68 (valor_comparado -> operacion_matematica .)
    IS_GREATER_OR_EQUAL reduce using rule 68 (valor_comparado -> operacion_matematica .)
    IS_SMALLER_OR_EQUAL reduce using rule 68 (valor_comparado -> operacion_matematica .)
    SPACESHIP       reduce using rule 68 (valor_comparado -> operacion_matematica .)
    MAYORQUE        reduce using rule 68 (valor_comparado -> operacion_matematica .)
    MENORQUE        reduce using rule 68 (valor_comparado -> operacion_matematica .)
    RPAREN          reduce using rule 68 (valor_comparado -> operacion_matematica .)


state 109

    (69) valor_comparado -> ID .
    (79) expresionlogica -> ID . operadorlogico ID
    (37) termino -> ID .
    (80) operadorlogico -> . AND
    (81) operadorlogico -> . OR
    (82) operadorlogico -> . XOR
    (83) operadorlogico -> . NOT

    IS_EQUAL        reduce using rule 69 (valor_comparado -> ID .)
    IS_IDENTICAL    reduce using rule 69 (valor_comparado -> ID .)
    IS_NOT_EQUAL    reduce using rule 69 (valor_comparado -> ID .)
    IS_NOT_IDENTICAL reduce using rule 69 (valor_comparado -> ID .)
    IS_GREATER_OR_EQUAL reduce using rule 69 (valor_comparado -> ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 69 (valor_comparado -> ID .)
    SPACESHIP       reduce using rule 69 (valor_comparado -> ID .)
    MAYORQUE        reduce using rule 69 (valor_comparado -> ID .)
    MENORQUE        reduce using rule 69 (valor_comparado -> ID .)
    RPAREN          reduce using rule 69 (valor_comparado -> ID .)
    PLUS            reduce using rule 37 (termino -> ID .)
    MINUS           reduce using rule 37 (termino -> ID .)
    DIVIDE          reduce using rule 37 (termino -> ID .)
    TIMES           reduce using rule 37 (termino -> ID .)
    MODULO          reduce using rule 37 (termino -> ID .)
    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 110

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN . RPAREN LCORCHET declaracion RCORCHET

    RPAREN          shift and go to state 146


state 111

    (25) returnvalores -> RETURN termino END .

    CLOSE           reduce using rule 25 (returnvalores -> RETURN termino END .)
    RCORCHET        reduce using rule 25 (returnvalores -> RETURN termino END .)
    $end            reduce using rule 25 (returnvalores -> RETURN termino END .)
    ELSE            reduce using rule 25 (returnvalores -> RETURN termino END .)


state 112

    (106) print -> funcion_print LPAREN argument . RPAREN END

    RPAREN          shift and go to state 147


state 113

    (107) print -> funcion_print argument END .

    CLOSE           reduce using rule 107 (print -> funcion_print argument END .)
    RCORCHET        reduce using rule 107 (print -> funcion_print argument END .)
    $end            reduce using rule 107 (print -> funcion_print argument END .)
    ELSE            reduce using rule 107 (print -> funcion_print argument END .)


state 114

    (108) print -> ECHO LPAREN valores_echo . RPAREN END

    RPAREN          shift and go to state 148


state 115

    (109) print -> ECHO valores_echo END .

    CLOSE           reduce using rule 109 (print -> ECHO valores_echo END .)
    RCORCHET        reduce using rule 109 (print -> ECHO valores_echo END .)
    $end            reduce using rule 109 (print -> ECHO valores_echo END .)
    ELSE            reduce using rule 109 (print -> ECHO valores_echo END .)


state 116

    (112) valores_echo -> argument COMA . valores_echo
    (112) valores_echo -> . argument COMA valores_echo
    (113) valores_echo -> . argument
    (110) argument -> . ID
    (111) argument -> . TEXT

    ID              shift and go to state 61
    TEXT            shift and go to state 62

    argument                       shift and go to state 65
    valores_echo                   shift and go to state 149

state 117

    (119) arreglos -> funcion_arreglo LPAREN ID . RPAREN

    RPAREN          shift and go to state 150


state 118

    (55) while -> WHILE LPAREN comparacion . RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> WHILE LPAREN comparacion . RPAREN LCORCHET

    RPAREN          shift and go to state 151


state 119

    (60) foreach -> FOREACH LPAREN ID . AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> FOREACH LPAREN ID . AS ID RPAREN LCORCHET

    AS              shift and go to state 152


state 120

    (153) clase -> CLASS FNOMBRE LCORCHET . declaracion RCORCHET
    (154) clase -> CLASS FNOMBRE LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 22 (empty -> .)
    CLOSE           reduce using rule 154 (clase -> CLASS FNOMBRE LCORCHET .)
    $end            reduce using rule 154 (clase -> CLASS FNOMBRE LCORCHET .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 154 (clase -> CLASS FNOMBRE LCORCHET .) ]
  ! ELSE            [ reduce using rule 154 (clase -> CLASS FNOMBRE LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]

    declaracion                    shift and go to state 153
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 121

    (44) expelse -> expif ELSE LCORCHET declaracion . RCORCHET
    (45) expelse -> expif ELSE LCORCHET declaracion .
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .
    (52) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for CLOSE resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for $end resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 154
    CLOSE           reduce using rule 20 (declaracion -> declaracion .)
    $end            reduce using rule 20 (declaracion -> declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! CLOSE           [ reduce using rule 45 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! RCORCHET        [ reduce using rule 45 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! $end            [ reduce using rule 45 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! ELSE            [ reduce using rule 45 (expelse -> expif ELSE LCORCHET declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! CLOSE           [ reduce using rule 42 (expif -> declaracion .) ]
  ! $end            [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! CLOSE           [ reduce using rule 47 (expelse -> declaracion .) ]
  ! $end            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! CLOSE           [ reduce using rule 156 (clase -> declaracion .) ]
  ! $end            [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! CLOSE           [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! $end            [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]


state 122

    (28) expression -> ID EQUALS operacion_matematica END .

    CLOSE           reduce using rule 28 (expression -> ID EQUALS operacion_matematica END .)
    RCORCHET        reduce using rule 28 (expression -> ID EQUALS operacion_matematica END .)
    $end            reduce using rule 28 (expression -> ID EQUALS operacion_matematica END .)
    ELSE            reduce using rule 28 (expression -> ID EQUALS operacion_matematica END .)


state 123

    (84) declararvariable -> ID EQUALS tipo END .

    CLOSE           reduce using rule 84 (declararvariable -> ID EQUALS tipo END .)
    RCORCHET        reduce using rule 84 (declararvariable -> ID EQUALS tipo END .)
    $end            reduce using rule 84 (declararvariable -> ID EQUALS tipo END .)
    ELSE            reduce using rule 84 (declararvariable -> ID EQUALS tipo END .)


state 124

    (95) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE . LPAREN argumentos RPAREN END

    LPAREN          shift and go to state 155


state 125

    (29) operacion_matematica -> termino operadores . operacion_matematica
    (30) operacion_matematica -> termino operadores . termino
    (29) operacion_matematica -> . termino operadores operacion_matematica
    (30) operacion_matematica -> . termino operadores termino
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 56
    ID              shift and go to state 57
    DECIMAL         shift and go to state 58

    termino                        shift and go to state 156
    operacion_matematica           shift and go to state 157

state 126

    (31) operadores -> PLUS .

    NUMBER          reduce using rule 31 (operadores -> PLUS .)
    ID              reduce using rule 31 (operadores -> PLUS .)
    DECIMAL         reduce using rule 31 (operadores -> PLUS .)


state 127

    (32) operadores -> MINUS .

    NUMBER          reduce using rule 32 (operadores -> MINUS .)
    ID              reduce using rule 32 (operadores -> MINUS .)
    DECIMAL         reduce using rule 32 (operadores -> MINUS .)


state 128

    (33) operadores -> DIVIDE .

    NUMBER          reduce using rule 33 (operadores -> DIVIDE .)
    ID              reduce using rule 33 (operadores -> DIVIDE .)
    DECIMAL         reduce using rule 33 (operadores -> DIVIDE .)


state 129

    (34) operadores -> TIMES .

    NUMBER          reduce using rule 34 (operadores -> TIMES .)
    ID              reduce using rule 34 (operadores -> TIMES .)
    DECIMAL         reduce using rule 34 (operadores -> TIMES .)


state 130

    (35) operadores -> MODULO .

    NUMBER          reduce using rule 35 (operadores -> MODULO .)
    ID              reduce using rule 35 (operadores -> MODULO .)
    DECIMAL         reduce using rule 35 (operadores -> MODULO .)


state 131

    (96) array -> ARRAY LPAREN . valores_array RPAREN
    (97) valores_array -> . elementos_array COMA valores_array
    (98) valores_array -> . elementos_array
    (99) valores_array -> . empty
    (100) elementos_array -> . NUMBER
    (101) elementos_array -> . TEXT
    (102) elementos_array -> . empty
    (103) elementos_array -> . boolean
    (104) elementos_array -> . array
    (22) empty -> .
    (92) boolean -> . TRUE
    (93) boolean -> . FALSE
    (94) boolean -> . expresionlogica
    (96) array -> . ARRAY LPAREN valores_array RPAREN
    (79) expresionlogica -> . ID operadorlogico ID

    NUMBER          shift and go to state 161
    TEXT            shift and go to state 162
    RPAREN          reduce using rule 22 (empty -> .)
    COMA            reduce using rule 22 (empty -> .)
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    ARRAY           shift and go to state 90
    ID              shift and go to state 165

    valores_array                  shift and go to state 158
    elementos_array                shift and go to state 159
    empty                          shift and go to state 160
    boolean                        shift and go to state 163
    array                          shift and go to state 164
    expresionlogica                shift and go to state 87

state 132

    (105) new -> NEW FNOMBRE .

    END             reduce using rule 105 (new -> NEW FNOMBRE .)


state 133

    (140) funcion_corta -> FGETS LPAREN . ID COMA NUMBER RPAREN

    ID              shift and go to state 166


state 134

    (141) estructura_funcion -> funcion_archivo LPAREN . opcion RPAREN
    (142) opcion -> . ID
    (143) opcion -> . TEXT

    ID              shift and go to state 168
    TEXT            shift and go to state 169

    opcion                         shift and go to state 167

state 135

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN . LCORCHET declaracion RCORCHET
    (40) expif -> funcion_condicion LPAREN comparacion RPAREN . LCORCHET

    LCORCHET        shift and go to state 170


state 136

    (65) comparacion -> valor_comparado operadorcomparacion . valor_comparado
    (66) valor_comparado -> . NUMBER
    (67) valor_comparado -> . boolean
    (68) valor_comparado -> . operacion_matematica
    (69) valor_comparado -> . ID
    (92) boolean -> . TRUE
    (93) boolean -> . FALSE
    (94) boolean -> . expresionlogica
    (29) operacion_matematica -> . termino operadores operacion_matematica
    (30) operacion_matematica -> . termino operadores termino
    (79) expresionlogica -> . ID operadorlogico ID
    (36) termino -> . NUMBER
    (37) termino -> . ID
    (38) termino -> . DECIMAL

    NUMBER          shift and go to state 106
    ID              shift and go to state 109
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    DECIMAL         shift and go to state 58

    valor_comparado                shift and go to state 171
    boolean                        shift and go to state 107
    operacion_matematica           shift and go to state 108
    expresionlogica                shift and go to state 87
    termino                        shift and go to state 77

state 137

    (70) operadorcomparacion -> IS_EQUAL .

    NUMBER          reduce using rule 70 (operadorcomparacion -> IS_EQUAL .)
    ID              reduce using rule 70 (operadorcomparacion -> IS_EQUAL .)
    TRUE            reduce using rule 70 (operadorcomparacion -> IS_EQUAL .)
    FALSE           reduce using rule 70 (operadorcomparacion -> IS_EQUAL .)
    DECIMAL         reduce using rule 70 (operadorcomparacion -> IS_EQUAL .)


state 138

    (71) operadorcomparacion -> IS_IDENTICAL .

    NUMBER          reduce using rule 71 (operadorcomparacion -> IS_IDENTICAL .)
    ID              reduce using rule 71 (operadorcomparacion -> IS_IDENTICAL .)
    TRUE            reduce using rule 71 (operadorcomparacion -> IS_IDENTICAL .)
    FALSE           reduce using rule 71 (operadorcomparacion -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 71 (operadorcomparacion -> IS_IDENTICAL .)


state 139

    (72) operadorcomparacion -> IS_NOT_EQUAL .

    NUMBER          reduce using rule 72 (operadorcomparacion -> IS_NOT_EQUAL .)
    ID              reduce using rule 72 (operadorcomparacion -> IS_NOT_EQUAL .)
    TRUE            reduce using rule 72 (operadorcomparacion -> IS_NOT_EQUAL .)
    FALSE           reduce using rule 72 (operadorcomparacion -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 72 (operadorcomparacion -> IS_NOT_EQUAL .)


state 140

    (73) operadorcomparacion -> IS_NOT_IDENTICAL .

    NUMBER          reduce using rule 73 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    ID              reduce using rule 73 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    TRUE            reduce using rule 73 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    FALSE           reduce using rule 73 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 73 (operadorcomparacion -> IS_NOT_IDENTICAL .)


state 141

    (74) operadorcomparacion -> IS_GREATER_OR_EQUAL .

    NUMBER          reduce using rule 74 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    ID              reduce using rule 74 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    TRUE            reduce using rule 74 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    FALSE           reduce using rule 74 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 74 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)


state 142

    (75) operadorcomparacion -> IS_SMALLER_OR_EQUAL .

    NUMBER          reduce using rule 75 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    ID              reduce using rule 75 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    TRUE            reduce using rule 75 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    FALSE           reduce using rule 75 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 75 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)


state 143

    (76) operadorcomparacion -> SPACESHIP .

    NUMBER          reduce using rule 76 (operadorcomparacion -> SPACESHIP .)
    ID              reduce using rule 76 (operadorcomparacion -> SPACESHIP .)
    TRUE            reduce using rule 76 (operadorcomparacion -> SPACESHIP .)
    FALSE           reduce using rule 76 (operadorcomparacion -> SPACESHIP .)
    DECIMAL         reduce using rule 76 (operadorcomparacion -> SPACESHIP .)


state 144

    (77) operadorcomparacion -> MAYORQUE .

    NUMBER          reduce using rule 77 (operadorcomparacion -> MAYORQUE .)
    ID              reduce using rule 77 (operadorcomparacion -> MAYORQUE .)
    TRUE            reduce using rule 77 (operadorcomparacion -> MAYORQUE .)
    FALSE           reduce using rule 77 (operadorcomparacion -> MAYORQUE .)
    DECIMAL         reduce using rule 77 (operadorcomparacion -> MAYORQUE .)


state 145

    (78) operadorcomparacion -> MENORQUE .

    NUMBER          reduce using rule 78 (operadorcomparacion -> MENORQUE .)
    ID              reduce using rule 78 (operadorcomparacion -> MENORQUE .)
    TRUE            reduce using rule 78 (operadorcomparacion -> MENORQUE .)
    FALSE           reduce using rule 78 (operadorcomparacion -> MENORQUE .)
    DECIMAL         reduce using rule 78 (operadorcomparacion -> MENORQUE .)


state 146

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 172


state 147

    (106) print -> funcion_print LPAREN argument RPAREN . END

    END             shift and go to state 173


state 148

    (108) print -> ECHO LPAREN valores_echo RPAREN . END

    END             shift and go to state 174


state 149

    (112) valores_echo -> argument COMA valores_echo .

    END             reduce using rule 112 (valores_echo -> argument COMA valores_echo .)
    RPAREN          reduce using rule 112 (valores_echo -> argument COMA valores_echo .)


state 150

    (119) arreglos -> funcion_arreglo LPAREN ID RPAREN .

    CLOSE           reduce using rule 119 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    RCORCHET        reduce using rule 119 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    $end            reduce using rule 119 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    ELSE            reduce using rule 119 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)


state 151

    (55) while -> WHILE LPAREN comparacion RPAREN . LCORCHET control_bucle RCORCHET
    (56) while -> WHILE LPAREN comparacion RPAREN . LCORCHET

    LCORCHET        shift and go to state 175


state 152

    (60) foreach -> FOREACH LPAREN ID AS . ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> FOREACH LPAREN ID AS . ID RPAREN LCORCHET

    ID              shift and go to state 176


state 153

    (153) clase -> CLASS FNOMBRE LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .
    (52) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 177
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]


state 154

    (44) expelse -> expif ELSE LCORCHET declaracion RCORCHET .
    (41) expif -> declaracion RCORCHET .
    (48) expelse -> declaracion RCORCHET .
    (155) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for CLOSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for $end resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
    RCORCHET        reduce using rule 41 (expif -> declaracion RCORCHET .)
    CLOSE           reduce using rule 41 (expif -> declaracion RCORCHET .)
    $end            reduce using rule 41 (expif -> declaracion RCORCHET .)
    ELSE            reduce using rule 41 (expif -> declaracion RCORCHET .)

  ! CLOSE           [ reduce using rule 44 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 44 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 44 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 44 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! CLOSE           [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! $end            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]


state 155

    (95) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN . argumentos RPAREN END
    (23) argumentos -> . ID
    (24) argumentos -> . empty
    (22) empty -> .

    ID              shift and go to state 178
    RPAREN          reduce using rule 22 (empty -> .)

    argumentos                     shift and go to state 179
    empty                          shift and go to state 180

state 156

    (30) operacion_matematica -> termino operadores termino .
    (29) operacion_matematica -> termino . operadores operacion_matematica
    (30) operacion_matematica -> termino . operadores termino
    (31) operadores -> . PLUS
    (32) operadores -> . MINUS
    (33) operadores -> . DIVIDE
    (34) operadores -> . TIMES
    (35) operadores -> . MODULO

    END             reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    IS_EQUAL        reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    IS_IDENTICAL    reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    IS_NOT_EQUAL    reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    IS_NOT_IDENTICAL reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    IS_GREATER_OR_EQUAL reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    IS_SMALLER_OR_EQUAL reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    SPACESHIP       reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    MAYORQUE        reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    MENORQUE        reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    RPAREN          reduce using rule 30 (operacion_matematica -> termino operadores termino .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    DIVIDE          shift and go to state 128
    TIMES           shift and go to state 129
    MODULO          shift and go to state 130

    operadores                     shift and go to state 125

state 157

    (29) operacion_matematica -> termino operadores operacion_matematica .

    END             reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_EQUAL        reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_IDENTICAL    reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_NOT_EQUAL    reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_NOT_IDENTICAL reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_GREATER_OR_EQUAL reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    IS_SMALLER_OR_EQUAL reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    SPACESHIP       reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    MAYORQUE        reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    MENORQUE        reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)
    RPAREN          reduce using rule 29 (operacion_matematica -> termino operadores operacion_matematica .)


state 158

    (96) array -> ARRAY LPAREN valores_array . RPAREN

    RPAREN          shift and go to state 181


state 159

    (97) valores_array -> elementos_array . COMA valores_array
    (98) valores_array -> elementos_array .

    COMA            shift and go to state 182
    RPAREN          reduce using rule 98 (valores_array -> elementos_array .)


state 160

    (99) valores_array -> empty .
    (102) elementos_array -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 99 (valores_array -> empty .)
    RPAREN          reduce using rule 99 (valores_array -> empty .)
    COMA            reduce using rule 102 (elementos_array -> empty .)

  ! RPAREN          [ reduce using rule 102 (elementos_array -> empty .) ]


state 161

    (100) elementos_array -> NUMBER .

    COMA            reduce using rule 100 (elementos_array -> NUMBER .)
    RPAREN          reduce using rule 100 (elementos_array -> NUMBER .)


state 162

    (101) elementos_array -> TEXT .

    COMA            reduce using rule 101 (elementos_array -> TEXT .)
    RPAREN          reduce using rule 101 (elementos_array -> TEXT .)


state 163

    (103) elementos_array -> boolean .

    COMA            reduce using rule 103 (elementos_array -> boolean .)
    RPAREN          reduce using rule 103 (elementos_array -> boolean .)


state 164

    (104) elementos_array -> array .

    COMA            reduce using rule 104 (elementos_array -> array .)
    RPAREN          reduce using rule 104 (elementos_array -> array .)


state 165

    (79) expresionlogica -> ID . operadorlogico ID
    (80) operadorlogico -> . AND
    (81) operadorlogico -> . OR
    (82) operadorlogico -> . XOR
    (83) operadorlogico -> . NOT

    AND             shift and go to state 48
    OR              shift and go to state 49
    XOR             shift and go to state 50
    NOT             shift and go to state 51

    operadorlogico                 shift and go to state 47

state 166

    (140) funcion_corta -> FGETS LPAREN ID . COMA NUMBER RPAREN

    COMA            shift and go to state 183


state 167

    (141) estructura_funcion -> funcion_archivo LPAREN opcion . RPAREN

    RPAREN          shift and go to state 184


state 168

    (142) opcion -> ID .

    RPAREN          reduce using rule 142 (opcion -> ID .)


state 169

    (143) opcion -> TEXT .

    RPAREN          reduce using rule 143 (opcion -> TEXT .)


state 170

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET . declaracion RCORCHET
    (40) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 22 (empty -> .)
    CLOSE           reduce using rule 40 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .)
    $end            reduce using rule 40 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 40 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .) ]
  ! ELSE            [ reduce using rule 40 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]

    funcion_condicion              shift and go to state 19
    declaracion                    shift and go to state 185
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 171

    (65) comparacion -> valor_comparado operadorcomparacion valor_comparado .

    RPAREN          reduce using rule 65 (comparacion -> valor_comparado operadorcomparacion valor_comparado .)


state 172

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET . declaracion RCORCHET
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]

    declaracion                    shift and go to state 186
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 173

    (106) print -> funcion_print LPAREN argument RPAREN END .

    CLOSE           reduce using rule 106 (print -> funcion_print LPAREN argument RPAREN END .)
    RCORCHET        reduce using rule 106 (print -> funcion_print LPAREN argument RPAREN END .)
    $end            reduce using rule 106 (print -> funcion_print LPAREN argument RPAREN END .)
    ELSE            reduce using rule 106 (print -> funcion_print LPAREN argument RPAREN END .)


state 174

    (108) print -> ECHO LPAREN valores_echo RPAREN END .

    CLOSE           reduce using rule 108 (print -> ECHO LPAREN valores_echo RPAREN END .)
    RCORCHET        reduce using rule 108 (print -> ECHO LPAREN valores_echo RPAREN END .)
    $end            reduce using rule 108 (print -> ECHO LPAREN valores_echo RPAREN END .)
    ELSE            reduce using rule 108 (print -> ECHO LPAREN valores_echo RPAREN END .)


state 175

    (55) while -> WHILE LPAREN comparacion RPAREN LCORCHET . control_bucle RCORCHET
    (56) while -> WHILE LPAREN comparacion RPAREN LCORCHET .
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 22 (empty -> .)
    CLOSE           reduce using rule 56 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .)
    $end            reduce using rule 56 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .)
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39

  ! RCORCHET        [ reduce using rule 56 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .) ]
  ! ELSE            [ reduce using rule 56 (while -> WHILE LPAREN comparacion RPAREN LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]

    control_bucle                  shift and go to state 187
    declaracion                    shift and go to state 188
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26

state 176

    (60) foreach -> FOREACH LPAREN ID AS ID . RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> FOREACH LPAREN ID AS ID . RPAREN LCORCHET

    RPAREN          shift and go to state 189


state 177

    (153) clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .
    (41) expif -> declaracion RCORCHET .
    (48) expelse -> declaracion RCORCHET .
    (155) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
    CLOSE           reduce using rule 153 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 153 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 41 (expif -> declaracion RCORCHET .)
    ELSE            reduce using rule 41 (expif -> declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 153 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 153 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]


state 178

    (23) argumentos -> ID .

    RPAREN          reduce using rule 23 (argumentos -> ID .)


state 179

    (95) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos . RPAREN END

    RPAREN          shift and go to state 190


state 180

    (24) argumentos -> empty .

    RPAREN          reduce using rule 24 (argumentos -> empty .)


state 181

    (96) array -> ARRAY LPAREN valores_array RPAREN .

    END             reduce using rule 96 (array -> ARRAY LPAREN valores_array RPAREN .)
    COMA            reduce using rule 96 (array -> ARRAY LPAREN valores_array RPAREN .)
    RPAREN          reduce using rule 96 (array -> ARRAY LPAREN valores_array RPAREN .)


state 182

    (97) valores_array -> elementos_array COMA . valores_array
    (97) valores_array -> . elementos_array COMA valores_array
    (98) valores_array -> . elementos_array
    (99) valores_array -> . empty
    (100) elementos_array -> . NUMBER
    (101) elementos_array -> . TEXT
    (102) elementos_array -> . empty
    (103) elementos_array -> . boolean
    (104) elementos_array -> . array
    (22) empty -> .
    (92) boolean -> . TRUE
    (93) boolean -> . FALSE
    (94) boolean -> . expresionlogica
    (96) array -> . ARRAY LPAREN valores_array RPAREN
    (79) expresionlogica -> . ID operadorlogico ID

    NUMBER          shift and go to state 161
    TEXT            shift and go to state 162
    RPAREN          reduce using rule 22 (empty -> .)
    COMA            reduce using rule 22 (empty -> .)
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    ARRAY           shift and go to state 90
    ID              shift and go to state 165

    elementos_array                shift and go to state 159
    valores_array                  shift and go to state 191
    empty                          shift and go to state 160
    boolean                        shift and go to state 163
    array                          shift and go to state 164
    expresionlogica                shift and go to state 87

state 183

    (140) funcion_corta -> FGETS LPAREN ID COMA . NUMBER RPAREN

    NUMBER          shift and go to state 192


state 184

    (141) estructura_funcion -> funcion_archivo LPAREN opcion RPAREN .

    END             reduce using rule 141 (estructura_funcion -> funcion_archivo LPAREN opcion RPAREN .)


state 185

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .
    (52) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 193
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]


state 186

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .
    (52) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 194
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]


state 187

    (55) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle . RCORCHET
    (57) while -> control_bucle . RCORCHET
    (58) while -> control_bucle .
    (62) foreach -> control_bucle . RCORCHET
    (63) foreach -> control_bucle .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 58 (while -> control_bucle .)
    RCORCHET        shift and go to state 195
    ELSE            reduce using rule 58 (while -> control_bucle .)

  ! RCORCHET        [ reduce using rule 58 (while -> control_bucle .) ]
  ! RCORCHET        [ reduce using rule 63 (foreach -> control_bucle .) ]
  ! ELSE            [ reduce using rule 63 (foreach -> control_bucle .) ]


state 188

    (52) control_bucle -> declaracion .
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .

  ! reduce/reduce conflict for RCORCHET resolved using rule 20 (declaracion -> declaracion .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    ELSE            reduce using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 44

  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]


state 189

    (60) foreach -> FOREACH LPAREN ID AS ID RPAREN . LCORCHET declaracion RCORCHET
    (61) foreach -> FOREACH LPAREN ID AS ID RPAREN . LCORCHET

    LCORCHET        shift and go to state 196


state 190

    (95) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN . END

    END             shift and go to state 197


state 191

    (97) valores_array -> elementos_array COMA valores_array .

    RPAREN          reduce using rule 97 (valores_array -> elementos_array COMA valores_array .)


state 192

    (140) funcion_corta -> FGETS LPAREN ID COMA NUMBER . RPAREN

    RPAREN          shift and go to state 198


state 193

    (39) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .
    (41) expif -> declaracion RCORCHET .
    (48) expelse -> declaracion RCORCHET .
    (155) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    CLOSE           reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    ELSE            reduce using rule 39 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 41 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 41 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]


state 194

    (21) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .
    (41) expif -> declaracion RCORCHET .
    (48) expelse -> declaracion RCORCHET .
    (155) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    CLOSE           reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    ELSE            reduce using rule 21 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 41 (expif -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 41 (expif -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]


state 195

    (55) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .
    (57) while -> control_bucle RCORCHET .
    (62) foreach -> control_bucle RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    CLOSE           reduce using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    RCORCHET        reduce using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    $end            reduce using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    ELSE            reduce using rule 55 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)

  ! RCORCHET        [ reduce using rule 57 (while -> control_bucle RCORCHET .) ]
  ! ELSE            [ reduce using rule 57 (while -> control_bucle RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 62 (foreach -> control_bucle RCORCHET .) ]
  ! ELSE            [ reduce using rule 62 (foreach -> control_bucle RCORCHET .) ]


state 196

    (60) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET . declaracion RCORCHET
    (61) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .
    (7) declaracion -> . expression
    (8) declaracion -> . expif
    (9) declaracion -> . expelse
    (10) declaracion -> . expresionlogica
    (11) declaracion -> . declararvariable
    (12) declaracion -> . creacionfunciones
    (13) declaracion -> . returnvalores
    (14) declaracion -> . operador_object
    (15) declaracion -> . print
    (16) declaracion -> . arreglos
    (17) declaracion -> . while
    (18) declaracion -> . foreach
    (19) declaracion -> . clase
    (20) declaracion -> . declaracion
    (28) expression -> . ID EQUALS operacion_matematica END
    (39) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET
    (41) expif -> . declaracion RCORCHET
    (42) expif -> . declaracion
    (43) expif -> . RCORCHET
    (44) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (45) expelse -> . expif ELSE LCORCHET declaracion
    (46) expelse -> . expif ELSE LCORCHET
    (47) expelse -> . declaracion
    (48) expelse -> . declaracion RCORCHET
    (49) expelse -> . RCORCHET
    (79) expresionlogica -> . ID operadorlogico ID
    (84) declararvariable -> . ID EQUALS tipo END
    (21) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (25) returnvalores -> . RETURN termino END
    (26) returnvalores -> . RETURN creacionfunciones
    (27) returnvalores -> . empty
    (95) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (106) print -> . funcion_print LPAREN argument RPAREN END
    (107) print -> . funcion_print argument END
    (108) print -> . ECHO LPAREN valores_echo RPAREN END
    (109) print -> . ECHO valores_echo END
    (119) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (55) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (56) while -> . WHILE LPAREN comparacion RPAREN LCORCHET
    (57) while -> . control_bucle RCORCHET
    (58) while -> . control_bucle
    (59) while -> . RCORCHET
    (60) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET
    (61) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET
    (62) foreach -> . control_bucle RCORCHET
    (63) foreach -> . control_bucle
    (64) foreach -> . RCORCHET
    (153) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (154) clase -> . CLASS FNOMBRE LCORCHET
    (155) clase -> . declaracion RCORCHET
    (156) clase -> . declaracion
    (157) clase -> . RCORCHET
    (50) funcion_condicion -> . IF
    (51) funcion_condicion -> . ELSEIF
    (22) empty -> .
    (114) funcion_print -> . VAR_EXPORT
    (115) funcion_print -> . ECHO
    (116) funcion_print -> . PRINT
    (117) funcion_print -> . PRINT_R
    (118) funcion_print -> . VAR_DUMP
    (135) funcion_arreglo -> . SUFFLE
    (136) funcion_arreglo -> . ARRAY_UNIQUE
    (137) funcion_arreglo -> . SIZEOF
    (52) control_bucle -> . declaracion
    (53) control_bucle -> . BREAK
    (54) control_bucle -> . CONTINUE

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 22 (empty -> .)
    CLOSE           reduce using rule 61 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .)
    $end            reduce using rule 61 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .)
    ID              shift and go to state 18
    RCORCHET        shift and go to state 20
    FUNCTION        shift and go to state 21
    RETURN          shift and go to state 22
    ECHO            shift and go to state 25
    WHILE           shift and go to state 27
    FOREACH         shift and go to state 29
    CLASS           shift and go to state 30
    IF              shift and go to state 31
    ELSEIF          shift and go to state 32
    ELSE            reduce using rule 22 (empty -> .)
    VAR_EXPORT      shift and go to state 33
    PRINT           shift and go to state 34
    PRINT_R         shift and go to state 35
    VAR_DUMP        shift and go to state 36
    SUFFLE          shift and go to state 37
    ARRAY_UNIQUE    shift and go to state 38
    SIZEOF          shift and go to state 39
    BREAK           shift and go to state 40
    CONTINUE        shift and go to state 41

  ! RCORCHET        [ reduce using rule 61 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .) ]
  ! ELSE            [ reduce using rule 61 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET .) ]
  ! RCORCHET        [ reduce using rule 22 (empty -> .) ]

    declaracion                    shift and go to state 199
    expression                     shift and go to state 5
    expif                          shift and go to state 6
    expelse                        shift and go to state 7
    expresionlogica                shift and go to state 8
    declararvariable               shift and go to state 9
    creacionfunciones              shift and go to state 10
    returnvalores                  shift and go to state 11
    operador_object                shift and go to state 12
    print                          shift and go to state 13
    arreglos                       shift and go to state 14
    while                          shift and go to state 15
    foreach                        shift and go to state 16
    clase                          shift and go to state 17
    funcion_condicion              shift and go to state 19
    empty                          shift and go to state 23
    funcion_print                  shift and go to state 24
    funcion_arreglo                shift and go to state 26
    control_bucle                  shift and go to state 28

state 197

    (95) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .

    CLOSE           reduce using rule 95 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    RCORCHET        reduce using rule 95 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    $end            reduce using rule 95 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    ELSE            reduce using rule 95 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)


state 198

    (140) funcion_corta -> FGETS LPAREN ID COMA NUMBER RPAREN .

    END             reduce using rule 140 (funcion_corta -> FGETS LPAREN ID COMA NUMBER RPAREN .)


state 199

    (60) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion . RCORCHET
    (20) declaracion -> declaracion .
    (41) expif -> declaracion . RCORCHET
    (42) expif -> declaracion .
    (47) expelse -> declaracion .
    (48) expelse -> declaracion . RCORCHET
    (155) clase -> declaracion . RCORCHET
    (156) clase -> declaracion .
    (52) control_bucle -> declaracion .

  ! shift/reduce conflict for RCORCHET resolved as shift
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
  ! shift/reduce conflict for RCORCHET resolved as shift
  ! reduce/reduce conflict for ELSE resolved using rule 20 (declaracion -> declaracion .)
    RCORCHET        shift and go to state 200
    ELSE            reduce using rule 20 (declaracion -> declaracion .)

  ! RCORCHET        [ reduce using rule 20 (declaracion -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 42 (expif -> declaracion .) ]
  ! ELSE            [ reduce using rule 42 (expif -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 47 (expelse -> declaracion .) ]
  ! ELSE            [ reduce using rule 47 (expelse -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 156 (clase -> declaracion .) ]
  ! ELSE            [ reduce using rule 156 (clase -> declaracion .) ]
  ! RCORCHET        [ reduce using rule 52 (control_bucle -> declaracion .) ]
  ! ELSE            [ reduce using rule 52 (control_bucle -> declaracion .) ]


state 200

    (60) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .
    (41) expif -> declaracion RCORCHET .
    (48) expelse -> declaracion RCORCHET .
    (155) clase -> declaracion RCORCHET .

  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for RCORCHET resolved using rule 41 (expif -> declaracion RCORCHET .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (expif -> declaracion RCORCHET .)
    CLOSE           reduce using rule 60 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .)
    $end            reduce using rule 60 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 41 (expif -> declaracion RCORCHET .)
    ELSE            reduce using rule 41 (expif -> declaracion RCORCHET .)

  ! RCORCHET        [ reduce using rule 60 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 60 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 48 (expelse -> declaracion RCORCHET .) ]
  ! RCORCHET        [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]
  ! ELSE            [ reduce using rule 155 (clase -> declaracion RCORCHET .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSE in state 0 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 0 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 2 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 3 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 6 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 25 resolved as shift
WARNING: shift/reduce conflict for ID in state 25 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 25 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 28 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 28 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for CLOSE in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 42 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 72 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 72 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 120 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 120 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 121 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 121 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 121 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 121 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 121 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 121 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 153 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 153 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 153 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 153 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 153 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 170 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 170 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 172 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 175 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 175 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 185 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 185 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 185 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 185 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 185 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 186 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 186 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 186 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 186 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 186 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 187 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 187 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 188 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 188 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 188 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 188 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 196 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 199 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 199 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 199 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 199 resolved as shift
WARNING: shift/reduce conflict for RCORCHET in state 199 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (programa -> OPEN)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (declaracion -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (programa -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 3
WARNING: reduce/reduce conflict in state 20 resolved using rule (expif -> RCORCHET)
WARNING: rejected rule (expelse -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (expif -> RCORCHET)
WARNING: rejected rule (while -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (expif -> RCORCHET)
WARNING: rejected rule (foreach -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 20 resolved using rule (expif -> RCORCHET)
WARNING: rejected rule (clase -> RCORCHET) in state 20
WARNING: reduce/reduce conflict in state 28 resolved using rule (while -> control_bucle)
WARNING: rejected rule (foreach -> control_bucle) in state 28
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (declaracion -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (expif -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (clase -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (programa -> OPEN declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 42 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 42
WARNING: reduce/reduce conflict in state 44 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 44
WARNING: reduce/reduce conflict in state 44 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 44
WARNING: reduce/reduce conflict in state 68 resolved using rule (while -> control_bucle RCORCHET)
WARNING: rejected rule (foreach -> control_bucle RCORCHET) in state 68
WARNING: reduce/reduce conflict in state 72 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expelse -> expif ELSE LCORCHET) in state 72
WARNING: reduce/reduce conflict in state 120 resolved using rule (empty -> <empty>)
WARNING: rejected rule (clase -> CLASS FNOMBRE LCORCHET) in state 120
WARNING: reduce/reduce conflict in state 121 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> expif ELSE LCORCHET declaracion) in state 121
WARNING: reduce/reduce conflict in state 121 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 121
WARNING: reduce/reduce conflict in state 121 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 121
WARNING: reduce/reduce conflict in state 121 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 121
WARNING: reduce/reduce conflict in state 121 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 121
WARNING: reduce/reduce conflict in state 153 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> expif ELSE LCORCHET declaracion RCORCHET) in state 154
WARNING: reduce/reduce conflict in state 154 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 154
WARNING: reduce/reduce conflict in state 154 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 154
WARNING: reduce/reduce conflict in state 160 resolved using rule (valores_array -> empty)
WARNING: rejected rule (elementos_array -> empty) in state 160
WARNING: reduce/reduce conflict in state 170 resolved using rule (empty -> <empty>)
WARNING: rejected rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET) in state 170
WARNING: reduce/reduce conflict in state 175 resolved using rule (empty -> <empty>)
WARNING: rejected rule (while -> WHILE LPAREN comparacion RPAREN LCORCHET) in state 175
WARNING: reduce/reduce conflict in state 177 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET) in state 177
WARNING: reduce/reduce conflict in state 177 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 177
WARNING: reduce/reduce conflict in state 177 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 177
WARNING: reduce/reduce conflict in state 185 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 185
WARNING: reduce/reduce conflict in state 185 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 185
WARNING: reduce/reduce conflict in state 185 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 185
WARNING: reduce/reduce conflict in state 185 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 185
WARNING: reduce/reduce conflict in state 186 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 186
WARNING: reduce/reduce conflict in state 186 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 186
WARNING: reduce/reduce conflict in state 186 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 186
WARNING: reduce/reduce conflict in state 186 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 186
WARNING: reduce/reduce conflict in state 187 resolved using rule (while -> control_bucle)
WARNING: rejected rule (foreach -> control_bucle) in state 187
WARNING: reduce/reduce conflict in state 188 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 188
WARNING: reduce/reduce conflict in state 188 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 188
WARNING: reduce/reduce conflict in state 193 resolved using rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 193
WARNING: reduce/reduce conflict in state 193 resolved using rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 193
WARNING: reduce/reduce conflict in state 193 resolved using rule (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 193
WARNING: reduce/reduce conflict in state 194 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expif -> declaracion RCORCHET) in state 194
WARNING: reduce/reduce conflict in state 194 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 194
WARNING: reduce/reduce conflict in state 194 resolved using rule (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 194
WARNING: reduce/reduce conflict in state 195 resolved using rule (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET)
WARNING: rejected rule (while -> control_bucle RCORCHET) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET)
WARNING: rejected rule (foreach -> control_bucle RCORCHET) in state 195
WARNING: reduce/reduce conflict in state 196 resolved using rule (empty -> <empty>)
WARNING: rejected rule (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET) in state 196
WARNING: reduce/reduce conflict in state 199 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expif -> declaracion) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (expelse -> declaracion) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (clase -> declaracion) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (declaracion -> declaracion)
WARNING: rejected rule (control_bucle -> declaracion) in state 199
WARNING: reduce/reduce conflict in state 200 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET declaracion RCORCHET) in state 200
WARNING: reduce/reduce conflict in state 200 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (expelse -> declaracion RCORCHET) in state 200
WARNING: reduce/reduce conflict in state 200 resolved using rule (expif -> declaracion RCORCHET)
WARNING: rejected rule (clase -> declaracion RCORCHET) in state 200
WARNING: Rule (expif -> declaracion) is never reduced
WARNING: Rule (expelse -> declaracion) is never reduced
WARNING: Rule (clase -> declaracion) is never reduced
WARNING: Rule (control_bucle -> declaracion) is never reduced
WARNING: Rule (expelse -> RCORCHET) is never reduced
WARNING: Rule (while -> RCORCHET) is never reduced
WARNING: Rule (foreach -> RCORCHET) is never reduced
WARNING: Rule (clase -> RCORCHET) is never reduced
WARNING: Rule (foreach -> control_bucle) is never reduced
WARNING: Rule (expelse -> declaracion RCORCHET) is never reduced
WARNING: Rule (clase -> declaracion RCORCHET) is never reduced
WARNING: Rule (foreach -> control_bucle RCORCHET) is never reduced
WARNING: Rule (expelse -> expif ELSE LCORCHET) is never reduced
WARNING: Rule (expelse -> expif ELSE LCORCHET declaracion) is never reduced
WARNING: Rule (expelse -> expif ELSE LCORCHET declaracion RCORCHET) is never reduced

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> OPEN declaracion CLOSE
Rule 2     declaracion -> expression
Rule 3     declaracion -> expif
Rule 4     declaracion -> expelse
Rule 5     declaracion -> expresionlogica
Rule 6     declaracion -> declararvariable
Rule 7     declaracion -> creacionfunciones
Rule 8     declaracion -> returnvalores
Rule 9     declaracion -> operador_object
Rule 10    declaracion -> print
Rule 11    declaracion -> arreglos
Rule 12    declaracion -> while
Rule 13    declaracion -> foreach
Rule 14    declaracion -> clase
Rule 15    creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
Rule 16    empty -> <empty>
Rule 17    argumentos -> ID
Rule 18    argumentos -> empty
Rule 19    returnvalores -> RETURN termino END
Rule 20    returnvalores -> RETURN creacionfunciones
Rule 21    returnvalores -> empty
Rule 22    expression -> ID EQUALS termino operadores termino END
Rule 23    operadores -> PLUS
Rule 24    operadores -> MINUS
Rule 25    operadores -> DIVIDE
Rule 26    operadores -> TIMES
Rule 27    operadores -> MODULO
Rule 28    termino -> NUMBER
Rule 29    termino -> ID
Rule 30    termino -> DECIMAL
Rule 31    expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
Rule 32    expelse -> expif ELSE LCORCHET declaracion RCORCHET
Rule 33    funcion_condicion -> IF
Rule 34    funcion_condicion -> ELSEIF
Rule 35    control_bucle -> BREAK
Rule 36    control_bucle -> CONTINUE
Rule 37    control_bucle -> declaracion
Rule 38    while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
Rule 39    foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
Rule 40    comparacion -> termino operadorcomparacion termino
Rule 41    operadorcomparacion -> IS_EQUAL
Rule 42    operadorcomparacion -> IS_IDENTICAL
Rule 43    operadorcomparacion -> IS_NOT_EQUAL
Rule 44    operadorcomparacion -> IS_NOT_IDENTICAL
Rule 45    operadorcomparacion -> IS_GREATER_OR_EQUAL
Rule 46    operadorcomparacion -> IS_SMALLER_OR_EQUAL
Rule 47    operadorcomparacion -> SPACESHIP
Rule 48    operadorcomparacion -> MAYORQUE
Rule 49    operadorcomparacion -> MENORQUE
Rule 50    expresionlogica -> ID operadorlogico ID
Rule 51    operadorlogico -> AND
Rule 52    operadorlogico -> OR
Rule 53    operadorlogico -> XOR
Rule 54    operadorlogico -> NOT
Rule 55    declararvariable -> ID EQUALS tipo END
Rule 56    tipo -> boolean
Rule 57    tipo -> NUMBER
Rule 58    tipo -> TEXT
Rule 59    tipo -> NULL
Rule 60    tipo -> archivos
Rule 61    tipo -> array
Rule 62    tipo -> new
Rule 63    boolean -> TRUE
Rule 64    boolean -> FALSE
Rule 65    operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
Rule 66    array -> ARRAY LPAREN termino RPAREN
Rule 67    new -> NEW FNOMBRE
Rule 68    print -> funcion_print LPAREN argument RPAREN END
Rule 69    argument -> ID
Rule 70    argument -> TEXT
Rule 71    funcion_print -> VAR_EXPORT
Rule 72    funcion_print -> ECHO
Rule 73    funcion_print -> PRINT
Rule 74    funcion_print -> PRINT_R
Rule 75    funcion_print -> VAR_DUMP
Rule 76    arreglos -> funcion_arreglo LPAREN ID RPAREN
Rule 77    funcion_arreglo -> SUFFLE
Rule 78    funcion_arreglo -> ARRAY_MERGE
Rule 79    funcion_arreglo -> ARRAY_SEARCH
Rule 80    funcion_arreglo -> ARRAY_RAND
Rule 81    funcion_arreglo -> ARRAY_CHUNK
Rule 82    funcion_arreglo -> STR_SPLIT
Rule 83    funcion_arreglo -> PREG_SPLIT
Rule 84    funcion_arreglo -> ARRAY_UNIQUE
Rule 85    funcion_arreglo -> COUNT
Rule 86    funcion_arreglo -> SIZEOF
Rule 87    funcion_arreglo -> ARRAY_PUSH
Rule 88    funcion_arreglo -> SORT
Rule 89    funcion_arreglo -> ASORT
Rule 90    funcion_arreglo -> KSORT
Rule 91    funcion_arreglo -> UNSET
Rule 92    funcion_arreglo -> IMPLODE
Rule 93    funcion_arreglo -> EXPLODE
Rule 94    archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN
Rule 95    funcion_archivo -> FGETS
Rule 96    funcion_archivo -> FREAD
Rule 97    funcion_archivo -> FSCANF
Rule 98    funcion_archivo -> FPASSTHRU
Rule 99    funcion_archivo -> FGETCSV
Rule 100   funcion_archivo -> FGETC
Rule 101   funcion_archivo -> FILE_GET_CONTENTS
Rule 102   funcion_archivo -> READFILE
Rule 103   funcion_archivo -> FILE
Rule 104   funcion_archivo -> PARSE_INI_FILE
Rule 105   clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET

Terminals, with rules where they appear

AND                  : 51
ARRAY                : 66
ARRAY_CHUNK          : 81
ARRAY_MERGE          : 78
ARRAY_PUSH           : 87
ARRAY_RAND           : 80
ARRAY_SEARCH         : 79
ARRAY_UNIQUE         : 84
AS                   : 39
ASORT                : 89
BREAK                : 35
CLASS                : 105
CLOSE                : 1
COMA                 : 94
CONTINUE             : 36
COUNT                : 85
DECIMAL              : 30
DIVIDE               : 25
ECHO                 : 72
ELSE                 : 32
ELSEIF               : 34
END                  : 19 22 55 65 68
EQUALS               : 22 55 65
EXPLODE              : 93
FALSE                : 64
FGETC                : 100
FGETCSV              : 99
FGETS                : 95
FILE                 : 103
FILE_GET_CONTENTS    : 101
FNOMBRE              : 15 65 67 105
FOREACH              : 39
FPASSTHRU            : 98
FREAD                : 96
FSCANF               : 97
FUNCTION             : 15
ID                   : 17 22 29 39 39 50 50 55 65 69 76
IF                   : 33
IMPLODE              : 92
IS_EQUAL             : 41
IS_GREATER_OR_EQUAL  : 45
IS_IDENTICAL         : 42
IS_NOT_EQUAL         : 43
IS_NOT_IDENTICAL     : 44
IS_SMALLER_OR_EQUAL  : 46
KSORT                : 90
LCORCHET             : 15 31 32 38 39 105
LPAREN               : 15 31 38 39 65 66 68 76 94
MAYORQUE             : 48
MENORQUE             : 49
MINUS                : 24
MODULO               : 27
NEW                  : 67
NOT                  : 54
NULL                 : 59
NUMBER               : 28 57
OBJECT_OPERATOR      : 65
OPEN                 : 1
OR                   : 52
PARSE_INI_FILE       : 104
PLUS                 : 23
PREG_SPLIT           : 83
PRINT                : 73
PRINT_R              : 74
RCORCHET             : 15 31 32 38 39 105
READFILE             : 102
RETURN               : 19 20
RPAREN               : 15 31 38 39 65 66 68 76 94
SIZEOF               : 86
SORT                 : 88
SPACESHIP            : 47
STR_SPLIT            : 82
SUFFLE               : 77
TEXT                 : 58 70 94 94
TIMES                : 26
TRUE                 : 63
UNSET                : 91
VAR_DUMP             : 75
VAR_EXPORT           : 71
WHILE                : 38
XOR                  : 53
error                : 

Nonterminals, with rules where they appear

archivos             : 60
argument             : 68
argumentos           : 65
array                : 61
arreglos             : 11
boolean              : 56
clase                : 14
comparacion          : 31 38
control_bucle        : 38 39
creacionfunciones    : 7 20
declaracion          : 1 15 31 32 37 105
declararvariable     : 6
empty                : 18 21
expelse              : 4
expif                : 3 32
expresionlogica      : 5
expression           : 2
foreach              : 13
funcion_archivo      : 94
funcion_arreglo      : 76
funcion_condicion    : 31
funcion_print        : 68
new                  : 62
operador_object      : 9
operadorcomparacion  : 40
operadores           : 22
operadorlogico       : 50
print                : 10
programa             : 0
returnvalores        : 8
termino              : 19 22 22 40 40 66
tipo                 : 55
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . OPEN declaracion CLOSE

    OPEN            shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> OPEN . declaracion CLOSE
    (2) declaracion -> . expression
    (3) declaracion -> . expif
    (4) declaracion -> . expelse
    (5) declaracion -> . expresionlogica
    (6) declaracion -> . declararvariable
    (7) declaracion -> . creacionfunciones
    (8) declaracion -> . returnvalores
    (9) declaracion -> . operador_object
    (10) declaracion -> . print
    (11) declaracion -> . arreglos
    (12) declaracion -> . while
    (13) declaracion -> . foreach
    (14) declaracion -> . clase
    (22) expression -> . ID EQUALS termino operadores termino END
    (31) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (32) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (50) expresionlogica -> . ID operadorlogico ID
    (55) declararvariable -> . ID EQUALS tipo END
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (19) returnvalores -> . RETURN termino END
    (20) returnvalores -> . RETURN creacionfunciones
    (21) returnvalores -> . empty
    (65) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (68) print -> . funcion_print LPAREN argument RPAREN END
    (76) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (38) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (39) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (105) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (33) funcion_condicion -> . IF
    (34) funcion_condicion -> . ELSEIF
    (16) empty -> .
    (71) funcion_print -> . VAR_EXPORT
    (72) funcion_print -> . ECHO
    (73) funcion_print -> . PRINT
    (74) funcion_print -> . PRINT_R
    (75) funcion_print -> . VAR_DUMP
    (77) funcion_arreglo -> . SUFFLE
    (78) funcion_arreglo -> . ARRAY_MERGE
    (79) funcion_arreglo -> . ARRAY_SEARCH
    (80) funcion_arreglo -> . ARRAY_RAND
    (81) funcion_arreglo -> . ARRAY_CHUNK
    (82) funcion_arreglo -> . STR_SPLIT
    (83) funcion_arreglo -> . PREG_SPLIT
    (84) funcion_arreglo -> . ARRAY_UNIQUE
    (85) funcion_arreglo -> . COUNT
    (86) funcion_arreglo -> . SIZEOF
    (87) funcion_arreglo -> . ARRAY_PUSH
    (88) funcion_arreglo -> . SORT
    (89) funcion_arreglo -> . ASORT
    (90) funcion_arreglo -> . KSORT
    (91) funcion_arreglo -> . UNSET
    (92) funcion_arreglo -> . IMPLODE
    (93) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 17
    FUNCTION        shift and go to state 19
    RETURN          shift and go to state 20
    WHILE           shift and go to state 24
    FOREACH         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 27
    ELSEIF          shift and go to state 28
    CLOSE           reduce using rule 16 (empty -> .)
    VAR_EXPORT      shift and go to state 29
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    PRINT_R         shift and go to state 32
    VAR_DUMP        shift and go to state 33
    SUFFLE          shift and go to state 34
    ARRAY_MERGE     shift and go to state 35
    ARRAY_SEARCH    shift and go to state 36
    ARRAY_RAND      shift and go to state 37
    ARRAY_CHUNK     shift and go to state 38
    STR_SPLIT       shift and go to state 39
    PREG_SPLIT      shift and go to state 40
    ARRAY_UNIQUE    shift and go to state 41
    COUNT           shift and go to state 42
    SIZEOF          shift and go to state 43
    ARRAY_PUSH      shift and go to state 44
    SORT            shift and go to state 45
    ASORT           shift and go to state 46
    KSORT           shift and go to state 47
    UNSET           shift and go to state 48
    IMPLODE         shift and go to state 49
    EXPLODE         shift and go to state 50

    declaracion                    shift and go to state 3
    expression                     shift and go to state 4
    expif                          shift and go to state 5
    expelse                        shift and go to state 6
    expresionlogica                shift and go to state 7
    declararvariable               shift and go to state 8
    creacionfunciones              shift and go to state 9
    returnvalores                  shift and go to state 10
    operador_object                shift and go to state 11
    print                          shift and go to state 12
    arreglos                       shift and go to state 13
    while                          shift and go to state 14
    foreach                        shift and go to state 15
    clase                          shift and go to state 16
    funcion_condicion              shift and go to state 18
    empty                          shift and go to state 21
    funcion_print                  shift and go to state 22
    funcion_arreglo                shift and go to state 23

state 3

    (1) programa -> OPEN declaracion . CLOSE

    CLOSE           shift and go to state 51


state 4

    (2) declaracion -> expression .

    CLOSE           reduce using rule 2 (declaracion -> expression .)
    RCORCHET        reduce using rule 2 (declaracion -> expression .)


state 5

    (3) declaracion -> expif .
    (32) expelse -> expif . ELSE LCORCHET declaracion RCORCHET

    CLOSE           reduce using rule 3 (declaracion -> expif .)
    RCORCHET        reduce using rule 3 (declaracion -> expif .)
    ELSE            shift and go to state 52


state 6

    (4) declaracion -> expelse .

    CLOSE           reduce using rule 4 (declaracion -> expelse .)
    RCORCHET        reduce using rule 4 (declaracion -> expelse .)


state 7

    (5) declaracion -> expresionlogica .

    CLOSE           reduce using rule 5 (declaracion -> expresionlogica .)
    RCORCHET        reduce using rule 5 (declaracion -> expresionlogica .)


state 8

    (6) declaracion -> declararvariable .

    CLOSE           reduce using rule 6 (declaracion -> declararvariable .)
    RCORCHET        reduce using rule 6 (declaracion -> declararvariable .)


state 9

    (7) declaracion -> creacionfunciones .

    CLOSE           reduce using rule 7 (declaracion -> creacionfunciones .)
    RCORCHET        reduce using rule 7 (declaracion -> creacionfunciones .)


state 10

    (8) declaracion -> returnvalores .

    CLOSE           reduce using rule 8 (declaracion -> returnvalores .)
    RCORCHET        reduce using rule 8 (declaracion -> returnvalores .)


state 11

    (9) declaracion -> operador_object .

    CLOSE           reduce using rule 9 (declaracion -> operador_object .)
    RCORCHET        reduce using rule 9 (declaracion -> operador_object .)


state 12

    (10) declaracion -> print .

    CLOSE           reduce using rule 10 (declaracion -> print .)
    RCORCHET        reduce using rule 10 (declaracion -> print .)


state 13

    (11) declaracion -> arreglos .

    CLOSE           reduce using rule 11 (declaracion -> arreglos .)
    RCORCHET        reduce using rule 11 (declaracion -> arreglos .)


state 14

    (12) declaracion -> while .

    CLOSE           reduce using rule 12 (declaracion -> while .)
    RCORCHET        reduce using rule 12 (declaracion -> while .)


state 15

    (13) declaracion -> foreach .

    CLOSE           reduce using rule 13 (declaracion -> foreach .)
    RCORCHET        reduce using rule 13 (declaracion -> foreach .)


state 16

    (14) declaracion -> clase .

    CLOSE           reduce using rule 14 (declaracion -> clase .)
    RCORCHET        reduce using rule 14 (declaracion -> clase .)


state 17

    (22) expression -> ID . EQUALS termino operadores termino END
    (50) expresionlogica -> ID . operadorlogico ID
    (55) declararvariable -> ID . EQUALS tipo END
    (65) operador_object -> ID . EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (51) operadorlogico -> . AND
    (52) operadorlogico -> . OR
    (53) operadorlogico -> . XOR
    (54) operadorlogico -> . NOT

    EQUALS          shift and go to state 53
    AND             shift and go to state 55
    OR              shift and go to state 56
    XOR             shift and go to state 57
    NOT             shift and go to state 58

    operadorlogico                 shift and go to state 54

state 18

    (31) expif -> funcion_condicion . LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET

    LPAREN          shift and go to state 59


state 19

    (15) creacionfunciones -> FUNCTION . FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET

    FNOMBRE         shift and go to state 60


state 20

    (19) returnvalores -> RETURN . termino END
    (20) returnvalores -> RETURN . creacionfunciones
    (28) termino -> . NUMBER
    (29) termino -> . ID
    (30) termino -> . DECIMAL
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET

    NUMBER          shift and go to state 63
    ID              shift and go to state 64
    DECIMAL         shift and go to state 65
    FUNCTION        shift and go to state 19

    termino                        shift and go to state 61
    creacionfunciones              shift and go to state 62

state 21

    (21) returnvalores -> empty .

    CLOSE           reduce using rule 21 (returnvalores -> empty .)
    RCORCHET        reduce using rule 21 (returnvalores -> empty .)


state 22

    (68) print -> funcion_print . LPAREN argument RPAREN END

    LPAREN          shift and go to state 66


state 23

    (76) arreglos -> funcion_arreglo . LPAREN ID RPAREN

    LPAREN          shift and go to state 67


state 24

    (38) while -> WHILE . LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET

    LPAREN          shift and go to state 68


state 25

    (39) foreach -> FOREACH . LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET

    LPAREN          shift and go to state 69


state 26

    (105) clase -> CLASS . FNOMBRE LCORCHET declaracion RCORCHET

    FNOMBRE         shift and go to state 70


state 27

    (33) funcion_condicion -> IF .

    LPAREN          reduce using rule 33 (funcion_condicion -> IF .)


state 28

    (34) funcion_condicion -> ELSEIF .

    LPAREN          reduce using rule 34 (funcion_condicion -> ELSEIF .)


state 29

    (71) funcion_print -> VAR_EXPORT .

    LPAREN          reduce using rule 71 (funcion_print -> VAR_EXPORT .)


state 30

    (72) funcion_print -> ECHO .

    LPAREN          reduce using rule 72 (funcion_print -> ECHO .)


state 31

    (73) funcion_print -> PRINT .

    LPAREN          reduce using rule 73 (funcion_print -> PRINT .)


state 32

    (74) funcion_print -> PRINT_R .

    LPAREN          reduce using rule 74 (funcion_print -> PRINT_R .)


state 33

    (75) funcion_print -> VAR_DUMP .

    LPAREN          reduce using rule 75 (funcion_print -> VAR_DUMP .)


state 34

    (77) funcion_arreglo -> SUFFLE .

    LPAREN          reduce using rule 77 (funcion_arreglo -> SUFFLE .)


state 35

    (78) funcion_arreglo -> ARRAY_MERGE .

    LPAREN          reduce using rule 78 (funcion_arreglo -> ARRAY_MERGE .)


state 36

    (79) funcion_arreglo -> ARRAY_SEARCH .

    LPAREN          reduce using rule 79 (funcion_arreglo -> ARRAY_SEARCH .)


state 37

    (80) funcion_arreglo -> ARRAY_RAND .

    LPAREN          reduce using rule 80 (funcion_arreglo -> ARRAY_RAND .)


state 38

    (81) funcion_arreglo -> ARRAY_CHUNK .

    LPAREN          reduce using rule 81 (funcion_arreglo -> ARRAY_CHUNK .)


state 39

    (82) funcion_arreglo -> STR_SPLIT .

    LPAREN          reduce using rule 82 (funcion_arreglo -> STR_SPLIT .)


state 40

    (83) funcion_arreglo -> PREG_SPLIT .

    LPAREN          reduce using rule 83 (funcion_arreglo -> PREG_SPLIT .)


state 41

    (84) funcion_arreglo -> ARRAY_UNIQUE .

    LPAREN          reduce using rule 84 (funcion_arreglo -> ARRAY_UNIQUE .)


state 42

    (85) funcion_arreglo -> COUNT .

    LPAREN          reduce using rule 85 (funcion_arreglo -> COUNT .)


state 43

    (86) funcion_arreglo -> SIZEOF .

    LPAREN          reduce using rule 86 (funcion_arreglo -> SIZEOF .)


state 44

    (87) funcion_arreglo -> ARRAY_PUSH .

    LPAREN          reduce using rule 87 (funcion_arreglo -> ARRAY_PUSH .)


state 45

    (88) funcion_arreglo -> SORT .

    LPAREN          reduce using rule 88 (funcion_arreglo -> SORT .)


state 46

    (89) funcion_arreglo -> ASORT .

    LPAREN          reduce using rule 89 (funcion_arreglo -> ASORT .)


state 47

    (90) funcion_arreglo -> KSORT .

    LPAREN          reduce using rule 90 (funcion_arreglo -> KSORT .)


state 48

    (91) funcion_arreglo -> UNSET .

    LPAREN          reduce using rule 91 (funcion_arreglo -> UNSET .)


state 49

    (92) funcion_arreglo -> IMPLODE .

    LPAREN          reduce using rule 92 (funcion_arreglo -> IMPLODE .)


state 50

    (93) funcion_arreglo -> EXPLODE .

    LPAREN          reduce using rule 93 (funcion_arreglo -> EXPLODE .)


state 51

    (1) programa -> OPEN declaracion CLOSE .

    $end            reduce using rule 1 (programa -> OPEN declaracion CLOSE .)


state 52

    (32) expelse -> expif ELSE . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 71


state 53

    (22) expression -> ID EQUALS . termino operadores termino END
    (55) declararvariable -> ID EQUALS . tipo END
    (65) operador_object -> ID EQUALS . OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (28) termino -> . NUMBER
    (29) termino -> . ID
    (30) termino -> . DECIMAL
    (56) tipo -> . boolean
    (57) tipo -> . NUMBER
    (58) tipo -> . TEXT
    (59) tipo -> . NULL
    (60) tipo -> . archivos
    (61) tipo -> . array
    (62) tipo -> . new
    (63) boolean -> . TRUE
    (64) boolean -> . FALSE
    (94) archivos -> . funcion_archivo LPAREN TEXT COMA TEXT RPAREN
    (66) array -> . ARRAY LPAREN termino RPAREN
    (67) new -> . NEW FNOMBRE
    (95) funcion_archivo -> . FGETS
    (96) funcion_archivo -> . FREAD
    (97) funcion_archivo -> . FSCANF
    (98) funcion_archivo -> . FPASSTHRU
    (99) funcion_archivo -> . FGETCSV
    (100) funcion_archivo -> . FGETC
    (101) funcion_archivo -> . FILE_GET_CONTENTS
    (102) funcion_archivo -> . READFILE
    (103) funcion_archivo -> . FILE
    (104) funcion_archivo -> . PARSE_INI_FILE

    OBJECT_OPERATOR shift and go to state 74
    NUMBER          shift and go to state 75
    ID              shift and go to state 64
    DECIMAL         shift and go to state 65
    TEXT            shift and go to state 77
    NULL            shift and go to state 78
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    ARRAY           shift and go to state 85
    NEW             shift and go to state 86
    FGETS           shift and go to state 87
    FREAD           shift and go to state 88
    FSCANF          shift and go to state 89
    FPASSTHRU       shift and go to state 90
    FGETCSV         shift and go to state 91
    FGETC           shift and go to state 92
    FILE_GET_CONTENTS shift and go to state 93
    READFILE        shift and go to state 94
    FILE            shift and go to state 95
    PARSE_INI_FILE  shift and go to state 96

    termino                        shift and go to state 72
    tipo                           shift and go to state 73
    boolean                        shift and go to state 76
    archivos                       shift and go to state 79
    array                          shift and go to state 80
    new                            shift and go to state 81
    funcion_archivo                shift and go to state 84

state 54

    (50) expresionlogica -> ID operadorlogico . ID

    ID              shift and go to state 97


state 55

    (51) operadorlogico -> AND .

    ID              reduce using rule 51 (operadorlogico -> AND .)


state 56

    (52) operadorlogico -> OR .

    ID              reduce using rule 52 (operadorlogico -> OR .)


state 57

    (53) operadorlogico -> XOR .

    ID              reduce using rule 53 (operadorlogico -> XOR .)


state 58

    (54) operadorlogico -> NOT .

    ID              reduce using rule 54 (operadorlogico -> NOT .)


state 59

    (31) expif -> funcion_condicion LPAREN . comparacion RPAREN LCORCHET declaracion RCORCHET
    (40) comparacion -> . termino operadorcomparacion termino
    (28) termino -> . NUMBER
    (29) termino -> . ID
    (30) termino -> . DECIMAL

    NUMBER          shift and go to state 63
    ID              shift and go to state 64
    DECIMAL         shift and go to state 65

    comparacion                    shift and go to state 98
    termino                        shift and go to state 99

state 60

    (15) creacionfunciones -> FUNCTION FNOMBRE . LPAREN RPAREN LCORCHET declaracion RCORCHET

    LPAREN          shift and go to state 100


state 61

    (19) returnvalores -> RETURN termino . END

    END             shift and go to state 101


state 62

    (20) returnvalores -> RETURN creacionfunciones .

    CLOSE           reduce using rule 20 (returnvalores -> RETURN creacionfunciones .)
    RCORCHET        reduce using rule 20 (returnvalores -> RETURN creacionfunciones .)


state 63

    (28) termino -> NUMBER .

    END             reduce using rule 28 (termino -> NUMBER .)
    IS_EQUAL        reduce using rule 28 (termino -> NUMBER .)
    IS_IDENTICAL    reduce using rule 28 (termino -> NUMBER .)
    IS_NOT_EQUAL    reduce using rule 28 (termino -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 28 (termino -> NUMBER .)
    IS_GREATER_OR_EQUAL reduce using rule 28 (termino -> NUMBER .)
    IS_SMALLER_OR_EQUAL reduce using rule 28 (termino -> NUMBER .)
    SPACESHIP       reduce using rule 28 (termino -> NUMBER .)
    MAYORQUE        reduce using rule 28 (termino -> NUMBER .)
    MENORQUE        reduce using rule 28 (termino -> NUMBER .)
    RPAREN          reduce using rule 28 (termino -> NUMBER .)


state 64

    (29) termino -> ID .

    END             reduce using rule 29 (termino -> ID .)
    PLUS            reduce using rule 29 (termino -> ID .)
    MINUS           reduce using rule 29 (termino -> ID .)
    DIVIDE          reduce using rule 29 (termino -> ID .)
    TIMES           reduce using rule 29 (termino -> ID .)
    MODULO          reduce using rule 29 (termino -> ID .)
    IS_EQUAL        reduce using rule 29 (termino -> ID .)
    IS_IDENTICAL    reduce using rule 29 (termino -> ID .)
    IS_NOT_EQUAL    reduce using rule 29 (termino -> ID .)
    IS_NOT_IDENTICAL reduce using rule 29 (termino -> ID .)
    IS_GREATER_OR_EQUAL reduce using rule 29 (termino -> ID .)
    IS_SMALLER_OR_EQUAL reduce using rule 29 (termino -> ID .)
    SPACESHIP       reduce using rule 29 (termino -> ID .)
    MAYORQUE        reduce using rule 29 (termino -> ID .)
    MENORQUE        reduce using rule 29 (termino -> ID .)
    RPAREN          reduce using rule 29 (termino -> ID .)


state 65

    (30) termino -> DECIMAL .

    END             reduce using rule 30 (termino -> DECIMAL .)
    PLUS            reduce using rule 30 (termino -> DECIMAL .)
    MINUS           reduce using rule 30 (termino -> DECIMAL .)
    DIVIDE          reduce using rule 30 (termino -> DECIMAL .)
    TIMES           reduce using rule 30 (termino -> DECIMAL .)
    MODULO          reduce using rule 30 (termino -> DECIMAL .)
    IS_EQUAL        reduce using rule 30 (termino -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 30 (termino -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 30 (termino -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 30 (termino -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 30 (termino -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 30 (termino -> DECIMAL .)
    SPACESHIP       reduce using rule 30 (termino -> DECIMAL .)
    MAYORQUE        reduce using rule 30 (termino -> DECIMAL .)
    MENORQUE        reduce using rule 30 (termino -> DECIMAL .)
    RPAREN          reduce using rule 30 (termino -> DECIMAL .)


state 66

    (68) print -> funcion_print LPAREN . argument RPAREN END
    (69) argument -> . ID
    (70) argument -> . TEXT

    ID              shift and go to state 103
    TEXT            shift and go to state 104

    argument                       shift and go to state 102

state 67

    (76) arreglos -> funcion_arreglo LPAREN . ID RPAREN

    ID              shift and go to state 105


state 68

    (38) while -> WHILE LPAREN . comparacion RPAREN LCORCHET control_bucle RCORCHET
    (40) comparacion -> . termino operadorcomparacion termino
    (28) termino -> . NUMBER
    (29) termino -> . ID
    (30) termino -> . DECIMAL

    NUMBER          shift and go to state 63
    ID              shift and go to state 64
    DECIMAL         shift and go to state 65

    comparacion                    shift and go to state 106
    termino                        shift and go to state 99

state 69

    (39) foreach -> FOREACH LPAREN . ID AS ID RPAREN LCORCHET control_bucle RCORCHET

    ID              shift and go to state 107


state 70

    (105) clase -> CLASS FNOMBRE . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 108


state 71

    (32) expelse -> expif ELSE LCORCHET . declaracion RCORCHET
    (2) declaracion -> . expression
    (3) declaracion -> . expif
    (4) declaracion -> . expelse
    (5) declaracion -> . expresionlogica
    (6) declaracion -> . declararvariable
    (7) declaracion -> . creacionfunciones
    (8) declaracion -> . returnvalores
    (9) declaracion -> . operador_object
    (10) declaracion -> . print
    (11) declaracion -> . arreglos
    (12) declaracion -> . while
    (13) declaracion -> . foreach
    (14) declaracion -> . clase
    (22) expression -> . ID EQUALS termino operadores termino END
    (31) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (32) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (50) expresionlogica -> . ID operadorlogico ID
    (55) declararvariable -> . ID EQUALS tipo END
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (19) returnvalores -> . RETURN termino END
    (20) returnvalores -> . RETURN creacionfunciones
    (21) returnvalores -> . empty
    (65) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (68) print -> . funcion_print LPAREN argument RPAREN END
    (76) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (38) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (39) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (105) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (33) funcion_condicion -> . IF
    (34) funcion_condicion -> . ELSEIF
    (16) empty -> .
    (71) funcion_print -> . VAR_EXPORT
    (72) funcion_print -> . ECHO
    (73) funcion_print -> . PRINT
    (74) funcion_print -> . PRINT_R
    (75) funcion_print -> . VAR_DUMP
    (77) funcion_arreglo -> . SUFFLE
    (78) funcion_arreglo -> . ARRAY_MERGE
    (79) funcion_arreglo -> . ARRAY_SEARCH
    (80) funcion_arreglo -> . ARRAY_RAND
    (81) funcion_arreglo -> . ARRAY_CHUNK
    (82) funcion_arreglo -> . STR_SPLIT
    (83) funcion_arreglo -> . PREG_SPLIT
    (84) funcion_arreglo -> . ARRAY_UNIQUE
    (85) funcion_arreglo -> . COUNT
    (86) funcion_arreglo -> . SIZEOF
    (87) funcion_arreglo -> . ARRAY_PUSH
    (88) funcion_arreglo -> . SORT
    (89) funcion_arreglo -> . ASORT
    (90) funcion_arreglo -> . KSORT
    (91) funcion_arreglo -> . UNSET
    (92) funcion_arreglo -> . IMPLODE
    (93) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 17
    FUNCTION        shift and go to state 19
    RETURN          shift and go to state 20
    WHILE           shift and go to state 24
    FOREACH         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 27
    ELSEIF          shift and go to state 28
    RCORCHET        reduce using rule 16 (empty -> .)
    VAR_EXPORT      shift and go to state 29
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    PRINT_R         shift and go to state 32
    VAR_DUMP        shift and go to state 33
    SUFFLE          shift and go to state 34
    ARRAY_MERGE     shift and go to state 35
    ARRAY_SEARCH    shift and go to state 36
    ARRAY_RAND      shift and go to state 37
    ARRAY_CHUNK     shift and go to state 38
    STR_SPLIT       shift and go to state 39
    PREG_SPLIT      shift and go to state 40
    ARRAY_UNIQUE    shift and go to state 41
    COUNT           shift and go to state 42
    SIZEOF          shift and go to state 43
    ARRAY_PUSH      shift and go to state 44
    SORT            shift and go to state 45
    ASORT           shift and go to state 46
    KSORT           shift and go to state 47
    UNSET           shift and go to state 48
    IMPLODE         shift and go to state 49
    EXPLODE         shift and go to state 50

    expif                          shift and go to state 5
    declaracion                    shift and go to state 109
    expression                     shift and go to state 4
    expelse                        shift and go to state 6
    expresionlogica                shift and go to state 7
    declararvariable               shift and go to state 8
    creacionfunciones              shift and go to state 9
    returnvalores                  shift and go to state 10
    operador_object                shift and go to state 11
    print                          shift and go to state 12
    arreglos                       shift and go to state 13
    while                          shift and go to state 14
    foreach                        shift and go to state 15
    clase                          shift and go to state 16
    funcion_condicion              shift and go to state 18
    empty                          shift and go to state 21
    funcion_print                  shift and go to state 22
    funcion_arreglo                shift and go to state 23

state 72

    (22) expression -> ID EQUALS termino . operadores termino END
    (23) operadores -> . PLUS
    (24) operadores -> . MINUS
    (25) operadores -> . DIVIDE
    (26) operadores -> . TIMES
    (27) operadores -> . MODULO

    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    DIVIDE          shift and go to state 113
    TIMES           shift and go to state 114
    MODULO          shift and go to state 115

    operadores                     shift and go to state 110

state 73

    (55) declararvariable -> ID EQUALS tipo . END

    END             shift and go to state 116


state 74

    (65) operador_object -> ID EQUALS OBJECT_OPERATOR . FNOMBRE LPAREN argumentos RPAREN END

    FNOMBRE         shift and go to state 117


state 75

    (28) termino -> NUMBER .
    (57) tipo -> NUMBER .

    PLUS            reduce using rule 28 (termino -> NUMBER .)
    MINUS           reduce using rule 28 (termino -> NUMBER .)
    DIVIDE          reduce using rule 28 (termino -> NUMBER .)
    TIMES           reduce using rule 28 (termino -> NUMBER .)
    MODULO          reduce using rule 28 (termino -> NUMBER .)
    END             reduce using rule 57 (tipo -> NUMBER .)


state 76

    (56) tipo -> boolean .

    END             reduce using rule 56 (tipo -> boolean .)


state 77

    (58) tipo -> TEXT .

    END             reduce using rule 58 (tipo -> TEXT .)


state 78

    (59) tipo -> NULL .

    END             reduce using rule 59 (tipo -> NULL .)


state 79

    (60) tipo -> archivos .

    END             reduce using rule 60 (tipo -> archivos .)


state 80

    (61) tipo -> array .

    END             reduce using rule 61 (tipo -> array .)


state 81

    (62) tipo -> new .

    END             reduce using rule 62 (tipo -> new .)


state 82

    (63) boolean -> TRUE .

    END             reduce using rule 63 (boolean -> TRUE .)


state 83

    (64) boolean -> FALSE .

    END             reduce using rule 64 (boolean -> FALSE .)


state 84

    (94) archivos -> funcion_archivo . LPAREN TEXT COMA TEXT RPAREN

    LPAREN          shift and go to state 118


state 85

    (66) array -> ARRAY . LPAREN termino RPAREN

    LPAREN          shift and go to state 119


state 86

    (67) new -> NEW . FNOMBRE

    FNOMBRE         shift and go to state 120


state 87

    (95) funcion_archivo -> FGETS .

    LPAREN          reduce using rule 95 (funcion_archivo -> FGETS .)


state 88

    (96) funcion_archivo -> FREAD .

    LPAREN          reduce using rule 96 (funcion_archivo -> FREAD .)


state 89

    (97) funcion_archivo -> FSCANF .

    LPAREN          reduce using rule 97 (funcion_archivo -> FSCANF .)


state 90

    (98) funcion_archivo -> FPASSTHRU .

    LPAREN          reduce using rule 98 (funcion_archivo -> FPASSTHRU .)


state 91

    (99) funcion_archivo -> FGETCSV .

    LPAREN          reduce using rule 99 (funcion_archivo -> FGETCSV .)


state 92

    (100) funcion_archivo -> FGETC .

    LPAREN          reduce using rule 100 (funcion_archivo -> FGETC .)


state 93

    (101) funcion_archivo -> FILE_GET_CONTENTS .

    LPAREN          reduce using rule 101 (funcion_archivo -> FILE_GET_CONTENTS .)


state 94

    (102) funcion_archivo -> READFILE .

    LPAREN          reduce using rule 102 (funcion_archivo -> READFILE .)


state 95

    (103) funcion_archivo -> FILE .

    LPAREN          reduce using rule 103 (funcion_archivo -> FILE .)


state 96

    (104) funcion_archivo -> PARSE_INI_FILE .

    LPAREN          reduce using rule 104 (funcion_archivo -> PARSE_INI_FILE .)


state 97

    (50) expresionlogica -> ID operadorlogico ID .

    CLOSE           reduce using rule 50 (expresionlogica -> ID operadorlogico ID .)
    RCORCHET        reduce using rule 50 (expresionlogica -> ID operadorlogico ID .)


state 98

    (31) expif -> funcion_condicion LPAREN comparacion . RPAREN LCORCHET declaracion RCORCHET

    RPAREN          shift and go to state 121


state 99

    (40) comparacion -> termino . operadorcomparacion termino
    (41) operadorcomparacion -> . IS_EQUAL
    (42) operadorcomparacion -> . IS_IDENTICAL
    (43) operadorcomparacion -> . IS_NOT_EQUAL
    (44) operadorcomparacion -> . IS_NOT_IDENTICAL
    (45) operadorcomparacion -> . IS_GREATER_OR_EQUAL
    (46) operadorcomparacion -> . IS_SMALLER_OR_EQUAL
    (47) operadorcomparacion -> . SPACESHIP
    (48) operadorcomparacion -> . MAYORQUE
    (49) operadorcomparacion -> . MENORQUE

    IS_EQUAL        shift and go to state 123
    IS_IDENTICAL    shift and go to state 124
    IS_NOT_EQUAL    shift and go to state 125
    IS_NOT_IDENTICAL shift and go to state 126
    IS_GREATER_OR_EQUAL shift and go to state 127
    IS_SMALLER_OR_EQUAL shift and go to state 128
    SPACESHIP       shift and go to state 129
    MAYORQUE        shift and go to state 130
    MENORQUE        shift and go to state 131

    operadorcomparacion            shift and go to state 122

state 100

    (15) creacionfunciones -> FUNCTION FNOMBRE LPAREN . RPAREN LCORCHET declaracion RCORCHET

    RPAREN          shift and go to state 132


state 101

    (19) returnvalores -> RETURN termino END .

    CLOSE           reduce using rule 19 (returnvalores -> RETURN termino END .)
    RCORCHET        reduce using rule 19 (returnvalores -> RETURN termino END .)


state 102

    (68) print -> funcion_print LPAREN argument . RPAREN END

    RPAREN          shift and go to state 133


state 103

    (69) argument -> ID .

    RPAREN          reduce using rule 69 (argument -> ID .)


state 104

    (70) argument -> TEXT .

    RPAREN          reduce using rule 70 (argument -> TEXT .)


state 105

    (76) arreglos -> funcion_arreglo LPAREN ID . RPAREN

    RPAREN          shift and go to state 134


state 106

    (38) while -> WHILE LPAREN comparacion . RPAREN LCORCHET control_bucle RCORCHET

    RPAREN          shift and go to state 135


state 107

    (39) foreach -> FOREACH LPAREN ID . AS ID RPAREN LCORCHET control_bucle RCORCHET

    AS              shift and go to state 136


state 108

    (105) clase -> CLASS FNOMBRE LCORCHET . declaracion RCORCHET
    (2) declaracion -> . expression
    (3) declaracion -> . expif
    (4) declaracion -> . expelse
    (5) declaracion -> . expresionlogica
    (6) declaracion -> . declararvariable
    (7) declaracion -> . creacionfunciones
    (8) declaracion -> . returnvalores
    (9) declaracion -> . operador_object
    (10) declaracion -> . print
    (11) declaracion -> . arreglos
    (12) declaracion -> . while
    (13) declaracion -> . foreach
    (14) declaracion -> . clase
    (22) expression -> . ID EQUALS termino operadores termino END
    (31) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (32) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (50) expresionlogica -> . ID operadorlogico ID
    (55) declararvariable -> . ID EQUALS tipo END
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (19) returnvalores -> . RETURN termino END
    (20) returnvalores -> . RETURN creacionfunciones
    (21) returnvalores -> . empty
    (65) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (68) print -> . funcion_print LPAREN argument RPAREN END
    (76) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (38) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (39) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (105) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (33) funcion_condicion -> . IF
    (34) funcion_condicion -> . ELSEIF
    (16) empty -> .
    (71) funcion_print -> . VAR_EXPORT
    (72) funcion_print -> . ECHO
    (73) funcion_print -> . PRINT
    (74) funcion_print -> . PRINT_R
    (75) funcion_print -> . VAR_DUMP
    (77) funcion_arreglo -> . SUFFLE
    (78) funcion_arreglo -> . ARRAY_MERGE
    (79) funcion_arreglo -> . ARRAY_SEARCH
    (80) funcion_arreglo -> . ARRAY_RAND
    (81) funcion_arreglo -> . ARRAY_CHUNK
    (82) funcion_arreglo -> . STR_SPLIT
    (83) funcion_arreglo -> . PREG_SPLIT
    (84) funcion_arreglo -> . ARRAY_UNIQUE
    (85) funcion_arreglo -> . COUNT
    (86) funcion_arreglo -> . SIZEOF
    (87) funcion_arreglo -> . ARRAY_PUSH
    (88) funcion_arreglo -> . SORT
    (89) funcion_arreglo -> . ASORT
    (90) funcion_arreglo -> . KSORT
    (91) funcion_arreglo -> . UNSET
    (92) funcion_arreglo -> . IMPLODE
    (93) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 17
    FUNCTION        shift and go to state 19
    RETURN          shift and go to state 20
    WHILE           shift and go to state 24
    FOREACH         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 27
    ELSEIF          shift and go to state 28
    RCORCHET        reduce using rule 16 (empty -> .)
    VAR_EXPORT      shift and go to state 29
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    PRINT_R         shift and go to state 32
    VAR_DUMP        shift and go to state 33
    SUFFLE          shift and go to state 34
    ARRAY_MERGE     shift and go to state 35
    ARRAY_SEARCH    shift and go to state 36
    ARRAY_RAND      shift and go to state 37
    ARRAY_CHUNK     shift and go to state 38
    STR_SPLIT       shift and go to state 39
    PREG_SPLIT      shift and go to state 40
    ARRAY_UNIQUE    shift and go to state 41
    COUNT           shift and go to state 42
    SIZEOF          shift and go to state 43
    ARRAY_PUSH      shift and go to state 44
    SORT            shift and go to state 45
    ASORT           shift and go to state 46
    KSORT           shift and go to state 47
    UNSET           shift and go to state 48
    IMPLODE         shift and go to state 49
    EXPLODE         shift and go to state 50

    declaracion                    shift and go to state 137
    expression                     shift and go to state 4
    expif                          shift and go to state 5
    expelse                        shift and go to state 6
    expresionlogica                shift and go to state 7
    declararvariable               shift and go to state 8
    creacionfunciones              shift and go to state 9
    returnvalores                  shift and go to state 10
    operador_object                shift and go to state 11
    print                          shift and go to state 12
    arreglos                       shift and go to state 13
    while                          shift and go to state 14
    foreach                        shift and go to state 15
    clase                          shift and go to state 16
    funcion_condicion              shift and go to state 18
    empty                          shift and go to state 21
    funcion_print                  shift and go to state 22
    funcion_arreglo                shift and go to state 23

state 109

    (32) expelse -> expif ELSE LCORCHET declaracion . RCORCHET

    RCORCHET        shift and go to state 138


state 110

    (22) expression -> ID EQUALS termino operadores . termino END
    (28) termino -> . NUMBER
    (29) termino -> . ID
    (30) termino -> . DECIMAL

    NUMBER          shift and go to state 63
    ID              shift and go to state 64
    DECIMAL         shift and go to state 65

    termino                        shift and go to state 139

state 111

    (23) operadores -> PLUS .

    NUMBER          reduce using rule 23 (operadores -> PLUS .)
    ID              reduce using rule 23 (operadores -> PLUS .)
    DECIMAL         reduce using rule 23 (operadores -> PLUS .)


state 112

    (24) operadores -> MINUS .

    NUMBER          reduce using rule 24 (operadores -> MINUS .)
    ID              reduce using rule 24 (operadores -> MINUS .)
    DECIMAL         reduce using rule 24 (operadores -> MINUS .)


state 113

    (25) operadores -> DIVIDE .

    NUMBER          reduce using rule 25 (operadores -> DIVIDE .)
    ID              reduce using rule 25 (operadores -> DIVIDE .)
    DECIMAL         reduce using rule 25 (operadores -> DIVIDE .)


state 114

    (26) operadores -> TIMES .

    NUMBER          reduce using rule 26 (operadores -> TIMES .)
    ID              reduce using rule 26 (operadores -> TIMES .)
    DECIMAL         reduce using rule 26 (operadores -> TIMES .)


state 115

    (27) operadores -> MODULO .

    NUMBER          reduce using rule 27 (operadores -> MODULO .)
    ID              reduce using rule 27 (operadores -> MODULO .)
    DECIMAL         reduce using rule 27 (operadores -> MODULO .)


state 116

    (55) declararvariable -> ID EQUALS tipo END .

    CLOSE           reduce using rule 55 (declararvariable -> ID EQUALS tipo END .)
    RCORCHET        reduce using rule 55 (declararvariable -> ID EQUALS tipo END .)


state 117

    (65) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE . LPAREN argumentos RPAREN END

    LPAREN          shift and go to state 140


state 118

    (94) archivos -> funcion_archivo LPAREN . TEXT COMA TEXT RPAREN

    TEXT            shift and go to state 141


state 119

    (66) array -> ARRAY LPAREN . termino RPAREN
    (28) termino -> . NUMBER
    (29) termino -> . ID
    (30) termino -> . DECIMAL

    NUMBER          shift and go to state 63
    ID              shift and go to state 64
    DECIMAL         shift and go to state 65

    termino                        shift and go to state 142

state 120

    (67) new -> NEW FNOMBRE .

    END             reduce using rule 67 (new -> NEW FNOMBRE .)


state 121

    (31) expif -> funcion_condicion LPAREN comparacion RPAREN . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 143


state 122

    (40) comparacion -> termino operadorcomparacion . termino
    (28) termino -> . NUMBER
    (29) termino -> . ID
    (30) termino -> . DECIMAL

    NUMBER          shift and go to state 63
    ID              shift and go to state 64
    DECIMAL         shift and go to state 65

    termino                        shift and go to state 144

state 123

    (41) operadorcomparacion -> IS_EQUAL .

    NUMBER          reduce using rule 41 (operadorcomparacion -> IS_EQUAL .)
    ID              reduce using rule 41 (operadorcomparacion -> IS_EQUAL .)
    DECIMAL         reduce using rule 41 (operadorcomparacion -> IS_EQUAL .)


state 124

    (42) operadorcomparacion -> IS_IDENTICAL .

    NUMBER          reduce using rule 42 (operadorcomparacion -> IS_IDENTICAL .)
    ID              reduce using rule 42 (operadorcomparacion -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 42 (operadorcomparacion -> IS_IDENTICAL .)


state 125

    (43) operadorcomparacion -> IS_NOT_EQUAL .

    NUMBER          reduce using rule 43 (operadorcomparacion -> IS_NOT_EQUAL .)
    ID              reduce using rule 43 (operadorcomparacion -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 43 (operadorcomparacion -> IS_NOT_EQUAL .)


state 126

    (44) operadorcomparacion -> IS_NOT_IDENTICAL .

    NUMBER          reduce using rule 44 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    ID              reduce using rule 44 (operadorcomparacion -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 44 (operadorcomparacion -> IS_NOT_IDENTICAL .)


state 127

    (45) operadorcomparacion -> IS_GREATER_OR_EQUAL .

    NUMBER          reduce using rule 45 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    ID              reduce using rule 45 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 45 (operadorcomparacion -> IS_GREATER_OR_EQUAL .)


state 128

    (46) operadorcomparacion -> IS_SMALLER_OR_EQUAL .

    NUMBER          reduce using rule 46 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    ID              reduce using rule 46 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 46 (operadorcomparacion -> IS_SMALLER_OR_EQUAL .)


state 129

    (47) operadorcomparacion -> SPACESHIP .

    NUMBER          reduce using rule 47 (operadorcomparacion -> SPACESHIP .)
    ID              reduce using rule 47 (operadorcomparacion -> SPACESHIP .)
    DECIMAL         reduce using rule 47 (operadorcomparacion -> SPACESHIP .)


state 130

    (48) operadorcomparacion -> MAYORQUE .

    NUMBER          reduce using rule 48 (operadorcomparacion -> MAYORQUE .)
    ID              reduce using rule 48 (operadorcomparacion -> MAYORQUE .)
    DECIMAL         reduce using rule 48 (operadorcomparacion -> MAYORQUE .)


state 131

    (49) operadorcomparacion -> MENORQUE .

    NUMBER          reduce using rule 49 (operadorcomparacion -> MENORQUE .)
    ID              reduce using rule 49 (operadorcomparacion -> MENORQUE .)
    DECIMAL         reduce using rule 49 (operadorcomparacion -> MENORQUE .)


state 132

    (15) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN . LCORCHET declaracion RCORCHET

    LCORCHET        shift and go to state 145


state 133

    (68) print -> funcion_print LPAREN argument RPAREN . END

    END             shift and go to state 146


state 134

    (76) arreglos -> funcion_arreglo LPAREN ID RPAREN .

    CLOSE           reduce using rule 76 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)
    RCORCHET        reduce using rule 76 (arreglos -> funcion_arreglo LPAREN ID RPAREN .)


state 135

    (38) while -> WHILE LPAREN comparacion RPAREN . LCORCHET control_bucle RCORCHET

    LCORCHET        shift and go to state 147


state 136

    (39) foreach -> FOREACH LPAREN ID AS . ID RPAREN LCORCHET control_bucle RCORCHET

    ID              shift and go to state 148


state 137

    (105) clase -> CLASS FNOMBRE LCORCHET declaracion . RCORCHET

    RCORCHET        shift and go to state 149


state 138

    (32) expelse -> expif ELSE LCORCHET declaracion RCORCHET .

    CLOSE           reduce using rule 32 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 32 (expelse -> expif ELSE LCORCHET declaracion RCORCHET .)


state 139

    (22) expression -> ID EQUALS termino operadores termino . END

    END             shift and go to state 150


state 140

    (65) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN . argumentos RPAREN END
    (17) argumentos -> . ID
    (18) argumentos -> . empty
    (16) empty -> .

    ID              shift and go to state 151
    RPAREN          reduce using rule 16 (empty -> .)

    argumentos                     shift and go to state 152
    empty                          shift and go to state 153

state 141

    (94) archivos -> funcion_archivo LPAREN TEXT . COMA TEXT RPAREN

    COMA            shift and go to state 154


state 142

    (66) array -> ARRAY LPAREN termino . RPAREN

    RPAREN          shift and go to state 155


state 143

    (31) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET . declaracion RCORCHET
    (2) declaracion -> . expression
    (3) declaracion -> . expif
    (4) declaracion -> . expelse
    (5) declaracion -> . expresionlogica
    (6) declaracion -> . declararvariable
    (7) declaracion -> . creacionfunciones
    (8) declaracion -> . returnvalores
    (9) declaracion -> . operador_object
    (10) declaracion -> . print
    (11) declaracion -> . arreglos
    (12) declaracion -> . while
    (13) declaracion -> . foreach
    (14) declaracion -> . clase
    (22) expression -> . ID EQUALS termino operadores termino END
    (31) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (32) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (50) expresionlogica -> . ID operadorlogico ID
    (55) declararvariable -> . ID EQUALS tipo END
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (19) returnvalores -> . RETURN termino END
    (20) returnvalores -> . RETURN creacionfunciones
    (21) returnvalores -> . empty
    (65) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (68) print -> . funcion_print LPAREN argument RPAREN END
    (76) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (38) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (39) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (105) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (33) funcion_condicion -> . IF
    (34) funcion_condicion -> . ELSEIF
    (16) empty -> .
    (71) funcion_print -> . VAR_EXPORT
    (72) funcion_print -> . ECHO
    (73) funcion_print -> . PRINT
    (74) funcion_print -> . PRINT_R
    (75) funcion_print -> . VAR_DUMP
    (77) funcion_arreglo -> . SUFFLE
    (78) funcion_arreglo -> . ARRAY_MERGE
    (79) funcion_arreglo -> . ARRAY_SEARCH
    (80) funcion_arreglo -> . ARRAY_RAND
    (81) funcion_arreglo -> . ARRAY_CHUNK
    (82) funcion_arreglo -> . STR_SPLIT
    (83) funcion_arreglo -> . PREG_SPLIT
    (84) funcion_arreglo -> . ARRAY_UNIQUE
    (85) funcion_arreglo -> . COUNT
    (86) funcion_arreglo -> . SIZEOF
    (87) funcion_arreglo -> . ARRAY_PUSH
    (88) funcion_arreglo -> . SORT
    (89) funcion_arreglo -> . ASORT
    (90) funcion_arreglo -> . KSORT
    (91) funcion_arreglo -> . UNSET
    (92) funcion_arreglo -> . IMPLODE
    (93) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 17
    FUNCTION        shift and go to state 19
    RETURN          shift and go to state 20
    WHILE           shift and go to state 24
    FOREACH         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 27
    ELSEIF          shift and go to state 28
    RCORCHET        reduce using rule 16 (empty -> .)
    VAR_EXPORT      shift and go to state 29
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    PRINT_R         shift and go to state 32
    VAR_DUMP        shift and go to state 33
    SUFFLE          shift and go to state 34
    ARRAY_MERGE     shift and go to state 35
    ARRAY_SEARCH    shift and go to state 36
    ARRAY_RAND      shift and go to state 37
    ARRAY_CHUNK     shift and go to state 38
    STR_SPLIT       shift and go to state 39
    PREG_SPLIT      shift and go to state 40
    ARRAY_UNIQUE    shift and go to state 41
    COUNT           shift and go to state 42
    SIZEOF          shift and go to state 43
    ARRAY_PUSH      shift and go to state 44
    SORT            shift and go to state 45
    ASORT           shift and go to state 46
    KSORT           shift and go to state 47
    UNSET           shift and go to state 48
    IMPLODE         shift and go to state 49
    EXPLODE         shift and go to state 50

    funcion_condicion              shift and go to state 18
    declaracion                    shift and go to state 156
    expression                     shift and go to state 4
    expif                          shift and go to state 5
    expelse                        shift and go to state 6
    expresionlogica                shift and go to state 7
    declararvariable               shift and go to state 8
    creacionfunciones              shift and go to state 9
    returnvalores                  shift and go to state 10
    operador_object                shift and go to state 11
    print                          shift and go to state 12
    arreglos                       shift and go to state 13
    while                          shift and go to state 14
    foreach                        shift and go to state 15
    clase                          shift and go to state 16
    empty                          shift and go to state 21
    funcion_print                  shift and go to state 22
    funcion_arreglo                shift and go to state 23

state 144

    (40) comparacion -> termino operadorcomparacion termino .

    RPAREN          reduce using rule 40 (comparacion -> termino operadorcomparacion termino .)


state 145

    (15) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET . declaracion RCORCHET
    (2) declaracion -> . expression
    (3) declaracion -> . expif
    (4) declaracion -> . expelse
    (5) declaracion -> . expresionlogica
    (6) declaracion -> . declararvariable
    (7) declaracion -> . creacionfunciones
    (8) declaracion -> . returnvalores
    (9) declaracion -> . operador_object
    (10) declaracion -> . print
    (11) declaracion -> . arreglos
    (12) declaracion -> . while
    (13) declaracion -> . foreach
    (14) declaracion -> . clase
    (22) expression -> . ID EQUALS termino operadores termino END
    (31) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (32) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (50) expresionlogica -> . ID operadorlogico ID
    (55) declararvariable -> . ID EQUALS tipo END
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (19) returnvalores -> . RETURN termino END
    (20) returnvalores -> . RETURN creacionfunciones
    (21) returnvalores -> . empty
    (65) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (68) print -> . funcion_print LPAREN argument RPAREN END
    (76) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (38) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (39) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (105) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (33) funcion_condicion -> . IF
    (34) funcion_condicion -> . ELSEIF
    (16) empty -> .
    (71) funcion_print -> . VAR_EXPORT
    (72) funcion_print -> . ECHO
    (73) funcion_print -> . PRINT
    (74) funcion_print -> . PRINT_R
    (75) funcion_print -> . VAR_DUMP
    (77) funcion_arreglo -> . SUFFLE
    (78) funcion_arreglo -> . ARRAY_MERGE
    (79) funcion_arreglo -> . ARRAY_SEARCH
    (80) funcion_arreglo -> . ARRAY_RAND
    (81) funcion_arreglo -> . ARRAY_CHUNK
    (82) funcion_arreglo -> . STR_SPLIT
    (83) funcion_arreglo -> . PREG_SPLIT
    (84) funcion_arreglo -> . ARRAY_UNIQUE
    (85) funcion_arreglo -> . COUNT
    (86) funcion_arreglo -> . SIZEOF
    (87) funcion_arreglo -> . ARRAY_PUSH
    (88) funcion_arreglo -> . SORT
    (89) funcion_arreglo -> . ASORT
    (90) funcion_arreglo -> . KSORT
    (91) funcion_arreglo -> . UNSET
    (92) funcion_arreglo -> . IMPLODE
    (93) funcion_arreglo -> . EXPLODE

    ID              shift and go to state 17
    FUNCTION        shift and go to state 19
    RETURN          shift and go to state 20
    WHILE           shift and go to state 24
    FOREACH         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 27
    ELSEIF          shift and go to state 28
    RCORCHET        reduce using rule 16 (empty -> .)
    VAR_EXPORT      shift and go to state 29
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    PRINT_R         shift and go to state 32
    VAR_DUMP        shift and go to state 33
    SUFFLE          shift and go to state 34
    ARRAY_MERGE     shift and go to state 35
    ARRAY_SEARCH    shift and go to state 36
    ARRAY_RAND      shift and go to state 37
    ARRAY_CHUNK     shift and go to state 38
    STR_SPLIT       shift and go to state 39
    PREG_SPLIT      shift and go to state 40
    ARRAY_UNIQUE    shift and go to state 41
    COUNT           shift and go to state 42
    SIZEOF          shift and go to state 43
    ARRAY_PUSH      shift and go to state 44
    SORT            shift and go to state 45
    ASORT           shift and go to state 46
    KSORT           shift and go to state 47
    UNSET           shift and go to state 48
    IMPLODE         shift and go to state 49
    EXPLODE         shift and go to state 50

    declaracion                    shift and go to state 157
    expression                     shift and go to state 4
    expif                          shift and go to state 5
    expelse                        shift and go to state 6
    expresionlogica                shift and go to state 7
    declararvariable               shift and go to state 8
    creacionfunciones              shift and go to state 9
    returnvalores                  shift and go to state 10
    operador_object                shift and go to state 11
    print                          shift and go to state 12
    arreglos                       shift and go to state 13
    while                          shift and go to state 14
    foreach                        shift and go to state 15
    clase                          shift and go to state 16
    funcion_condicion              shift and go to state 18
    empty                          shift and go to state 21
    funcion_print                  shift and go to state 22
    funcion_arreglo                shift and go to state 23

state 146

    (68) print -> funcion_print LPAREN argument RPAREN END .

    CLOSE           reduce using rule 68 (print -> funcion_print LPAREN argument RPAREN END .)
    RCORCHET        reduce using rule 68 (print -> funcion_print LPAREN argument RPAREN END .)


state 147

    (38) while -> WHILE LPAREN comparacion RPAREN LCORCHET . control_bucle RCORCHET
    (35) control_bucle -> . BREAK
    (36) control_bucle -> . CONTINUE
    (37) control_bucle -> . declaracion
    (2) declaracion -> . expression
    (3) declaracion -> . expif
    (4) declaracion -> . expelse
    (5) declaracion -> . expresionlogica
    (6) declaracion -> . declararvariable
    (7) declaracion -> . creacionfunciones
    (8) declaracion -> . returnvalores
    (9) declaracion -> . operador_object
    (10) declaracion -> . print
    (11) declaracion -> . arreglos
    (12) declaracion -> . while
    (13) declaracion -> . foreach
    (14) declaracion -> . clase
    (22) expression -> . ID EQUALS termino operadores termino END
    (31) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (32) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (50) expresionlogica -> . ID operadorlogico ID
    (55) declararvariable -> . ID EQUALS tipo END
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (19) returnvalores -> . RETURN termino END
    (20) returnvalores -> . RETURN creacionfunciones
    (21) returnvalores -> . empty
    (65) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (68) print -> . funcion_print LPAREN argument RPAREN END
    (76) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (38) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (39) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (105) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (33) funcion_condicion -> . IF
    (34) funcion_condicion -> . ELSEIF
    (16) empty -> .
    (71) funcion_print -> . VAR_EXPORT
    (72) funcion_print -> . ECHO
    (73) funcion_print -> . PRINT
    (74) funcion_print -> . PRINT_R
    (75) funcion_print -> . VAR_DUMP
    (77) funcion_arreglo -> . SUFFLE
    (78) funcion_arreglo -> . ARRAY_MERGE
    (79) funcion_arreglo -> . ARRAY_SEARCH
    (80) funcion_arreglo -> . ARRAY_RAND
    (81) funcion_arreglo -> . ARRAY_CHUNK
    (82) funcion_arreglo -> . STR_SPLIT
    (83) funcion_arreglo -> . PREG_SPLIT
    (84) funcion_arreglo -> . ARRAY_UNIQUE
    (85) funcion_arreglo -> . COUNT
    (86) funcion_arreglo -> . SIZEOF
    (87) funcion_arreglo -> . ARRAY_PUSH
    (88) funcion_arreglo -> . SORT
    (89) funcion_arreglo -> . ASORT
    (90) funcion_arreglo -> . KSORT
    (91) funcion_arreglo -> . UNSET
    (92) funcion_arreglo -> . IMPLODE
    (93) funcion_arreglo -> . EXPLODE

    BREAK           shift and go to state 159
    CONTINUE        shift and go to state 160
    ID              shift and go to state 17
    FUNCTION        shift and go to state 19
    RETURN          shift and go to state 20
    WHILE           shift and go to state 24
    FOREACH         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 27
    ELSEIF          shift and go to state 28
    RCORCHET        reduce using rule 16 (empty -> .)
    VAR_EXPORT      shift and go to state 29
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    PRINT_R         shift and go to state 32
    VAR_DUMP        shift and go to state 33
    SUFFLE          shift and go to state 34
    ARRAY_MERGE     shift and go to state 35
    ARRAY_SEARCH    shift and go to state 36
    ARRAY_RAND      shift and go to state 37
    ARRAY_CHUNK     shift and go to state 38
    STR_SPLIT       shift and go to state 39
    PREG_SPLIT      shift and go to state 40
    ARRAY_UNIQUE    shift and go to state 41
    COUNT           shift and go to state 42
    SIZEOF          shift and go to state 43
    ARRAY_PUSH      shift and go to state 44
    SORT            shift and go to state 45
    ASORT           shift and go to state 46
    KSORT           shift and go to state 47
    UNSET           shift and go to state 48
    IMPLODE         shift and go to state 49
    EXPLODE         shift and go to state 50

    control_bucle                  shift and go to state 158
    declaracion                    shift and go to state 161
    expression                     shift and go to state 4
    expif                          shift and go to state 5
    expelse                        shift and go to state 6
    expresionlogica                shift and go to state 7
    declararvariable               shift and go to state 8
    creacionfunciones              shift and go to state 9
    returnvalores                  shift and go to state 10
    operador_object                shift and go to state 11
    print                          shift and go to state 12
    arreglos                       shift and go to state 13
    while                          shift and go to state 14
    foreach                        shift and go to state 15
    clase                          shift and go to state 16
    funcion_condicion              shift and go to state 18
    empty                          shift and go to state 21
    funcion_print                  shift and go to state 22
    funcion_arreglo                shift and go to state 23

state 148

    (39) foreach -> FOREACH LPAREN ID AS ID . RPAREN LCORCHET control_bucle RCORCHET

    RPAREN          shift and go to state 162


state 149

    (105) clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .

    CLOSE           reduce using rule 105 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 105 (clase -> CLASS FNOMBRE LCORCHET declaracion RCORCHET .)


state 150

    (22) expression -> ID EQUALS termino operadores termino END .

    CLOSE           reduce using rule 22 (expression -> ID EQUALS termino operadores termino END .)
    RCORCHET        reduce using rule 22 (expression -> ID EQUALS termino operadores termino END .)


state 151

    (17) argumentos -> ID .

    RPAREN          reduce using rule 17 (argumentos -> ID .)


state 152

    (65) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos . RPAREN END

    RPAREN          shift and go to state 163


state 153

    (18) argumentos -> empty .

    RPAREN          reduce using rule 18 (argumentos -> empty .)


state 154

    (94) archivos -> funcion_archivo LPAREN TEXT COMA . TEXT RPAREN

    TEXT            shift and go to state 164


state 155

    (66) array -> ARRAY LPAREN termino RPAREN .

    END             reduce using rule 66 (array -> ARRAY LPAREN termino RPAREN .)


state 156

    (31) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion . RCORCHET

    RCORCHET        shift and go to state 165


state 157

    (15) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion . RCORCHET

    RCORCHET        shift and go to state 166


state 158

    (38) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle . RCORCHET

    RCORCHET        shift and go to state 167


state 159

    (35) control_bucle -> BREAK .

    RCORCHET        reduce using rule 35 (control_bucle -> BREAK .)


state 160

    (36) control_bucle -> CONTINUE .

    RCORCHET        reduce using rule 36 (control_bucle -> CONTINUE .)


state 161

    (37) control_bucle -> declaracion .

    RCORCHET        reduce using rule 37 (control_bucle -> declaracion .)


state 162

    (39) foreach -> FOREACH LPAREN ID AS ID RPAREN . LCORCHET control_bucle RCORCHET

    LCORCHET        shift and go to state 168


state 163

    (65) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN . END

    END             shift and go to state 169


state 164

    (94) archivos -> funcion_archivo LPAREN TEXT COMA TEXT . RPAREN

    RPAREN          shift and go to state 170


state 165

    (31) expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .

    ELSE            reduce using rule 31 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    CLOSE           reduce using rule 31 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 31 (expif -> funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET .)


state 166

    (15) creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .

    CLOSE           reduce using rule 15 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)
    RCORCHET        reduce using rule 15 (creacionfunciones -> FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET .)


state 167

    (38) while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .

    CLOSE           reduce using rule 38 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)
    RCORCHET        reduce using rule 38 (while -> WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET .)


state 168

    (39) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET . control_bucle RCORCHET
    (35) control_bucle -> . BREAK
    (36) control_bucle -> . CONTINUE
    (37) control_bucle -> . declaracion
    (2) declaracion -> . expression
    (3) declaracion -> . expif
    (4) declaracion -> . expelse
    (5) declaracion -> . expresionlogica
    (6) declaracion -> . declararvariable
    (7) declaracion -> . creacionfunciones
    (8) declaracion -> . returnvalores
    (9) declaracion -> . operador_object
    (10) declaracion -> . print
    (11) declaracion -> . arreglos
    (12) declaracion -> . while
    (13) declaracion -> . foreach
    (14) declaracion -> . clase
    (22) expression -> . ID EQUALS termino operadores termino END
    (31) expif -> . funcion_condicion LPAREN comparacion RPAREN LCORCHET declaracion RCORCHET
    (32) expelse -> . expif ELSE LCORCHET declaracion RCORCHET
    (50) expresionlogica -> . ID operadorlogico ID
    (55) declararvariable -> . ID EQUALS tipo END
    (15) creacionfunciones -> . FUNCTION FNOMBRE LPAREN RPAREN LCORCHET declaracion RCORCHET
    (19) returnvalores -> . RETURN termino END
    (20) returnvalores -> . RETURN creacionfunciones
    (21) returnvalores -> . empty
    (65) operador_object -> . ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END
    (68) print -> . funcion_print LPAREN argument RPAREN END
    (76) arreglos -> . funcion_arreglo LPAREN ID RPAREN
    (38) while -> . WHILE LPAREN comparacion RPAREN LCORCHET control_bucle RCORCHET
    (39) foreach -> . FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET
    (105) clase -> . CLASS FNOMBRE LCORCHET declaracion RCORCHET
    (33) funcion_condicion -> . IF
    (34) funcion_condicion -> . ELSEIF
    (16) empty -> .
    (71) funcion_print -> . VAR_EXPORT
    (72) funcion_print -> . ECHO
    (73) funcion_print -> . PRINT
    (74) funcion_print -> . PRINT_R
    (75) funcion_print -> . VAR_DUMP
    (77) funcion_arreglo -> . SUFFLE
    (78) funcion_arreglo -> . ARRAY_MERGE
    (79) funcion_arreglo -> . ARRAY_SEARCH
    (80) funcion_arreglo -> . ARRAY_RAND
    (81) funcion_arreglo -> . ARRAY_CHUNK
    (82) funcion_arreglo -> . STR_SPLIT
    (83) funcion_arreglo -> . PREG_SPLIT
    (84) funcion_arreglo -> . ARRAY_UNIQUE
    (85) funcion_arreglo -> . COUNT
    (86) funcion_arreglo -> . SIZEOF
    (87) funcion_arreglo -> . ARRAY_PUSH
    (88) funcion_arreglo -> . SORT
    (89) funcion_arreglo -> . ASORT
    (90) funcion_arreglo -> . KSORT
    (91) funcion_arreglo -> . UNSET
    (92) funcion_arreglo -> . IMPLODE
    (93) funcion_arreglo -> . EXPLODE

    BREAK           shift and go to state 159
    CONTINUE        shift and go to state 160
    ID              shift and go to state 17
    FUNCTION        shift and go to state 19
    RETURN          shift and go to state 20
    WHILE           shift and go to state 24
    FOREACH         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 27
    ELSEIF          shift and go to state 28
    RCORCHET        reduce using rule 16 (empty -> .)
    VAR_EXPORT      shift and go to state 29
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    PRINT_R         shift and go to state 32
    VAR_DUMP        shift and go to state 33
    SUFFLE          shift and go to state 34
    ARRAY_MERGE     shift and go to state 35
    ARRAY_SEARCH    shift and go to state 36
    ARRAY_RAND      shift and go to state 37
    ARRAY_CHUNK     shift and go to state 38
    STR_SPLIT       shift and go to state 39
    PREG_SPLIT      shift and go to state 40
    ARRAY_UNIQUE    shift and go to state 41
    COUNT           shift and go to state 42
    SIZEOF          shift and go to state 43
    ARRAY_PUSH      shift and go to state 44
    SORT            shift and go to state 45
    ASORT           shift and go to state 46
    KSORT           shift and go to state 47
    UNSET           shift and go to state 48
    IMPLODE         shift and go to state 49
    EXPLODE         shift and go to state 50

    control_bucle                  shift and go to state 171
    declaracion                    shift and go to state 161
    expression                     shift and go to state 4
    expif                          shift and go to state 5
    expelse                        shift and go to state 6
    expresionlogica                shift and go to state 7
    declararvariable               shift and go to state 8
    creacionfunciones              shift and go to state 9
    returnvalores                  shift and go to state 10
    operador_object                shift and go to state 11
    print                          shift and go to state 12
    arreglos                       shift and go to state 13
    while                          shift and go to state 14
    foreach                        shift and go to state 15
    clase                          shift and go to state 16
    funcion_condicion              shift and go to state 18
    empty                          shift and go to state 21
    funcion_print                  shift and go to state 22
    funcion_arreglo                shift and go to state 23

state 169

    (65) operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .

    CLOSE           reduce using rule 65 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)
    RCORCHET        reduce using rule 65 (operador_object -> ID EQUALS OBJECT_OPERATOR FNOMBRE LPAREN argumentos RPAREN END .)


state 170

    (94) archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN .

    END             reduce using rule 94 (archivos -> funcion_archivo LPAREN TEXT COMA TEXT RPAREN .)


state 171

    (39) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle . RCORCHET

    RCORCHET        shift and go to state 172


state 172

    (39) foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET .

    CLOSE           reduce using rule 39 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET .)
    RCORCHET        reduce using rule 39 (foreach -> FOREACH LPAREN ID AS ID RPAREN LCORCHET control_bucle RCORCHET .)

